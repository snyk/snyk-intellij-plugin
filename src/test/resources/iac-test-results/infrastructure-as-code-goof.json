[
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\api-service.json",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\api-service.json",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.LaunchConfig.Properties.BlockDeviceMappings",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`"
        },
        "lineNumber": 291,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "[DocId:0]",
          "Resources",
          "LaunchConfig",
          "Properties",
          "BlockDeviceMappings"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\aurora.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\aurora.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
        "id": "SNYK-CC-AWS-422",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[DatabaseAlarmTopic].Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "subType": "SNS",
        "issue": "SNS topic is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id "
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "path": [
          "[DocId:0]",
          "Resources[DatabaseAlarmTopic]",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.StorageEncrypted` attribute to `true`",
        "id": "SNYK-CC-TF-201",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources[AuroraInstance1].Properties.StorageEncrypted",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "subType": "RDS",
        "issue": "The DB instance storage is not encrypted by default",
        "publicId": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `Properties.StorageEncrypted` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "path": [
          "[DocId:0]",
          "Resources[AuroraInstance1]",
          "Properties",
          "StorageEncrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
        "id": "SNYK-CC-AWS-414",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "msg": "Resources[AuroraInstance0].Properties.EnableIAMDatabaseAuthentication",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "subType": "RDS",
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "publicId": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`."
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "path": [
          "[DocId:0]",
          "Resources[AuroraInstance0]",
          "Properties",
          "EnableIAMDatabaseAuthentication"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.StorageEncrypted` attribute to `true`",
        "id": "SNYK-CC-AWS-439",
        "impact": "In the occurrence of a data breach, sensitive data stored on the RDS cluster will be accessible",
        "msg": "Resources[AuroraCluster].Properties.StorageEncrypted",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to `true`"
        },
        "subType": "RDS",
        "issue": "RDS cluster does not have encryption enabled which means data is stored on cluster in plaintext",
        "publicId": "SNYK-CC-AWS-439",
        "title": "RDS cluster does not have encryption enabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbcluster.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "RDS cluster does not have encryption enabled which means data is stored on cluster in plaintext",
          "impact": "In the occurrence of a data breach, sensitive data stored on the RDS cluster will be accessible",
          "resolve": "Set `Properties.StorageEncrypted` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-439",
        "path": [
          "[DocId:0]",
          "Resources[AuroraCluster]",
          "Properties",
          "StorageEncrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
        "id": "SNYK-CC-TF-55",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.DatabaseAlarmTopic.Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "subType": "SNS",
        "issue": "The SNS topic is not encrypted at rest",
        "publicId": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`"
        },
        "lineNumber": 183,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "path": [
          "[DocId:0]",
          "Resources",
          "DatabaseAlarmTopic",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.StorageEncrypted` attribute to `true`",
        "id": "SNYK-CC-TF-201",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources[AuroraInstance0].Properties.StorageEncrypted",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "subType": "RDS",
        "issue": "The DB instance storage is not encrypted by default",
        "publicId": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `Properties.StorageEncrypted` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "path": [
          "[DocId:0]",
          "Resources[AuroraInstance0]",
          "Properties",
          "StorageEncrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
        "id": "SNYK-CC-AWS-414",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "msg": "Resources[AuroraInstance1].Properties.EnableIAMDatabaseAuthentication",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "subType": "RDS",
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "publicId": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`."
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "path": [
          "[DocId:0]",
          "Resources[AuroraInstance1]",
          "Properties",
          "EnableIAMDatabaseAuthentication"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\bastion.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\bastion.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `DisableApiTermination` attribute with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "Resources[BastionHost].Properties.DisableApiTermination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `DisableApiTermination` attribute with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "[DocId:0]",
          "Resources[BastionHost]",
          "Properties",
          "DisableApiTermination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.BastionHost.Properties.BlockDeviceMappings",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`"
        },
        "lineNumber": 212,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "[DocId:0]",
          "Resources",
          "BastionHost",
          "Properties",
          "BlockDeviceMappings"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsKeyId` attribute with customer managed key id",
        "id": "SNYK-CC-AWS-415",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[BastionSecureLogGroup].Properties.KmsKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "subType": "CloudWatch",
        "issue": "Log group is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsKeyId` attribute with customer managed key id"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecureLogGroup]",
          "Properties",
          "KmsKeyId"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\billing-alerts.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\billing-alerts.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
        "id": "SNYK-CC-TF-55",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.BillingAlarmTopic.Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "subType": "SNS",
        "issue": "The SNS topic is not encrypted at rest",
        "publicId": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "path": [
          "[DocId:0]",
          "Resources",
          "BillingAlarmTopic",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
        "id": "SNYK-CC-AWS-422",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[BillingAlarmTopic].Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "subType": "SNS",
        "issue": "SNS topic is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id "
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "path": [
          "[DocId:0]",
          "Resources[BillingAlarmTopic]",
          "Properties",
          "KmsMasterKeyId"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\db.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\db.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
        "id": "SNYK-CC-TF-55",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.DatabaseAlarmTopic.Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "subType": "SNS",
        "issue": "The SNS topic is not encrypted at rest",
        "publicId": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`"
        },
        "lineNumber": 203,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "path": [
          "[DocId:0]",
          "Resources",
          "DatabaseAlarmTopic",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
        "id": "SNYK-CC-AWS-422",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[DatabaseAlarmTopic].Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "subType": "SNS",
        "issue": "SNS topic is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id "
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "path": [
          "[DocId:0]",
          "Resources[DatabaseAlarmTopic]",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.StorageEncrypted` attribute to `true`",
        "id": "SNYK-CC-TF-201",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources[Database].Properties.StorageEncrypted",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "subType": "RDS",
        "issue": "The DB instance storage is not encrypted by default",
        "publicId": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `Properties.StorageEncrypted` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "path": [
          "[DocId:0]",
          "Resources[Database]",
          "Properties",
          "StorageEncrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
        "id": "SNYK-CC-AWS-414",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "msg": "Resources[Database].Properties.EnableIAMDatabaseAuthentication",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "subType": "RDS",
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "publicId": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`."
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "path": [
          "[DocId:0]",
          "Resources[Database]",
          "Properties",
          "EnableIAMDatabaseAuthentication"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\elastic-beanstalk.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\elastic-beanstalk.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `Actions` and `Resources` attributes to limited subset, e.g `Actions: ['s3:Create*']`",
        "id": "SNYK-CC-TF-119",
        "impact": "Any identity with this policy will have full administrative rights in the account",
        "msg": "Resources[AppPolicies].Properties.PolicyDocument",
        "remediation": {
          "cloudformation": "Set `Actions` and `Resources` attributes to limited subset, e.g `Actions: ['s3:Create*']`",
          "terraform": "Set `Actions` and `Resources` attributes to limited subset, e.g `Actions: ['s3:Create*']`"
        },
        "subType": "IAM",
        "issue": "The IAM Policy grants all permissions to all resources",
        "publicId": "SNYK-CC-TF-119",
        "title": "IAM Policy grants full administrative rights",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM Policy grants all permissions to all resources",
          "impact": "Any identity with this policy will have full administrative rights in the account",
          "resolve": "Set `Actions` and `Resources` attributes to limited subset, e.g `Actions: ['s3:Create*']`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-119",
        "path": [
          "[DocId:0]",
          "Resources[AppPolicies]",
          "Properties",
          "PolicyDocument"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\elasticache.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\elasticache.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `Properties.SnapshotRetentionLimit` to `1` or more",
        "id": "SNYK-CC-AWS-407",
        "impact": "No cluster backups will be saved automatically, rebuilding after disaster may be more difficult",
        "msg": "Resources[ElastiCacheCluster].Properties.SnapshotRetentionLimit",
        "remediation": {
          "cloudformation": "Set `Properties.SnapshotRetentionLimit` to `1` or more",
          "terraform": "Set `resource.snapshot_retention_limit` to `1` or more"
        },
        "subType": "ElastiCache",
        "issue": "ElastiCache cluster automatic backup is disabled",
        "publicId": "SNYK-CC-AWS-407",
        "title": "ElastiCache automatic backup is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_Snapshot.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ElastiCache cluster automatic backup is disabled",
          "impact": "No cluster backups will be saved automatically, rebuilding after disaster may be more difficult",
          "resolve": "Set `Properties.SnapshotRetentionLimit` to `1` or more"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-407",
        "path": [
          "[DocId:0]",
          "Resources[ElastiCacheCluster]",
          "Properties",
          "SnapshotRetentionLimit"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\fargate-service.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\fargate-service.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `Properties.ImageScanningConfiguration` attribute to `true`",
        "id": "SNYK-CC-TF-61",
        "impact": "The known vulnerabilities will not be automatically discovered",
        "msg": "Resources[EcrDockerRepository].Properties.ImageScanningConfiguration",
        "remediation": {
          "cloudformation": "Set `Properties.ImageScanningConfiguration` attribute to `true`",
          "terraform": "Set `image_scanning_configuration.scan_on_push` attribute to `true`"
        },
        "subType": "ECR",
        "issue": "The ECR image scan for known vulnerabilities is disabled",
        "publicId": "SNYK-CC-TF-61",
        "title": "ECR image scanning is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ECR image scan for known vulnerabilities is disabled",
          "impact": "The known vulnerabilities will not be automatically discovered",
          "resolve": "Set `Properties.ImageScanningConfiguration` attribute to `true`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-61",
        "path": [
          "[DocId:0]",
          "Resources[EcrDockerRepository]",
          "Properties",
          "ImageScanningConfiguration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.VersioningConfiguration.Status",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "VersioningConfiguration",
          "Status"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.BlockPublicPolicy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "BlockPublicPolicy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.IgnorePublicAcls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "IgnorePublicAcls"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsKeyId` attribute with customer managed key id",
        "id": "SNYK-CC-AWS-415",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[LogGroup].Properties.KmsKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "subType": "CloudWatch",
        "issue": "Log group is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsKeyId` attribute with customer managed key id"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "path": [
          "[DocId:0]",
          "Resources[LogGroup]",
          "Properties",
          "KmsKeyId"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.BlockPublicAcls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "BlockPublicAcls"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[EcrDockerRepository].Properties.EncryptionConfiguration.KmsKey",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "[DocId:0]",
          "Resources[EcrDockerRepository]",
          "Properties",
          "EncryptionConfiguration",
          "KmsKey"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "Resources[EcrDockerRepository].Properties.ImageTagMutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "[DocId:0]",
          "Resources[EcrDockerRepository]",
          "Properties",
          "ImageTagMutability"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`"
        },
        "lineNumber": -1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "RestrictPublicBuckets"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\fargate.yml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\fargate.yml",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `Properties.ImageScanningConfiguration` attribute to `true`",
        "id": "SNYK-CC-TF-61",
        "impact": "The known vulnerabilities will not be automatically discovered",
        "msg": "Resources[EcrDockerRepository].Properties.ImageScanningConfiguration",
        "remediation": {
          "cloudformation": "Set `Properties.ImageScanningConfiguration` attribute to `true`",
          "terraform": "Set `image_scanning_configuration.scan_on_push` attribute to `true`"
        },
        "subType": "ECR",
        "issue": "The ECR image scan for known vulnerabilities is disabled",
        "publicId": "SNYK-CC-TF-61",
        "title": "ECR image scanning is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ECR image scan for known vulnerabilities is disabled",
          "impact": "The known vulnerabilities will not be automatically discovered",
          "resolve": "Set `Properties.ImageScanningConfiguration` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-61",
        "path": [
          "[DocId:0]",
          "Resources[EcrDockerRepository]",
          "Properties",
          "ImageScanningConfiguration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.VersioningConfiguration.Status",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "VersioningConfiguration",
          "Status"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "Resources[DefaultContainerBucket].Properties.PublicAccessBlockConfiguration.BlockPublicAcls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "[DocId:0]",
          "Resources[DefaultContainerBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "BlockPublicAcls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.BlockPublicAcls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "BlockPublicAcls"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[EcrDockerRepository].Properties.EncryptionConfiguration.KmsKey",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "[DocId:0]",
          "Resources[EcrDockerRepository]",
          "Properties",
          "EncryptionConfiguration",
          "KmsKey"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "Resources[DefaultContainerBucket].Properties.PublicAccessBlockConfiguration.BlockPublicPolicy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "[DocId:0]",
          "Resources[DefaultContainerBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "BlockPublicPolicy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
        "id": "SNYK-CC-AWS-405",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "msg": "Resources[ApplicationLoadBalancer].Properties.LoadBalancerAttributes",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The application load balancer is not set to drop invalid headers.",
        "publicId": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "path": [
          "[DocId:0]",
          "Resources[ApplicationLoadBalancer]",
          "Properties",
          "LoadBalancerAttributes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.Scheme` attribute to `internal`",
        "id": "SNYK-CC-TF-48",
        "impact": "Increases attack vector reachability",
        "msg": "Resources.ApplicationLoadBalancer.Properties.Scheme",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "subType": "Elastic Load Balancing (ELB Classic)",
        "issue": "Load balancer is internet facing",
        "publicId": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `Properties.Scheme` attribute to `internal`"
        },
        "lineNumber": 569,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "path": [
          "[DocId:0]",
          "Resources",
          "ApplicationLoadBalancer",
          "Properties",
          "Scheme"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "Resources[EcrDockerRepository].Properties.ImageTagMutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "[DocId:0]",
          "Resources[EcrDockerRepository]",
          "Properties",
          "ImageTagMutability"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "Resources[DefaultContainerBucket].Properties.VersioningConfiguration.Status",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "[DocId:0]",
          "Resources[DefaultContainerBucket]",
          "Properties",
          "VersioningConfiguration",
          "Status"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
        "id": "SNYK-CC-TF-55",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.LoadBalancerAlarmTopic.Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "subType": "SNS",
        "issue": "The SNS topic is not encrypted at rest",
        "publicId": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`"
        },
        "lineNumber": 893,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "path": [
          "[DocId:0]",
          "Resources",
          "LoadBalancerAlarmTopic",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.BlockPublicPolicy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "BlockPublicPolicy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "Resources[DefaultContainerBucket].Properties.PublicAccessBlockConfiguration.IgnorePublicAcls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "[DocId:0]",
          "Resources[DefaultContainerBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "IgnorePublicAcls"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
        "id": "SNYK-CC-AWS-422",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[LoadBalancerAlarmTopic].Properties.KmsMasterKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "subType": "SNS",
        "issue": "SNS topic is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id "
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "path": [
          "[DocId:0]",
          "Resources[LoadBalancerAlarmTopic]",
          "Properties",
          "KmsMasterKeyId"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.IgnorePublicAcls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "IgnorePublicAcls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "Resources[DefaultContainerBucket].Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "[DocId:0]",
          "Resources[DefaultContainerBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "RestrictPublicBuckets"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.KmsKeyId` attribute with customer managed key id",
        "id": "SNYK-CC-AWS-415",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "Resources[DefaultLogGroup].Properties.KmsKeyId",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "subType": "CloudWatch",
        "issue": "Log group is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `Properties.KmsKeyId` attribute with customer managed key id"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "path": [
          "[DocId:0]",
          "Resources[DefaultLogGroup]",
          "Properties",
          "KmsKeyId"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "Resources[CodePipelineArtifactBucket].Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "[DocId:0]",
          "Resources[CodePipelineArtifactBucket]",
          "Properties",
          "PublicAccessBlockConfiguration",
          "RestrictPublicBuckets"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.ClusterSettings.Name` attribute to `containerInsights`, and `Properties.ClusterSettings.Value` to `enabled`",
        "id": "SNYK-CC-TF-128",
        "impact": "Performance log events will not be collected and displayed in CloudWatch",
        "msg": "Resources[FargateEcsCluster].Properties.ClusterSettings",
        "remediation": {
          "cloudformation": "Set `Properties.ClusterSettings.Name` attribute to `containerInsights`, and `Properties.ClusterSettings.Value` to `enabled`",
          "terraform": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "subType": "ECS",
        "issue": "ECS ContainerInsights will not be enabled on the cluster",
        "publicId": "SNYK-CC-TF-128",
        "title": "ECS ContainerInsights disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECS ContainerInsights will not be enabled on the cluster",
          "impact": "Performance log events will not be collected and displayed in CloudWatch",
          "resolve": "Set `Properties.ClusterSettings.Name` attribute to `containerInsights`, and `Properties.ClusterSettings.Value` to `enabled`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-128",
        "path": [
          "[DocId:0]",
          "Resources[FargateEcsCluster]",
          "Properties",
          "ClusterSettings"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\single-instance.json",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\single-instance.json",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "Resources.EC2Instance.Properties.BlockDeviceMappings",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`"
        },
        "lineNumber": 486,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "[DocId:0]",
          "Resources",
          "EC2Instance",
          "Properties",
          "BlockDeviceMappings"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `DisableApiTermination` attribute with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "Resources[EC2Instance].Properties.DisableApiTermination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `DisableApiTermination` attribute with value `true`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "[DocId:0]",
          "Resources[EC2Instance]",
          "Properties",
          "DisableApiTermination"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "cloudformation\\vpc.json",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\cloudformation\\vpc.json",
    "packageManager": "cloudformationconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "cloudformationconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[BastionSecurityGroup].Properties.SecurityGroupEgress[1].CidrIp",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[1]",
          "CidrIp"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "id": "SNYK-CC-TF-1",
        "impact": "That potentially everyone can access your resource",
        "msg": "Resources.ELBSecurityGroup.Properties.SecurityGroupIngress[0]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 254,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "path": [
          "[DocId:0]",
          "Resources",
          "ELBSecurityGroup",
          "Properties",
          "SecurityGroupIngress[0]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-72",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[BastionSecurityGroup].Properties.SecurityGroupEgress[1]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[1]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[BastionSecurityGroup].Properties.SecurityGroupEgress[2].CidrIp",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[2]",
          "CidrIp"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-72",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[BastionSecurityGroup].Properties.SecurityGroupEgress[2]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[2]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[DbSecurityGroup].Properties.SecurityGroupEgress[1].CidrIp",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "[DocId:0]",
          "Resources[DbSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[1]",
          "CidrIp"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-72",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[DbSecurityGroup].Properties.SecurityGroupEgress[0]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "path": [
          "[DocId:0]",
          "Resources[DbSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[0]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[BastionSecurityGroup].Properties.SecurityGroupEgress[0].CidrIp",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[0]",
          "CidrIp"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-72",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[BastionSecurityGroup].Properties.SecurityGroupEgress[0]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "path": [
          "[DocId:0]",
          "Resources[BastionSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[0]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-72",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[DbSecurityGroup].Properties.SecurityGroupEgress[1]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-72",
        "title": "Rule allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-72",
        "path": [
          "[DocId:0]",
          "Resources[DbSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[1]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "Resources[DbSecurityGroup].Properties.SecurityGroupEgress[0].CidrIp",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "[DocId:0]",
          "Resources[DbSecurityGroup]",
          "Properties",
          "SecurityGroupEgress[0]",
          "CidrIp"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\PrivilegedPod\\ingress.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\PrivilegedPod\\ingress.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\PrivilegedPod\\payment\\deployment.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\PrivilegedPod\\payment\\deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[payment].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[payment].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/payment']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/payment']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[payment].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[payment].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[payment].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[payment].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[payment].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[payment]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\PrivilegedPod\\payment\\service.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\PrivilegedPod\\payment\\service.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "id": "SNYK-CC-K8S-15",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "msg": "service.spec.loadBalancerSourceRanges",
        "subType": "Service",
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "publicId": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "path": [
          "[DocId:0]",
          "service",
          "spec",
          "loadBalancerSourceRanges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\PrivilegedPod\\web\\deployment.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\PrivilegedPod\\web\\deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[web].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[web].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[web].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[web].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[web].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/web']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/web']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[web].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[web].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[web].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[web]",
          "securityContext",
          "privileged"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\PrivilegedPod\\web\\service.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\PrivilegedPod\\web\\service.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "id": "SNYK-CC-K8S-15",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "msg": "service.spec.loadBalancerSourceRanges",
        "subType": "Service",
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "publicId": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "path": [
          "[DocId:0]",
          "service",
          "spec",
          "loadBalancerSourceRanges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\RBAC-Misconfiguration\\app\\deployment.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\RBAC-Misconfiguration\\app\\deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[app].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[app].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/app']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/app']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[app].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[app].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[app].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[app].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[app].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app]",
          "resources",
          "limits",
          "memory"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\RBAC-Misconfiguration\\app\\service.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\RBAC-Misconfiguration\\app\\service.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "id": "SNYK-CC-K8S-15",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "msg": "service.spec.loadBalancerSourceRanges",
        "subType": "Service",
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "publicId": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "path": [
          "[DocId:0]",
          "service",
          "spec",
          "loadBalancerSourceRanges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\RBAC-Misconfiguration\\RBAC.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\RBAC-Misconfiguration\\RBAC.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "description": "",
        "resolve": "Set only the necessary permissions required",
        "id": "SNYK-CC-K8S-44",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API.",
        "msg": "clusterrole.rules[0].resources",
        "subType": "ClusterRole",
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "publicId": "SNYK-CC-K8S-44",
        "title": "Role with too wide permissions",
        "references": [
          "CWE-272",
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
          "CIS Kubernetes Benchmark 1.7.0 - 5.1.3 Minimize wildcard use in Roles and ClusterRoles"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API.",
          "resolve": "Set only the necessary permissions required"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "path": [
          "[DocId:0]",
          "clusterrole",
          "rules[0]",
          "resources"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set only the necessary permissions required",
        "id": "SNYK-CC-K8S-44",
        "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API.",
        "msg": "clusterrole.rules[0].verbs",
        "subType": "ClusterRole",
        "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
        "publicId": "SNYK-CC-K8S-44",
        "title": "Role with too wide permissions",
        "references": [
          "CWE-272",
          "https://kubernetes.io/docs/reference/access-authn-authz/rbac/",
          "CIS Kubernetes Benchmark 1.7.0 - 5.1.3 Minimize wildcard use in Roles and ClusterRoles"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The role uses wildcards, which grant the role permissions to the whole cluster",
          "impact": "The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API.",
          "resolve": "Set only the necessary permissions required"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-44",
        "path": [
          "[DocId:0]",
          "clusterrole",
          "rules[0]",
          "verbs"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\ResourceLimitation\\app1\\deployment.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\ResourceLimitation\\app1\\deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[app1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[app1].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[app1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/app1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/app1']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[app1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[app1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[app1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[app1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[app1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\ResourceLimitation\\app1\\service.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\ResourceLimitation\\app1\\service.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "id": "SNYK-CC-K8S-15",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "msg": "service.spec.loadBalancerSourceRanges",
        "subType": "Service",
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "publicId": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "path": [
          "[DocId:0]",
          "service",
          "spec",
          "loadBalancerSourceRanges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\ResourceLimitation\\app2\\deployment.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\ResourceLimitation\\app2\\deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[app2].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[app2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/app2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/app2']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[app2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[app2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[app2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[app2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[app2].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[app2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[app2]",
          "resources",
          "limits",
          "memory"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\ResourceLimitation\\app2\\service.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\ResourceLimitation\\app2\\service.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "id": "SNYK-CC-K8S-15",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "msg": "service.spec.loadBalancerSourceRanges",
        "subType": "Service",
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "publicId": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "path": [
          "[DocId:0]",
          "service",
          "spec",
          "loadBalancerSourceRanges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\ResourceLimitation\\ingress.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\ResourceLimitation\\ingress.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\cronjob.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\cronjob.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/hello']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/hello']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.jobTemplate.spec.template.spec.containers[hello].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "ports",
          "containerPort[22]"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.jobTemplate.spec.template.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 41,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.jobTemplate.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.jobTemplate.spec.template.spec.volumes[dev].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 48,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "volumes[dev]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.jobTemplate.spec.template.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.jobTemplate.spec.template.spec.containers[hello].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "volumeMounts"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 36,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.jobTemplate.spec.template.spec.containers[hello].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 42,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "securityContext",
          "seLinuxOptions"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.jobTemplate.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 51,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.jobTemplate.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.jobTemplate.spec.template.spec.containers[hello].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "ports"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.jobTemplate.spec.template.spec.containers[hello].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "jobTemplate",
          "spec",
          "template",
          "spec",
          "containers[hello]",
          "resources",
          "limits",
          "cpu"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\daemonset.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\daemonset.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 40,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/fluentd-elasticsearch']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/fluentd-elasticsearch']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.template.spec.containers[fluentd-elasticsearch].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "ports"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.template.spec.volumes[dev].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "volumes[dev]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 22,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 56,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.template.spec.containers[fluentd-elasticsearch].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "ports",
          "containerPort[22]"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.template.spec.containers[fluentd-elasticsearch].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 43,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "volumeMounts"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[fluentd-elasticsearch].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 41,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.template.spec.containers[fluentd-elasticsearch].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[fluentd-elasticsearch]",
          "securityContext",
          "seLinuxOptions"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-annotations-unconfined.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-annotations-unconfined.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 52,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 79,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 77,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 83,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 78,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 52,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 87,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 56,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 69,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 69,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky2']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 75,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-annotations.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-annotations.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 80,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 78,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 84,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 79,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 88,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 40,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 57,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 70,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 70,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 76,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 36,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-dev-hostPath.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-dev-hostPath.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 77,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 75,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.template.spec.volumes[devices].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 85,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "volumes[devices]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 81,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 76,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 88,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 54,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 67,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 67,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky2']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 73,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-imagePullPolicy.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-imagePullPolicy.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[snyky1].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[snyky2].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky2']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[snyky1].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[snyky1].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-liveness.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-liveness.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[snyky1].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-ports.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-ports.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.template.spec.containers[nginx].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "ports"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[nginx].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.template.spec.containers[nginx].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[nginx].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[nginx].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "imagePullPolicy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-selinux.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-selinux.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[selinux].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 78,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[selinux].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 76,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[selinux].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 82,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.template.spec.containers[selinux].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 71,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "securityContext",
          "seLinuxOptions"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[selinux].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 77,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 86,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/selinux']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/selinux']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[selinux].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 66,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[selinux].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[selinux].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 66,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[selinux].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 74,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[selinux]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-ssh.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-ssh.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 79,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 77,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 83,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 78,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 87,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 56,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.template.spec.containers[snyky1].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "ports",
          "containerPort[22]"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 69,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 69,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky2']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 75,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment-volume-propagation.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment-volume-propagation.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 81,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 79,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.template.spec.containers[snyky2].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 56,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "volumeMounts"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 85,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 80,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 92,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 54,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 71,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 71,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky2']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 77,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\deployment.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\deployment.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 77,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 75,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky1']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky1']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 81,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 76,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky1].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 85,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky1].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 54,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 67,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 67,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky2']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 73,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky1].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky1]",
          "securityContext",
          "runAsNonRoot"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\job.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\job.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/pi']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/pi']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[pi].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[pi].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.template.spec.volumes[dev].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 42,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "volumes[dev]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.template.spec.containers[pi].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "volumeMounts"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[pi].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 45,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[pi].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.template.spec.containers[pi].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "securityContext",
          "seLinuxOptions"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[pi].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.template.spec.containers[pi].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "ports"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[pi].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[pi].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.template.spec.containers[pi].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[pi]",
          "ports",
          "containerPort[22]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\multi-file.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\multi-file.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/snyky']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/snyky']"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[snyky].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[snyky].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[snyky].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[snyky].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.template.spec.containers[snyky].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[snyky].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[snyky].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.template.spec.containers[snyky].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[snyky]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\networkPolicy.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\networkPolicy.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `to` attributes",
        "id": "SNYK-CC-K8S-26",
        "impact": "This can allow the compromised container to exfiltrate information",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "Traffic to all destinations is allowed",
        "publicId": "SNYK-CC-K8S-26",
        "title": "Policy does not restrict egress destinations",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Traffic to all destinations is allowed",
          "impact": "This can allow the compromised container to exfiltrate information",
          "resolve": "Add specific `to` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-26",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `to` attributes",
        "id": "SNYK-CC-K8S-26",
        "impact": "This can allow the compromised container to exfiltrate information",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "Traffic to all destinations is allowed",
        "publicId": "SNYK-CC-K8S-26",
        "title": "Policy does not restrict egress destinations",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Traffic to all destinations is allowed",
          "impact": "This can allow the compromised container to exfiltrate information",
          "resolve": "Add specific `to` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-26",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `to` attributes",
        "id": "SNYK-CC-K8S-26",
        "impact": "This can allow the compromised container to exfiltrate information",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "Traffic to all destinations is allowed",
        "publicId": "SNYK-CC-K8S-26",
        "title": "Policy does not restrict egress destinations",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Traffic to all destinations is allowed",
          "impact": "This can allow the compromised container to exfiltrate information",
          "resolve": "Add specific `to` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-26",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add specific `from` attributes",
        "id": "SNYK-CC-K8S-25",
        "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
        "msg": "input.spec.podSelector",
        "subType": "Network Policy",
        "issue": "All ingress sources are allowed access",
        "publicId": "SNYK-CC-K8S-25",
        "title": "Policy does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/network-policies/",
          "https://kubernetes.io/docs/tasks/administer-cluster/declare-network-policy/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All ingress sources are allowed access",
          "impact": "This can expose the sensitive endpoints to the wider range of threat actors.",
          "resolve": "Add specific `from` attributes"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-25",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "podSelector"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod-dev-hostPath.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod-dev-hostPath.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[myapp-container].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/myapp-container']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/myapp-container']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[myapp-container].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[myapp-container].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.containers[myapp-container].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 41,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.volumes[devices].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "volumes[devices]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[myapp-container].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[myapp-container].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "cpu"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod-ports.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod-ports.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[web].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[web]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[web].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[web]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[web].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[web]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[web].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[web]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[web].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[web]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.containers[web].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[web]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/web']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/web']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.containers[web].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[web]",
          "ports"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod-security-context.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod-security-context.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[allowed].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[allowed].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[allowed].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[allowed]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[allowed].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[allowed]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[allowed].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[allowed].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[allowed].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/allowed']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/allowed']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/allowed_2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/allowed_2']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[allowed_2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[allowed_2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[allowed_2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed_2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[allowed_2].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed_2]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[allowed_2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed_2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[allowed_2].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[allowed_2]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[allowed_2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed_2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[allowed_2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[allowed_2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[denied].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[denied].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[denied].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[denied].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[denied].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[denied].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/denied']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/denied']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[denied].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[denied].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[denied_2].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_2]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[denied_2].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_2]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[denied_2].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_2]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[denied_2].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_2]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[denied_2].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_2]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/denied_2']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/denied_2']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[denied_2].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_2]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[denied_2].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_2]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[denied_2].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_2]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/denied_3']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/denied_3']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[denied_3].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_3]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[denied_3].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_3]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[denied_3].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_3]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[denied_3].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_3]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[denied_3].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_3]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[denied_3].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_3]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[denied_3].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_3]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[denied_3].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_3]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[denied_4].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_4]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[denied_4].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_4]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[denied_4].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_4]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[denied_4].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_4]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/denied_4']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/denied_4']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[denied_4].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_4]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[denied_4].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_4]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[denied_4].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_4]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[denied_4].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_4]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[denied_5].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_5]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/denied_5']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/denied_5']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[denied_5].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_5]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[denied_5].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_5]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[denied_5].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_5]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[denied_5].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_5]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[denied_5].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_5]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[denied_5].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[denied_5]",
          "livenessProbe"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[denied_5].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[denied_5]",
          "resources",
          "limits",
          "cpu"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod-selinux.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod-selinux.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[selinux].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.containers[selinux].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 31,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.containers[selinux].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[selinux]",
          "securityContext",
          "seLinuxOptions"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.containers[selinux].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 36,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[selinux].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[selinux].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[selinux]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[selinux].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[selinux].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[selinux].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 40,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/selinux']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/selinux']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[selinux].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[selinux]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[selinux].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[selinux]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostPID"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod-ssh.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod-ssh.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.containers[myapp-container].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "ports",
          "containerPort[22]"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[myapp-container].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/myapp-container']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/myapp-container']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[myapp-container].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[myapp-container].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.containers[myapp-container].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 42,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[myapp-container].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[myapp-container].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "cpu"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod-volume-propagation.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod-volume-propagation.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[myapp-container].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/myapp-container']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/myapp-container']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[myapp-container].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.containers[myapp-container].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "volumeMounts"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[myapp-container].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.containers[myapp-container].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 42,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[myapp-container].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[myapp-container].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "cpu"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\pod.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\pod.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`",
        "id": "SNYK-CC-K8S-8",
        "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.readOnlyRootFilesystem",
        "subType": "Deployment",
        "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
        "publicId": "SNYK-CC-K8S-8",
        "title": "Container is running with writable root filesystem",
        "references": [
          "CIS Docker Benchmark 1.2.0 - Ensure that the container's root filesystem is mounted as read only",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`readOnlyRootFilesystem` attribute is not set to `true`",
          "impact": "Compromised process could abuse writable root filesystem to elevate privileges",
          "resolve": "Set `securityContext.readOnlyRootFilesystem` to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "readOnlyRootFilesystem"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.containers[myapp-container].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/myapp-container']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/myapp-container']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `imagePullPolicy` attribute to `Always`",
        "id": "SNYK-CC-K8S-42",
        "impact": "The container may run with outdated or unauthorized image",
        "msg": "spec.containers[myapp-container].imagePullPolicy",
        "subType": "Deployment",
        "issue": "The image policy does not prevent image reuse",
        "publicId": "SNYK-CC-K8S-42",
        "title": "Container could be running with outdated image",
        "references": [
          "5.27 Ensure that Docker commands always make use of the latest version of their image",
          "https://kubernetes.io/docs/concepts/containers/images/",
          "https://kubernetes.io/docs/concepts/configuration/overview/#container-images"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The image policy does not prevent image reuse",
          "impact": "The container may run with outdated or unauthorized image",
          "resolve": "Set `imagePullPolicy` attribute to `Always`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "imagePullPolicy"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.runAsNonRoot` to `true`",
        "id": "SNYK-CC-K8S-10",
        "impact": "Container could be running with full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.runAsNonRoot",
        "subType": "Deployment",
        "issue": "Container is running without root user control",
        "publicId": "SNYK-CC-K8S-10",
        "title": "Container is running without root user control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.5 Ensure sensitive host system directories are not mounted on containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running without root user control",
          "impact": "Container could be running with full administrative privileges",
          "resolve": "Set `securityContext.runAsNonRoot` to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-10",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "runAsNonRoot"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `livenessProbe` attribute",
        "id": "SNYK-CC-K8S-41",
        "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
        "msg": "spec.containers[myapp-container].livenessProbe",
        "subType": "Deployment",
        "issue": "Liveness probe is not defined",
        "publicId": "SNYK-CC-K8S-41",
        "title": "Container is running without liveness probe",
        "references": [
          "CIS Docker Benchmark v1.2.0 - 5.26 Ensure that container health is checked at runtime",
          "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
          "https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/",
          "https://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Liveness probe is not defined",
          "impact": "Kubernetes will not be able to detect if application is able to service requests, and will not restart unhealthy pods",
          "resolve": "Add `livenessProbe` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-41",
        "path": [
          "[DocId:0]",
          "spec",
          "containers[myapp-container]",
          "livenessProbe"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.containers[myapp-container].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.containers[myapp-container].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.containers[myapp-container].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.containers[myapp-container].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "containers[myapp-container]",
          "resources",
          "limits",
          "cpu"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\podSecurityPolicy.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\podSecurityPolicy.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `privileged` attribute, or set vault to `false`",
        "id": "SNYK-CC-K8S-16",
        "impact": "Pods will be able to run with `privileged` mode.",
        "msg": "input.spec.privileged",
        "subType": "Pod Security Policy",
        "issue": "Privileged containers are explicitly allowed",
        "publicId": "SNYK-CC-K8S-16",
        "title": "Policy allows `privileged` containers",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Privileged containers are explicitly allowed",
          "impact": "Pods will be able to run with `privileged` mode.",
          "resolve": "Remove `privileged` attribute, or set vault to `false`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-16",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "privileged"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-17",
        "impact": "Pods will be able to run with `allowPrivilegeEscalation` set to true (default value).",
        "msg": "input.spec.allowPrivilegeEscalation",
        "subType": "Pod Security Policy",
        "issue": "Privilege escalation is not explicitly forbidden via `allowPrivilegeEscalation` attribute",
        "publicId": "SNYK-CC-K8S-17",
        "title": "Policy allows privilege escalation",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.5 Minimize the admission of containers with allowPrivilegeEscalation",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Privilege escalation is not explicitly forbidden via `allowPrivilegeEscalation` attribute",
          "impact": "Pods will be able to run with `allowPrivilegeEscalation` set to true (default value).",
          "resolve": "Set `allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-17",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `defaultAllowPrivilegeEscalation` value to `false`",
        "id": "SNYK-CC-K8S-18",
        "impact": "All containers will be allowed to escalate privileges, unless `allowPrivilegeEscalation` attribute is enforced to `false`",
        "msg": "input.spec.defaultAllowPrivilegeEscalation",
        "subType": "Pod Security Policy",
        "issue": "Default privilege escalation control is set to `false`",
        "publicId": "SNYK-CC-K8S-18",
        "title": "Policy sets insecure default privilege escalation control",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.5 Minimize the admission of containers with allowPrivilegeEscalation",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default privilege escalation control is set to `false`",
          "impact": "All containers will be allowed to escalate privileges, unless `allowPrivilegeEscalation` attribute is enforced to `false`",
          "resolve": "Set `defaultAllowPrivilegeEscalation` value to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-18",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "defaultAllowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-19",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.hostPID",
        "subType": "Pod Security Policy",
        "issue": "Policy does not prevent containers from running processes inside of host's PID namespace",
        "publicId": "SNYK-CC-K8S-19",
        "title": "Policy allows sharing of host's PID namespace",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.2 Minimize the admission of containers wishing to share the host process ID namespace",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy does not prevent containers from running processes inside of host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-19",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove the `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-20",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.hostIPC",
        "subType": "Pod Security Policy",
        "issue": "Policy does not prevent containers from running processes inside of host's IPC namespace",
        "publicId": "SNYK-CC-K8S-20",
        "title": "Policy allows sharing of host's IPC namespace",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.3 Minimize the admission of containers wishing to share the host IPC namespace",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy does not prevent containers from running processes inside of host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove the `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-20",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-21",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.hostNetwork",
        "subType": "Pod Security Policy",
        "issue": "Policy does not prevent containers from running processes inside of host's Network namespace",
        "publicId": "SNYK-CC-K8S-21",
        "title": "Policy allows sharing of host's Network namespace",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.4 Minimize the admission of containers wishing to share the host network namespace",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy does not prevent containers from running processes inside of host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-21",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `runAsUser` to `MustRunAsNonRoot`, or exclude UID `0` from `MustRunAs` range",
        "id": "SNYK-CC-K8S-22",
        "impact": "Pods will be able to run with root UID.",
        "msg": "input.spec.runAsUser.rule",
        "subType": "Pod Security Policy",
        "issue": "Policy explicitly allows `RunAsAny` user which allows container to run in root UID context",
        "publicId": "SNYK-CC-K8S-22",
        "title": "Policy does not prevent use of root user",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.6 Minimize the admission of root containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy explicitly allows `RunAsAny` user which allows container to run in root UID context",
          "impact": "Pods will be able to run with root UID.",
          "resolve": "Set `runAsUser` to `MustRunAsNonRoot`, or exclude UID `0` from `MustRunAs` range"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-22",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "runAsUser",
          "rule"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `runAsUser` to `MustRunAsNonRoot`, or exclude UID `0` from `MustRunAs` range",
        "id": "SNYK-CC-K8S-22",
        "impact": "Pods will be able to run with root UID.",
        "msg": "input.spec.runAsUser.rule",
        "subType": "Pod Security Policy",
        "issue": "Policy explicitly allows `RunAsAny` user which allows container to run in root UID context",
        "publicId": "SNYK-CC-K8S-22",
        "title": "Policy does not prevent use of root user",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.6 Minimize the admission of root containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy explicitly allows `RunAsAny` user which allows container to run in root UID context",
          "impact": "Pods will be able to run with root UID.",
          "resolve": "Set `runAsUser` to `MustRunAsNonRoot`, or exclude UID `0` from `MustRunAs` range"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-22",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "runAsUser",
          "rule"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`",
        "id": "SNYK-CC-K8S-23",
        "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
        "msg": "input.spec.allowedCapabilities",
        "subType": "Pod Security Policy",
        "issue": "The whitelist of allowed capability is set to all",
        "publicId": "SNYK-CC-K8S-23",
        "title": "Policy allows all capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.8 Minimize the admission of containers with added capabilities",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The whitelist of allowed capability is set to all",
          "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
          "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-23",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "allowedCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`",
        "id": "SNYK-CC-K8S-23",
        "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
        "msg": "input.spec.allowedCapabilities",
        "subType": "Pod Security Policy",
        "issue": "The whitelist of allowed capability is set to all",
        "publicId": "SNYK-CC-K8S-23",
        "title": "Policy allows all capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.8 Minimize the admission of containers with added capabilities",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The whitelist of allowed capability is set to all",
          "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
          "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-23",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "allowedCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`",
        "id": "SNYK-CC-K8S-23",
        "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
        "msg": "input.spec.allowedCapabilities",
        "subType": "Pod Security Policy",
        "issue": "The whitelist of allowed capability is set to all",
        "publicId": "SNYK-CC-K8S-23",
        "title": "Policy allows all capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.8 Minimize the admission of containers with added capabilities",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The whitelist of allowed capability is set to all",
          "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
          "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-23",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "allowedCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`",
        "id": "SNYK-CC-K8S-23",
        "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
        "msg": "input.spec.allowedCapabilities",
        "subType": "Pod Security Policy",
        "issue": "The whitelist of allowed capability is set to all",
        "publicId": "SNYK-CC-K8S-23",
        "title": "Policy allows all capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.8 Minimize the admission of containers with added capabilities",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The whitelist of allowed capability is set to all",
          "impact": "The pods will be allowed to add any capability at runtime, including SYS_ADMIN",
          "resolve": "Remove `allowedCapabilities` attribute, or set value to `[]`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-23",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "allowedCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` or `NET_RAW` to  `requiredDropCapabilities` attribute",
        "id": "SNYK-CC-K8S-24",
        "impact": "Pods will be allowed to run with too many permissions, including RAW network resource access",
        "msg": "input.spec.requiredDropCapabilities",
        "subType": "Pod Security Policy",
        "issue": "Default insecure capabilities are not restricted",
        "publicId": "SNYK-CC-K8S-24",
        "title": "Policy does not restrict default capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.7 Minimize the admission of containers with the NET_RAW capability",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default insecure capabilities are not restricted",
          "impact": "Pods will be allowed to run with too many permissions, including RAW network resource access",
          "resolve": "Add `ALL` or `NET_RAW` to  `requiredDropCapabilities` attribute"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-24",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "requiredDropCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` or `NET_RAW` to  `requiredDropCapabilities` attribute",
        "id": "SNYK-CC-K8S-24",
        "impact": "Pods will be allowed to run with too many permissions, including RAW network resource access",
        "msg": "input.spec.requiredDropCapabilities",
        "subType": "Pod Security Policy",
        "issue": "Default insecure capabilities are not restricted",
        "publicId": "SNYK-CC-K8S-24",
        "title": "Policy does not restrict default capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.7 Minimize the admission of containers with the NET_RAW capability",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default insecure capabilities are not restricted",
          "impact": "Pods will be allowed to run with too many permissions, including RAW network resource access",
          "resolve": "Add `ALL` or `NET_RAW` to  `requiredDropCapabilities` attribute"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-24",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "requiredDropCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` or `NET_RAW` to  `requiredDropCapabilities` attribute",
        "id": "SNYK-CC-K8S-24",
        "impact": "Pods will be allowed to run with too many permissions, including RAW network resource access",
        "msg": "input.spec.requiredDropCapabilities",
        "subType": "Pod Security Policy",
        "issue": "Default insecure capabilities are not restricted",
        "publicId": "SNYK-CC-K8S-24",
        "title": "Policy does not restrict default capabilities",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.7 Minimize the admission of containers with the NET_RAW capability",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default insecure capabilities are not restricted",
          "impact": "Pods will be allowed to run with too many permissions, including RAW network resource access",
          "resolve": "Add `ALL` or `NET_RAW` to  `requiredDropCapabilities` attribute"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-24",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "requiredDropCapabilities"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `runAsGroup` to `MustRunAs` to range which does not include GID `0`",
        "id": "SNYK-CC-K8S-27",
        "impact": "Pods will be able to run with root GID",
        "msg": "input.spec.runAsGroup.rule",
        "subType": "Pod Security Policy",
        "issue": "Policy explicitly allows `RunAsAny` group which allows container to run in root GID context",
        "publicId": "SNYK-CC-K8S-27",
        "title": "Policy does not prevent use of root group",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.6 Minimize the admission of root containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy explicitly allows `RunAsAny` group which allows container to run in root GID context",
          "impact": "Pods will be able to run with root GID",
          "resolve": "Set `runAsGroup` to `MustRunAs` to range which does not include GID `0`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-27",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "runAsGroup",
          "rule"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `runAsGroup` to `MustRunAs` to range which does not include GID `0`",
        "id": "SNYK-CC-K8S-27",
        "impact": "Pods will be able to run with root GID",
        "msg": "input.spec.runAsGroup.rule",
        "subType": "Pod Security Policy",
        "issue": "Policy explicitly allows `RunAsAny` group which allows container to run in root GID context",
        "publicId": "SNYK-CC-K8S-27",
        "title": "Policy does not prevent use of root group",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.6 Minimize the admission of root containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Policy explicitly allows `RunAsAny` group which allows container to run in root GID context",
          "impact": "Pods will be able to run with root GID",
          "resolve": "Set `runAsGroup` to `MustRunAs` to range which does not include GID `0`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-27",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "runAsGroup",
          "rule"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `seccomp.security.alpha.kubernetes.io/allowedProfileNames` to `runtime/default` only",
        "id": "SNYK-CC-K8S-28",
        "impact": "Pods will be able to start with seccomp disabled.",
        "msg": "input.metadata.annotations[seccomp.security.alpha.kubernetes.io/allowedProfileNames]",
        "subType": "Pod Security Policy",
        "issue": "Seccomp profile whitelist contains insecure entries",
        "publicId": "SNYK-CC-K8S-28",
        "title": "Policy allows insecure seccomp profiles",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp",
          "https://kubernetes.io/docs/tutorials/clusters/seccomp/",
          "https://docs.docker.com/engine/security/seccomp/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Seccomp profile whitelist contains insecure entries",
          "impact": "Pods will be able to start with seccomp disabled.",
          "resolve": "Set `seccomp.security.alpha.kubernetes.io/allowedProfileNames` to `runtime/default` only"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-28",
        "path": [
          "[DocId:0]",
          "input",
          "metadata",
          "annotations[seccomp",
          "security",
          "alpha",
          "kubernetes",
          "io/allowedProfileNames]"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `seccomp.security.alpha.kubernetes.io/allowedProfileNames` to `runtime/default` only",
        "id": "SNYK-CC-K8S-28",
        "impact": "Pods will be able to start with seccomp disabled.",
        "msg": "input.metadata.annotations[seccomp.security.alpha.kubernetes.io/allowedProfileNames]",
        "subType": "Pod Security Policy",
        "issue": "Seccomp profile whitelist contains insecure entries",
        "publicId": "SNYK-CC-K8S-28",
        "title": "Policy allows insecure seccomp profiles",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp",
          "https://kubernetes.io/docs/tutorials/clusters/seccomp/",
          "https://docs.docker.com/engine/security/seccomp/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Seccomp profile whitelist contains insecure entries",
          "impact": "Pods will be able to start with seccomp disabled.",
          "resolve": "Set `seccomp.security.alpha.kubernetes.io/allowedProfileNames` to `runtime/default` only"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-28",
        "path": [
          "[DocId:0]",
          "input",
          "metadata",
          "annotations[seccomp",
          "security",
          "alpha",
          "kubernetes",
          "io/allowedProfileNames]"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `seccomp.security.alpha.kubernetes.io/defaultProfileName` annotation to `runtime/default`",
        "id": "SNYK-CC-K8S-29",
        "impact": "Containers will run with seccomp disabled",
        "msg": "input.metadata.annotations[seccomp.security.alpha.kubernetes.io/defaultProfileName]",
        "subType": "Pod Security Policy",
        "issue": "Default seccomp profile is set to `unconfined`",
        "publicId": "SNYK-CC-K8S-29",
        "title": "Policy sets insecure default seccomp profile",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp",
          "https://kubernetes.io/docs/tutorials/clusters/seccomp/",
          "https://docs.docker.com/engine/security/seccomp/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default seccomp profile is set to `unconfined`",
          "impact": "Containers will run with seccomp disabled",
          "resolve": "Set `seccomp.security.alpha.kubernetes.io/defaultProfileName` annotation to `runtime/default`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-29",
        "path": [
          "[DocId:0]",
          "input",
          "metadata",
          "annotations[seccomp",
          "security",
          "alpha",
          "kubernetes",
          "io/defaultProfileName]"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set value to specific volume types, or remove the attribute",
        "id": "SNYK-CC-K8S-30",
        "impact": "The containers will be allowed to mount any type, and source of volumes. This can lead to information disclosure and privilege escalation.",
        "msg": "input.spec.volumes",
        "subType": "Pod Security Policy",
        "issue": "All volume types are allowed, including `hostPath`",
        "publicId": "SNYK-CC-K8S-30",
        "title": "Policy allows all volume types",
        "references": [
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#volumes-and-file-systems",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://kubernetes.io/docs/concepts/storage/volumes/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All volume types are allowed, including `hostPath`",
          "impact": "The containers will be allowed to mount any type, and source of volumes. This can lead to information disclosure and privilege escalation.",
          "resolve": "Set value to specific volume types, or remove the attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-30",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "volumes"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `apparmor.security.beta.kubernetes.io/defaultProfileNam` annotation to `runtime/default`",
        "id": "SNYK-CC-K8S-31",
        "impact": "Pods will run with AppArmor disabled by default",
        "msg": "input.metadata.annotations[apparmor.security.beta.kubernetes.io/defaultProfileName]",
        "subType": "Pod Security Policy",
        "issue": "Default profile name is set to `unconfined`",
        "publicId": "SNYK-CC-K8S-31",
        "title": "Policy allows any apparmor profile",
        "references": [
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default profile name is set to `unconfined`",
          "impact": "Pods will run with AppArmor disabled by default",
          "resolve": "Set `apparmor.security.beta.kubernetes.io/defaultProfileNam` annotation to `runtime/default`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-31",
        "path": [
          "[DocId:0]",
          "input",
          "metadata",
          "annotations[apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/defaultProfileName]"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `apparmor.security.beta.kubernetes.io/defaultProfileNam` annotation to `runtime/default`",
        "id": "SNYK-CC-K8S-31",
        "impact": "Pods will run with AppArmor disabled by default",
        "msg": "input.metadata.annotations[apparmor.security.beta.kubernetes.io/defaultProfileName]",
        "subType": "Pod Security Policy",
        "issue": "Default profile name is set to `unconfined`",
        "publicId": "SNYK-CC-K8S-31",
        "title": "Policy allows any apparmor profile",
        "references": [
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Default profile name is set to `unconfined`",
          "impact": "Pods will run with AppArmor disabled by default",
          "resolve": "Set `apparmor.security.beta.kubernetes.io/defaultProfileNam` annotation to `runtime/default`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-31",
        "path": [
          "[DocId:0]",
          "input",
          "metadata",
          "annotations[apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/defaultProfileName]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\replicaset.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\replicaset.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[php-redis].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 44,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/php-redis']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/php-redis']"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[php-redis].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[php-redis].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.template.spec.volumes[dev].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 51,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "volumes[dev]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[php-redis].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 45,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[php-redis].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[php-redis].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 42,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 54,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.template.spec.containers[php-redis].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "ports",
          "containerPort[22]"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.template.spec.containers[php-redis].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "volumeMounts"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.template.spec.containers[php-redis].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "ports"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[php-redis].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 40,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.template.spec.containers[php-redis].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 46,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[php-redis]",
          "securityContext",
          "seLinuxOptions"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\replicationcontroller.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\replicationcontroller.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.template.spec.containers[nginx].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "volumeMounts"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 31,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.template.spec.containers[nginx].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "seLinuxOptions"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.template.spec.volumes[dev].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 47,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "volumes[dev]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.template.spec.containers[nginx].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 41,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "ports"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[nginx].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[nginx].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/nginx']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/nginx']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.template.spec.containers[nginx].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 41,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "ports",
          "containerPort[22]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\service.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\service.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses",
        "id": "SNYK-CC-K8S-15",
        "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
        "msg": "service.spec.loadBalancerSourceRanges",
        "subType": "Service",
        "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
        "publicId": "SNYK-CC-K8S-15",
        "title": "Service does not restrict ingress sources",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/service/",
          "https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Defining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.",
          "impact": "This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.",
          "resolve": "Set `loadBalancerSourceRanges` attribute value to specific IP addresses"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15",
        "path": [
          "[DocId:0]",
          "service",
          "spec",
          "loadBalancerSourceRanges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "k8s\\templates\\statefulset.yaml",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\k8s\\templates\\statefulset.yaml",
    "packageManager": "k8sconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "k8sconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `mountPropagation` attribute, or set value to `None`",
        "id": "SNYK-CC-K8S-38",
        "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
        "msg": "spec.template.spec.containers[nginx].volumeMounts",
        "subType": "Deployment",
        "issue": "Bidirectional volume mount propagation has been set",
        "publicId": "SNYK-CC-K8S-38",
        "title": "Container is running with shared mount propagation",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.19 Ensure mount propagation mode is not set to shared",
          "https://kubernetes.io/docs/concepts/storage/volumes/#mount-propagation"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bidirectional volume mount propagation has been set",
          "impact": "Shared volumes can overwrite data on the host, and are considered dangerous.",
          "resolve": "Remove `mountPropagation` attribute, or set value to `None`"
        },
        "lineNumber": 44,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-38",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "volumeMounts"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-1",
        "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.privileged",
        "subType": "Deployment",
        "issue": "Container is running in privileged mode",
        "publicId": "SNYK-CC-K8S-1",
        "title": "Container is running in privileged mode",
        "references": [
          "CIS Kubernetes Benchmark 1.6.0 - 5.2.1 Minimize the admission of privileged containers",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privileged",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is running in privileged mode",
          "impact": "Compromised container could potentially modify the underlying host’s kernel by loading unauthorized modules (i.e. drivers).",
          "resolve": "Remove `securityContext.privileged` attribute, or set value to `false`"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-1",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "privileged"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostNetwork` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-14",
        "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostNetwork",
        "subType": "Deployment",
        "issue": "The pod is sharing host's Network namespace",
        "publicId": "SNYK-CC-K8S-14",
        "title": "Container is running in host's Network namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.9 Ensure that the host's network namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://kubernetes.io/docs/concepts/configuration/overview/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's Network namespace",
          "impact": "Containers will be able to access host's networking resources. This breaks container security boundary.",
          "resolve": "Remove `hostNetwork` attribute, or set value to `false`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-14",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostNetwork"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `securityContext.seLinuxOptions`",
        "id": "SNYK-CC-K8S-33",
        "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
        "msg": "spec.template.spec.containers[nginx].securityContext.seLinuxOptions",
        "subType": "Deployment",
        "issue": "Custom SELinux label is defined",
        "publicId": "SNYK-CC-K8S-33",
        "title": "Container is running with custom SELinux options",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.2 Ensure that, if applicable, SELinux security options are set",
          "https://kubernetes.io/docs/concepts/security/pod-security-standards/",
          "https://aws.github.io/aws-eks-best-practices/hosts/#run-selinux"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Custom SELinux label is defined",
          "impact": "SELinux mandatory access controls may be bypassed, due to clashes in labeling.",
          "resolve": "Remove `securityContext.seLinuxOptions`"
        },
        "lineNumber": 36,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-33",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "seLinuxOptions"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove `hostAliases` attribute",
        "id": "SNYK-CC-K8S-12",
        "impact": "Might cause unexpected network connectivity issues",
        "msg": "input.spec.template.spec.hostAliases",
        "subType": "Deployment",
        "issue": "hostAliases is set with custom mapping",
        "publicId": "SNYK-CC-K8S-12",
        "title": "Container is running with custom hosts file configuration",
        "references": [
          "https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/",
          "https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "hostAliases is set with custom mapping",
          "impact": "Might cause unexpected network connectivity issues",
          "resolve": "Remove `hostAliases` attribute"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-12",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostAliases"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPath` volume mount",
        "id": "SNYK-CC-K8S-37",
        "impact": "Increases the attack surface, and can lead to privilege escalation",
        "msg": "spec.template.spec.volumes[dev].hostPath.path",
        "subType": "Deployment",
        "issue": "Host's `/dev` path has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-37",
        "title": "Container is running with host device path mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.17 Ensure that host devices are not directly exposed to containers",
          "https://kubernetes.io/docs/concepts/storage/volumes/#hostpath"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Host's `/dev` path has been mounted inside the pod",
          "impact": "Increases the attack surface, and can lead to privilege escalation",
          "resolve": "Remove `hostPath` volume mount"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-37",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "volumes[dev]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostIPC` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-13",
        "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
        "msg": "input.spec.template.spec.hostIPC",
        "subType": "Deployment",
        "issue": "The pod is sharing host's IPC namespace",
        "publicId": "SNYK-CC-K8S-13",
        "title": "Container is running in host's IPC namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.16 Ensure that the host's IPC namespace is not shared",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",
          "https://tldp.org/LDP/tlk/ipc/ipc.html",
          "https://tldp.org/LDP/lpg/node7.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's IPC namespace",
          "impact": "Containers will be able to communicate with host's shared channels. This breaks container security boundary.",
          "resolve": "Remove `hostIPC` attribute, or set value to `false`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-13",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostIPC"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Reduce `ports` count to 2",
        "id": "SNYK-CC-K8S-36",
        "impact": "Increases the attack surface of the application and the container.",
        "msg": "spec.template.spec.containers[nginx].ports",
        "subType": "Deployment",
        "issue": "Container is declaring more than 2 listening ports",
        "publicId": "SNYK-CC-K8S-36",
        "title": "Container is running with multiple open ports",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.8 Ensure that only needed ports are open on the container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Container is declaring more than 2 listening ports",
          "impact": "Increases the attack surface of the application and the container.",
          "resolve": "Reduce `ports` count to 2"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "ports"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `securityContext.RunAsUser` value",
        "id": "SNYK-CC-K8S-11",
        "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.runAsUser",
        "subType": "Deployment",
        "issue": "`RunAsUser` value is set to low UID",
        "publicId": "SNYK-CC-K8S-11",
        "title": "Container's UID could clash with host's UID",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`RunAsUser` value is set to low UID",
          "impact": "UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass",
          "resolve": "Set `securityContext.RunAsUser` value"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "runAsUser"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `docker.sock` hostPath volume",
        "id": "SNYK-CC-K8S-2",
        "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
        "msg": "input.spec.template.spec.volumes[dockersock].hostPath.path",
        "subType": "Deployment",
        "issue": "Docker socket has been mounted inside the pod",
        "publicId": "SNYK-CC-K8S-2",
        "title": "Container is running with docker socket mount",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.31 Ensure that the Docker socket is not mounted inside any containers",
          "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html",
          "https://aws.github.io/aws-eks-best-practices/pods/#never-run-docker-in-docker-or-mount-the-socket-in-the-container"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docker socket has been mounted inside the pod",
          "impact": "Access to docker socket from container can lead to container escape attacks and privilege escalation on the host",
          "resolve": "Remove `docker.sock` hostPath volume"
        },
        "lineNumber": 53,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-2",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "volumes[dockersock]",
          "hostPath",
          "path"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list",
        "id": "SNYK-CC-K8S-7",
        "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.capabilities.add.CAP_SYS_ADMIN",
        "subType": "Deployment",
        "issue": "SYS_ADMIN privileges are assigned to the container",
        "publicId": "SNYK-CC-K8S-7",
        "title": "Container is running with SYS_ADMIN capability",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
          "https://man7.org/linux/man-pages/man7/capabilities.7.html",
          "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SYS_ADMIN privileges are assigned to the container",
          "impact": "SYS_ADMIN capability grants the container almost full administrative privileges",
          "resolve": "Remove `CAP_SYS_ADMIN` from `securityContext.capabilities.add` list"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-7",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "capabilities",
          "add",
          "CAP_SYS_ADMIN"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Set `resources.limits.memory` value",
        "id": "SNYK-CC-K8S-4",
        "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
        "msg": "input.spec.template.spec.containers[nginx].resources.limits.memory",
        "subType": "Deployment",
        "issue": "Memory limit is not defined",
        "publicId": "SNYK-CC-K8S-4",
        "title": "Container is running without memory limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.10 Ensure that the memory usage for containers is limited",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-memory-resource/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/memory-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Memory limit is not defined",
          "impact": "Containers without memory limits are more likely to be terminated when the node runs out of memory",
          "resolve": "Set `resources.limits.memory` value"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "resources",
          "limits",
          "memory"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `resources.limits.cpu` field with required CPU limit value",
        "id": "SNYK-CC-K8S-5",
        "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
        "msg": "input.spec.template.spec.containers[nginx].resources.limits.cpu",
        "subType": "Deployment",
        "issue": "CPU limit is not defined",
        "publicId": "SNYK-CC-K8S-5",
        "title": "Container is running without cpu limit",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.11 Ensure that CPU priority is set appropriately on containers",
          "https://kubernetes.io/docs/tasks/configure-pod-container/assign-cpu-resource/",
          "https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "https://kubernetes.io/docs/tasks/administer-cluster/manage-resources/cpu-default-namespace/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CPU limit is not defined",
          "impact": "Containers without limits can exceed the capacity of the node, and affect availability/performance of the host and other containers.",
          "resolve": "Add `resources.limits.cpu` field with required CPU limit value"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "resources",
          "limits",
          "cpu"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
        "id": "SNYK-CC-K8S-6",
        "impact": "Containers are running with potentially unnecessary privileges",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.capabilities.drop",
        "subType": "Deployment",
        "issue": "All default capabilities are not explicitly dropped",
        "publicId": "SNYK-CC-K8S-6",
        "title": "Container does not drop all default capabilities",
        "references": [
          "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "https://linux-audit.com/linux-capabilities-hardening-linux-binaries-by-removing-setuid/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "All default capabilities are not explicitly dropped",
          "impact": "Containers are running with potentially unnecessary privileges",
          "resolve": "Add `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "capabilities",
          "drop"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Remove `hostPID` attribute, or set value to `false`",
        "id": "SNYK-CC-K8S-3",
        "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
        "msg": "input.spec.template.spec.hostPID",
        "subType": "Deployment",
        "issue": "The pod is sharing host's PID namespace",
        "publicId": "SNYK-CC-K8S-3",
        "title": "Container is running in host's PID namespace",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.15 Ensure that the host's process namespace is not shared",
          "https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The pod is sharing host's PID namespace",
          "impact": "Containers will be able to enumerate and interact with host's processes. This breaks container security boundary",
          "resolve": "Remove `hostPID` attribute, or set value to `false`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-3",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "hostPID"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`",
        "id": "SNYK-CC-K8S-32",
        "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
        "msg": "metadata.annotations['container.apparmor.security.beta.kubernetes.io/nginx']",
        "subType": "Deployment",
        "issue": "The AppArmor profile is not set correctly",
        "publicId": "SNYK-CC-K8S-32",
        "title": "Container is running without AppArmor profile",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.1 Ensure that, if applicable, an AppArmor Profile is enabled",
          "https://kubernetes.io/docs/tutorials/clusters/apparmor/",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AppArmor profile is not set correctly",
          "impact": "AppArmor will not enforce mandatory access control, which can increase the attack vectors.",
          "resolve": "Add `container.apparmor.security.beta.kubernetes.io/<container-name>` annotation with value `runtime/default` or `localhost/<name-of-profile`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-32",
        "path": [
          "[DocId:0]",
          "metadata",
          "annotations['container",
          "apparmor",
          "security",
          "beta",
          "kubernetes",
          "io/nginx']"
        ]
      },
      {
        "severity": "medium",
        "description": "",
        "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`",
        "id": "SNYK-CC-K8S-9",
        "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
        "msg": "input.spec.template.spec.containers[nginx].securityContext.allowPrivilegeEscalation",
        "subType": "Deployment",
        "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
        "publicId": "SNYK-CC-K8S-9",
        "title": "Container is running without privilege escalation control",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.25 Ensure that the container is restricted from acquiring additional privileges",
          "https://kubernetes.io/docs/concepts/policy/pod-security-policy/#privilege-escalation",
          "https://www.kernel.org/doc/html/latest/userspace-api/no_new_privs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "`allowPrivilegeEscalation` attribute is not set to `false`",
          "impact": "Processes could elevate current privileges via known vectors, for example SUID binaries",
          "resolve": "Set `securityContext.allowPrivilegeEscalation` to `false`"
        },
        "lineNumber": 35,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9",
        "path": [
          "[DocId:0]",
          "input",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "securityContext",
          "allowPrivilegeEscalation"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Remove ssh from `ports` array",
        "id": "SNYK-CC-K8S-34",
        "impact": "Increases the security management overhead",
        "msg": "spec.template.spec.containers[nginx].ports.containerPort[22]",
        "subType": "Deployment",
        "issue": "SSH port is declared in `ports` attribute",
        "publicId": "SNYK-CC-K8S-34",
        "title": "Container is exposing SSH port",
        "references": [
          "CIS Docker Benchmark 1.2.0 - 5.6 Ensure sshd is not run within containers",
          "https://kubernetes.io/docs/tasks/debug-application-cluster/get-shell-running-container/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SSH port is declared in `ports` attribute",
          "impact": "Increases the security management overhead",
          "resolve": "Remove ssh from `ports` array"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-34",
        "path": [
          "[DocId:0]",
          "spec",
          "template",
          "spec",
          "containers[nginx]",
          "ports",
          "containerPort[22]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\api_gateway_tls_1_0.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\api_gateway_tls_1_0.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `security_policy` attribute to `TLS_1_2`",
        "id": "SNYK-CC-TF-63",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_api_gateway_domain_name[denied].security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityPolicy` attribute to `TLS_1_2`",
          "terraform": "Set `security_policy` attribute to `TLS_1_2`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "The API gateway will accept older TLS cipher suits",
        "publicId": "SNYK-CC-TF-63",
        "title": "API Gateway does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The API gateway will accept older TLS cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `security_policy` attribute to `TLS_1_2`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-63",
        "path": [
          "resource",
          "aws_api_gateway_domain_name[denied]",
          "security_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\api_gateway_tls_1_2.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\api_gateway_tls_1_2.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_api_gateway_method_authorization_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_api_gateway_method_authorization_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_api_gateway_method_authorization_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_api_gateway_method_authorization_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `authorization` attribute to value other than `NONE`",
        "id": "SNYK-CC-TF-99",
        "impact": "Anyone could potentially access resources behind the gateway",
        "msg": "resource.aws_api_gateway_method[denied_4].authorization",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`",
          "terraform": "Set `authorization` attribute to value other than `NONE`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "API gateway will accept http methods without authorization header",
        "publicId": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization header",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "path": [
          "resource",
          "aws_api_gateway_method[denied_4]",
          "authorization"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `authorization` attribute to value other than `NONE`",
        "id": "SNYK-CC-TF-99",
        "impact": "Anyone could potentially access resources behind the gateway",
        "msg": "resource.aws_api_gateway_method[denied_2].authorization",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`",
          "terraform": "Set `authorization` attribute to value other than `NONE`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "API gateway will accept http methods without authorization header",
        "publicId": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization header",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "path": [
          "resource",
          "aws_api_gateway_method[denied_2]",
          "authorization"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `authorization` attribute to value other than `NONE`",
        "id": "SNYK-CC-TF-99",
        "impact": "Anyone could potentially access resources behind the gateway",
        "msg": "resource.aws_api_gateway_method[denied_5].authorization",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`",
          "terraform": "Set `authorization` attribute to value other than `NONE`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "API gateway will accept http methods without authorization header",
        "publicId": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization header",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "path": [
          "resource",
          "aws_api_gateway_method[denied_5]",
          "authorization"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `authorization` attribute to value other than `NONE`",
        "id": "SNYK-CC-TF-99",
        "impact": "Anyone could potentially access resources behind the gateway",
        "msg": "resource.aws_api_gateway_method[denied_3].authorization",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`",
          "terraform": "Set `authorization` attribute to value other than `NONE`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "API gateway will accept http methods without authorization header",
        "publicId": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization header",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "path": [
          "resource",
          "aws_api_gateway_method[denied_3]",
          "authorization"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `authorization` attribute to value other than `NONE`",
        "id": "SNYK-CC-TF-99",
        "impact": "Anyone could potentially access resources behind the gateway",
        "msg": "resource.aws_api_gateway_method[denied].authorization",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`",
          "terraform": "Set `authorization` attribute to value other than `NONE`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "API gateway will accept http methods without authorization header",
        "publicId": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization header",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "path": [
          "resource",
          "aws_api_gateway_method[denied]",
          "authorization"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `authorization` attribute to value other than `NONE`",
        "id": "SNYK-CC-TF-99",
        "impact": "Anyone could potentially access resources behind the gateway",
        "msg": "resource.aws_api_gateway_method[denied_6].authorization",
        "remediation": {
          "cloudformation": "Set `Properties.AuthorizationType` attribute to value other than `NONE`",
          "terraform": "Set `authorization` attribute to value other than `NONE`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "API gateway will accept http methods without authorization header",
        "publicId": "SNYK-CC-TF-99",
        "title": "API Gateway allows anonymous access",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-method-settings-method-request.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigateway-method.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API gateway will accept http methods without authorization header",
          "impact": "Anyone could potentially access resources behind the gateway",
          "resolve": "Set `authorization` attribute to value other than `NONE`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-99",
        "path": [
          "resource",
          "aws_api_gateway_method[denied_6]",
          "authorization"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_api_gateway_stage_xray_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_api_gateway_stage_xray_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `access_log_settings` attribute",
        "id": "SNYK-CC-TF-138",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_api_gateway_stage[allowed].access_log_settings",
        "remediation": {
          "cloudformation": "Set `Properties.AccessLogSetting.DestinationArn` attribute",
          "terraform": "Set `access_log_settings` attribute"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "Amazon Api Gateway access logging is not enabled",
        "publicId": "SNYK-CC-TF-138",
        "title": "API Gateway access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Api Gateway access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `access_log_settings` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-138",
        "path": [
          "resource",
          "aws_api_gateway_stage[allowed]",
          "access_log_settings"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_api_gateway_stage_xray_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_api_gateway_stage_xray_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `xray_tracing_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-129",
        "impact": "Traces will not be collected for this api gateway, which can impede incident management",
        "msg": "resource.aws_api_gateway_stage[denied].xray_tracing_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.TracingEnabled` attribute to `true`",
          "terraform": "Set `xray_tracing_enabled` attribute to `true`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "X-Ray tracing is not enabled for this api gateway stage",
        "publicId": "SNYK-CC-TF-129",
        "title": "API Gateway X-Ray tracing disabled",
        "references": [
          "https://docs.aws.amazon.com/xray/latest/devguide/xray-services-apigateway.html",
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-enabling-xray.html",
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-understanding-xray-traces.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "X-Ray tracing is not enabled for this api gateway stage",
          "impact": "Traces will not be collected for this api gateway, which can impede incident management",
          "resolve": "Set `xray_tracing_enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-129",
        "path": [
          "resource",
          "aws_api_gateway_stage[denied]",
          "xray_tracing_enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `xray_tracing_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-129",
        "impact": "Traces will not be collected for this api gateway, which can impede incident management",
        "msg": "resource.aws_api_gateway_stage[denied_2].xray_tracing_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.TracingEnabled` attribute to `true`",
          "terraform": "Set `xray_tracing_enabled` attribute to `true`"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "X-Ray tracing is not enabled for this api gateway stage",
        "publicId": "SNYK-CC-TF-129",
        "title": "API Gateway X-Ray tracing disabled",
        "references": [
          "https://docs.aws.amazon.com/xray/latest/devguide/xray-services-apigateway.html",
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-enabling-xray.html",
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-understanding-xray-traces.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "X-Ray tracing is not enabled for this api gateway stage",
          "impact": "Traces will not be collected for this api gateway, which can impede incident management",
          "resolve": "Set `xray_tracing_enabled` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-129",
        "path": [
          "resource",
          "aws_api_gateway_stage[denied_2]",
          "xray_tracing_enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `access_log_settings` attribute",
        "id": "SNYK-CC-TF-138",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_api_gateway_stage[denied].access_log_settings",
        "remediation": {
          "cloudformation": "Set `Properties.AccessLogSetting.DestinationArn` attribute",
          "terraform": "Set `access_log_settings` attribute"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "Amazon Api Gateway access logging is not enabled",
        "publicId": "SNYK-CC-TF-138",
        "title": "API Gateway access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Api Gateway access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `access_log_settings` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-138",
        "path": [
          "resource",
          "aws_api_gateway_stage[denied]",
          "access_log_settings"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `access_log_settings` attribute",
        "id": "SNYK-CC-TF-138",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_api_gateway_stage[denied_2].access_log_settings",
        "remediation": {
          "cloudformation": "Set `Properties.AccessLogSetting.DestinationArn` attribute",
          "terraform": "Set `access_log_settings` attribute"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "Amazon Api Gateway access logging is not enabled",
        "publicId": "SNYK-CC-TF-138",
        "title": "API Gateway access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Api Gateway access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `access_log_settings` attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-138",
        "path": [
          "resource",
          "aws_api_gateway_stage[denied_2]",
          "access_log_settings"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_athena_workgroup_settings_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_athena_workgroup_settings_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_athena_workgroup_settings_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_athena_workgroup_settings_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `configuration.enforce_workgroup_configuration` attribute to `true`",
        "id": "SNYK-CC-TF-113",
        "impact": "Encryption of the results can be disabled by the client, and in an event of unauthorized access to the data they would be able to read the contents",
        "msg": "resource.aws_athena_workgroup[denied].configuration.enforce_workgroup_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.WorkGroupConfiguration.EnforceWorkGroupConfiguration` attribute to `true`",
          "terraform": "Set `configuration.enforce_workgroup_configuration` attribute to `true`"
        },
        "subType": "Athena",
        "issue": "Athena workgroup settings can be overridden by client",
        "publicId": "SNYK-CC-TF-113",
        "title": "Athena workgroup does not enforce service settings",
        "references": [
          "https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html",
          "https://docs.aws.amazon.com/athena/latest/ug/encryption.html",
          "https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Athena workgroup settings can be overridden by client",
          "impact": "Encryption of the results can be disabled by the client, and in an event of unauthorized access to the data they would be able to read the contents",
          "resolve": "Set `configuration.enforce_workgroup_configuration` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-113",
        "path": [
          "resource",
          "aws_athena_workgroup[denied]",
          "configuration",
          "enforce_workgroup_configuration"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_codebuild_project_encryption_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_codebuild_project_encryption_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_codebuild_project_encryption_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_codebuild_project_encryption_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration",
        "id": "SNYK-CC-TF-111",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_codebuild_project[denied].artifacts.encryption_disabled",
        "remediation": {
          "cloudformation": "Set `Properties.Artifacts.EncryptionDisabled` or `Properties.SecondaryArtifacts.EncryptionDisabled` attributes to `false`, or remove the attribute from configuration",
          "terraform": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "subType": "CodeBuild",
        "issue": "CodeBuild project encryption is explicitly disabled",
        "publicId": "SNYK-CC-TF-111",
        "title": "Non-Encrypted CodeBuild artifacts",
        "references": [
          "https://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CodeBuild project encryption is explicitly disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-111",
        "path": [
          "resource",
          "aws_codebuild_project[denied]",
          "artifacts",
          "encryption_disabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration",
        "id": "SNYK-CC-TF-111",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_codebuild_project[denied_5].secondary_artifacts[1].encryption_disabled",
        "remediation": {
          "cloudformation": "Set `Properties.Artifacts.EncryptionDisabled` or `Properties.SecondaryArtifacts.EncryptionDisabled` attributes to `false`, or remove the attribute from configuration",
          "terraform": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "subType": "CodeBuild",
        "issue": "CodeBuild project encryption is explicitly disabled",
        "publicId": "SNYK-CC-TF-111",
        "title": "Non-Encrypted CodeBuild artifacts",
        "references": [
          "https://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CodeBuild project encryption is explicitly disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-111",
        "path": [
          "resource",
          "aws_codebuild_project[denied_5]",
          "secondary_artifacts[1]",
          "encryption_disabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration",
        "id": "SNYK-CC-TF-111",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_codebuild_project[denied_2].artifacts.encryption_disabled",
        "remediation": {
          "cloudformation": "Set `Properties.Artifacts.EncryptionDisabled` or `Properties.SecondaryArtifacts.EncryptionDisabled` attributes to `false`, or remove the attribute from configuration",
          "terraform": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "subType": "CodeBuild",
        "issue": "CodeBuild project encryption is explicitly disabled",
        "publicId": "SNYK-CC-TF-111",
        "title": "Non-Encrypted CodeBuild artifacts",
        "references": [
          "https://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CodeBuild project encryption is explicitly disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-111",
        "path": [
          "resource",
          "aws_codebuild_project[denied_2]",
          "artifacts",
          "encryption_disabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration",
        "id": "SNYK-CC-TF-111",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_codebuild_project[denied_3].secondary_artifacts[0].encryption_disabled",
        "remediation": {
          "cloudformation": "Set `Properties.Artifacts.EncryptionDisabled` or `Properties.SecondaryArtifacts.EncryptionDisabled` attributes to `false`, or remove the attribute from configuration",
          "terraform": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "subType": "CodeBuild",
        "issue": "CodeBuild project encryption is explicitly disabled",
        "publicId": "SNYK-CC-TF-111",
        "title": "Non-Encrypted CodeBuild artifacts",
        "references": [
          "https://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CodeBuild project encryption is explicitly disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-111",
        "path": [
          "resource",
          "aws_codebuild_project[denied_3]",
          "secondary_artifacts[0]",
          "encryption_disabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration",
        "id": "SNYK-CC-TF-111",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_codebuild_project[denied_4].secondary_artifacts[0].encryption_disabled",
        "remediation": {
          "cloudformation": "Set `Properties.Artifacts.EncryptionDisabled` or `Properties.SecondaryArtifacts.EncryptionDisabled` attributes to `false`, or remove the attribute from configuration",
          "terraform": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "subType": "CodeBuild",
        "issue": "CodeBuild project encryption is explicitly disabled",
        "publicId": "SNYK-CC-TF-111",
        "title": "Non-Encrypted CodeBuild artifacts",
        "references": [
          "https://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CodeBuild project encryption is explicitly disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `artifacts.encryption_disabled` or `secondary_artifacts.encryption_disabled` attributes to `false`, or remove the attribute from configuration"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-111",
        "path": [
          "resource",
          "aws_codebuild_project[denied_4]",
          "secondary_artifacts[0]",
          "encryption_disabled"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_ec2_imds_v2_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_ec2_imds_v2_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[allowed_3].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[allowed_3]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[allowed].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[allowed]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[allowed].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[allowed]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[allowed_3].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[allowed_3]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[allowed_2].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[allowed_2]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[allowed_2].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[allowed_2]",
          "root_block_device",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_ec2_imds_v2_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_ec2_imds_v2_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[denied].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[denied]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[denied_2].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[denied_2]",
          "metadata_options"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[denied].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[denied]",
          "metadata_options"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[denied_3].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[denied_3]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[denied].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[denied]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[denied_2].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[denied_2]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[denied_3].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[denied_3]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[denied_2].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[denied_2]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[denied_3].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[denied_3]",
          "metadata_options"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_ecr_policy_allow_all_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_ecr_policy_allow_all_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_ecr_policy_allow_all_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_ecr_policy_allow_all_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `statement.principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`",
        "id": "SNYK-CC-TF-93",
        "impact": "Any AWS account will be able to perform actions specified in the policy",
        "msg": "resource.aws_ecr_repository_policy[denied_2].policy.statement[1]",
        "remediation": {
          "cloudformation": "Set `Statement.Principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`",
          "terraform": "Set `statement.principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`"
        },
        "subType": "ECR",
        "issue": "The ECR policy allows access to any account",
        "publicId": "SNYK-CC-TF-93",
        "title": "ECR policy allows public access",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ECR policy allows access to any account",
          "impact": "Any AWS account will be able to perform actions specified in the policy",
          "resolve": "Set `statement.principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-93",
        "path": [
          "resource",
          "aws_ecr_repository_policy[denied_2]",
          "policy",
          "statement[1]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `statement.principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`",
        "id": "SNYK-CC-TF-93",
        "impact": "Any AWS account will be able to perform actions specified in the policy",
        "msg": "resource.aws_ecr_repository_policy[denied].policy.statement[0]",
        "remediation": {
          "cloudformation": "Set `Statement.Principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`",
          "terraform": "Set `statement.principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`"
        },
        "subType": "ECR",
        "issue": "The ECR policy allows access to any account",
        "publicId": "SNYK-CC-TF-93",
        "title": "ECR policy allows public access",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/repository-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ECR policy allows access to any account",
          "impact": "Any AWS account will be able to perform actions specified in the policy",
          "resolve": "Set `statement.principal` attribute of policy document to specific accounts only e.g. `arn:aws:iam::account-id:root`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-93",
        "path": [
          "resource",
          "aws_ecr_repository_policy[denied]",
          "policy",
          "statement[0]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_ecs_cluster_insights_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_ecs_cluster_insights_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_ecs_cluster_insights_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_ecs_cluster_insights_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`",
        "id": "SNYK-CC-TF-128",
        "impact": "Performance log events will not be collected and displayed in CloudWatch",
        "msg": "resource.aws_ecs_cluster[denied].setting",
        "remediation": {
          "cloudformation": "Set `Properties.ClusterSettings.Name` attribute to `containerInsights`, and `Properties.ClusterSettings.Value` to `enabled`",
          "terraform": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "subType": "ECS",
        "issue": "ECS ContainerInsights will not be enabled on the cluster",
        "publicId": "SNYK-CC-TF-128",
        "title": "ECS ContainerInsights disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECS ContainerInsights will not be enabled on the cluster",
          "impact": "Performance log events will not be collected and displayed in CloudWatch",
          "resolve": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-128",
        "path": [
          "resource",
          "aws_ecs_cluster[denied]",
          "setting"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`",
        "id": "SNYK-CC-TF-128",
        "impact": "Performance log events will not be collected and displayed in CloudWatch",
        "msg": "resource.aws_ecs_cluster[denied_3].setting[0]",
        "remediation": {
          "cloudformation": "Set `Properties.ClusterSettings.Name` attribute to `containerInsights`, and `Properties.ClusterSettings.Value` to `enabled`",
          "terraform": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "subType": "ECS",
        "issue": "ECS ContainerInsights will not be enabled on the cluster",
        "publicId": "SNYK-CC-TF-128",
        "title": "ECS ContainerInsights disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECS ContainerInsights will not be enabled on the cluster",
          "impact": "Performance log events will not be collected and displayed in CloudWatch",
          "resolve": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-128",
        "path": [
          "resource",
          "aws_ecs_cluster[denied_3]",
          "setting[0]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`",
        "id": "SNYK-CC-TF-128",
        "impact": "Performance log events will not be collected and displayed in CloudWatch",
        "msg": "resource.aws_ecs_cluster[denied_2].setting",
        "remediation": {
          "cloudformation": "Set `Properties.ClusterSettings.Name` attribute to `containerInsights`, and `Properties.ClusterSettings.Value` to `enabled`",
          "terraform": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "subType": "ECS",
        "issue": "ECS ContainerInsights will not be enabled on the cluster",
        "publicId": "SNYK-CC-TF-128",
        "title": "ECS ContainerInsights disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContainerInsights.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECS ContainerInsights will not be enabled on the cluster",
          "impact": "Performance log events will not be collected and displayed in CloudWatch",
          "resolve": "Set `settings.name` attribute to `containerInsights`, and `settings.value` to `enabled`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-128",
        "path": [
          "resource",
          "aws_ecs_cluster[denied_2]",
          "setting"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_eks_public_access_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_eks_public_access_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[allowed_2].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[allowed_2]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[allowed_3].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[allowed_3]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[allowed_2].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[allowed_2]",
          "encryption_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[allowed_3].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[allowed_3]",
          "encryption_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[allowed].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[allowed]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[allowed].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[allowed]",
          "encryption_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_eks_public_access_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_eks_public_access_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied_4].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied_4]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[denied].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[denied]",
          "encryption_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`",
        "id": "SNYK-CC-TF-94",
        "impact": "Anyone may be able to establish network connectivity to the API server",
        "msg": "resource.aws_eks_cluster[denied].vpc_config",
        "subType": "EKS",
        "issue": "API endpoint of the EKS cluster is public",
        "publicId": "SNYK-CC-TF-94",
        "title": "EKS cluster allows public access",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API endpoint of the EKS cluster is public",
          "impact": "Anyone may be able to establish network connectivity to the API server",
          "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-94",
        "path": [
          "resource",
          "aws_eks_cluster[denied]",
          "vpc_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[denied_4].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[denied_4]",
          "encryption_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`",
        "id": "SNYK-CC-TF-94",
        "impact": "Anyone may be able to establish network connectivity to the API server",
        "msg": "resource.aws_eks_cluster[denied_3].vpc_config",
        "subType": "EKS",
        "issue": "API endpoint of the EKS cluster is public",
        "publicId": "SNYK-CC-TF-94",
        "title": "EKS cluster allows public access",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API endpoint of the EKS cluster is public",
          "impact": "Anyone may be able to establish network connectivity to the API server",
          "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-94",
        "path": [
          "resource",
          "aws_eks_cluster[denied_3]",
          "vpc_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`",
        "id": "SNYK-CC-TF-94",
        "impact": "Anyone may be able to establish network connectivity to the API server",
        "msg": "resource.aws_eks_cluster[denied_2].vpc_config",
        "subType": "EKS",
        "issue": "API endpoint of the EKS cluster is public",
        "publicId": "SNYK-CC-TF-94",
        "title": "EKS cluster allows public access",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API endpoint of the EKS cluster is public",
          "impact": "Anyone may be able to establish network connectivity to the API server",
          "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-94",
        "path": [
          "resource",
          "aws_eks_cluster[denied_2]",
          "vpc_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`",
        "id": "SNYK-CC-TF-94",
        "impact": "Anyone may be able to establish network connectivity to the API server",
        "msg": "resource.aws_eks_cluster[denied_4].vpc_config",
        "subType": "EKS",
        "issue": "API endpoint of the EKS cluster is public",
        "publicId": "SNYK-CC-TF-94",
        "title": "EKS cluster allows public access",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "API endpoint of the EKS cluster is public",
          "impact": "Anyone may be able to establish network connectivity to the API server",
          "resolve": "Set `vpc_config.public_access_cidrs` attribute to specific net address e.g. `192.168.0.0/24`, or set `vpc_config.endpoint_public_access` attribute to `false`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-94",
        "path": [
          "resource",
          "aws_eks_cluster[denied_4]",
          "vpc_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied_3].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied_3]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied_2].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied_2]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[denied_3].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[denied_3]",
          "encryption_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`.",
        "id": "SNYK-CC-TF-107",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_eks_cluster[denied_2].encryption_config",
        "remediation": {
          "cloudformation": "Set the `Properties.EncryptionConfig` object with the relevant `provider` & `resources`.",
          "terraform": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "subType": "EKS",
        "issue": "EKS cluster secrets are not encrypted",
        "publicId": "SNYK-CC-TF-107",
        "title": "EKS cluster has non-encrypted secrets at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#encryption_config",
          "https://aws.amazon.com/blogs/containers/using-eks-encryption-provider-support-for-defense-in-depth/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "EKS cluster secrets are not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set the `encryption_config` object with the relevant `provider` & `resources`."
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-107",
        "path": [
          "resource",
          "aws_eks_cluster[denied_2]",
          "encryption_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_lambda_function_secrets_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_lambda_function_secrets_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[allowed_2].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[allowed_2]",
          "tracing_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[allowed].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[allowed]",
          "tracing_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\aws_lambda_function_secrets_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\aws_lambda_function_secrets_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied_4].environment.variables[token]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied_4]",
          "environment",
          "variables[token]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied_2].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied_2]",
          "tracing_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied_6].environment.variables[aws_secret_access_key]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 43,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied_6]",
          "environment",
          "variables[aws_secret_access_key]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied_5].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied_5]",
          "tracing_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied_6].environment.variables[secret]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 43,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied_6]",
          "environment",
          "variables[secret]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied_3].environment.variables[aws_access_key_id]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied_3]",
          "environment",
          "variables[aws_access_key_id]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied_6].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 42,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied_6]",
          "tracing_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied_2].environment.variables[private_key]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied_2]",
          "environment",
          "variables[private_key]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied_3].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied_3]",
          "tracing_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied_4].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied_4]",
          "tracing_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied]",
          "tracing_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied_5].environment.variables[api_key]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied_5]",
          "environment",
          "variables[api_key]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `environment` definition",
        "id": "SNYK-CC-TF-122",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_lambda_function[denied].environment.variables[password]",
        "remediation": {
          "cloudformation": "Remove secret value from `environment` definition",
          "terraform": "Remove secret value from `environment` definition"
        },
        "subType": "Lambda",
        "issue": "Secret value has been declared in environment variable",
        "publicId": "SNYK-CC-TF-122",
        "title": "Potentially sensitive variable in lambda environment",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in environment variable",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` definition"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-122",
        "path": [
          "resource",
          "aws_lambda_function[denied]",
          "environment",
          "variables[password]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\cloudfront\\cloudfront_without_aws_waf.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\cloudfront\\cloudfront_without_aws_waf.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[denied].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[denied]",
          "logging_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[denied].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[denied]",
          "web_acl_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\cloudfront\\cloudfront_with_aws_waf.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\cloudfront\\cloudfront_with_aws_waf.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[allowed].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[allowed]",
          "logging_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\cloudfront_https_distribution.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\cloudfront_https_distribution.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "logging_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "web_acl_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\cloudfront_http_distribution.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\cloudfront_http_distribution.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `default_cache_behavior.viewer_protocol_policy` attribute to `redirect-to-https` or `https-only`",
        "id": "SNYK-CC-TF-57",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].default_cache_behavior.viewer_protocol_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.ViewerProtocolPolicy` attribute to `redirect-to-https` or `https-only`",
          "terraform": "Set `default_cache_behavior.viewer_protocol_policy` attribute to `redirect-to-https` or `https-only`"
        },
        "subType": "CloudFront",
        "issue": "Cloudfront distribution does not enforce HTTPS",
        "publicId": "SNYK-CC-TF-57",
        "title": "Cloudfront distribution does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesViewerProtocolPolicy",
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Cloudfront distribution does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `default_cache_behavior.viewer_protocol_policy` attribute to `redirect-to-https` or `https-only`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-57",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "default_cache_behavior",
          "viewer_protocol_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "logging_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "web_acl_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\cloudfront_obsolete_tls_distribution.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\cloudfront_obsolete_tls_distribution.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `viewer_certificate.minimum_protocol_version` attribute to `TLSv1.2_2019`",
        "id": "SNYK-CC-TF-58",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].viewer_certificate.minimum_protocol_version",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.ViewerCertificate.MinimumProtocolVersion` attribute to `TLSv1.2_2019`",
          "terraform": "Set `viewer_certificate.minimum_protocol_version` attribute to `TLSv1.2_2019`"
        },
        "subType": "CloudFront",
        "issue": "The cloudfront distribution will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-58",
        "title": "Distribution does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy",
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The cloudfront distribution will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `viewer_certificate.minimum_protocol_version` attribute to `TLSv1.2_2019`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-58",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "viewer_certificate",
          "minimum_protocol_version"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "logging_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[cloudfront].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[cloudfront]",
          "web_acl_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\cloudfront_tls_distribution.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\cloudfront_tls_distribution.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[default].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[default]",
          "logging_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[default].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[default]",
          "web_acl_id"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[tls].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[tls]",
          "web_acl_id"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[required].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[required]",
          "logging_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN",
        "id": "SNYK-CC-TF-75",
        "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
        "msg": "resource.aws_cloudfront_distribution[required].web_acl_id",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.WebACLId` attribute to existing AWS WAF acl ARN",
          "terraform": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "subType": "CloudFront",
        "issue": "The AWS WAF is not in front of cloudfront distribution",
        "publicId": "SNYK-CC-TF-75",
        "title": "Cloudfront distribution without WAF",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html",
          "https://docs.aws.amazon.com/waf/latest/developerguide/web-acl.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS WAF is not in front of cloudfront distribution",
          "impact": "The WAF service will not protect the application from common web based attacks such as SQL injections",
          "resolve": "Set `web_acl_id` attribute to existing AWS WAF acl ARN"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-75",
        "path": [
          "resource",
          "aws_cloudfront_distribution[required]",
          "web_acl_id"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[tls].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[tls]",
          "logging_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\ecr_scanning.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\ecr_scanning.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_ecr_repository[allowed].encryption_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "resource",
          "aws_ecr_repository[allowed]",
          "encryption_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "resource.aws_ecr_repository[allowed].image_tag_mutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "resource",
          "aws_ecr_repository[allowed]",
          "image_tag_mutability"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\ecs\\no_sensitive_env_variables.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\ecs\\no_sensitive_env_variables.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\ecs\\sensitive_env_variables.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\ecs\\sensitive_env_variables.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Remove secret value from `environment` map",
        "id": "SNYK-CC-TF-52",
        "impact": "The secret value will readable to anyone with access to VCS",
        "msg": "resource.aws_ecs_task_definition[service].container_definitions[0].environment[DATABASE_PASSWORD]",
        "remediation": {
          "cloudformation": "Remove secret value from `ContainerDefinitions.Environment` map",
          "terraform": "Remove secret value from `environment` map"
        },
        "subType": "ECS",
        "issue": "Secret value has been declared in variable definition",
        "publicId": "SNYK-CC-TF-52",
        "title": "Potentially sensitive variable in task definition",
        "references": [
          "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in variable definition",
          "impact": "The secret value will readable to anyone with access to VCS",
          "resolve": "Remove secret value from `environment` map"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-52",
        "path": [
          "resource",
          "aws_ecs_task_definition[service]",
          "container_definitions[0]",
          "environment[DATABASE_PASSWORD]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticache_replication_group_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticache_replication_group_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `transit_encryption_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-214",
        "impact": "The data could be read in transit.",
        "msg": "resource.aws_elasticache_replication_group[allowed].transit_encryption_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.TransitEncryptionEnabled` attribute to `true`",
          "terraform": "Set `transit_encryption_enabled` attribute to `true`"
        },
        "subType": "ElastiCache",
        "issue": "Data in the Elasticache Replication Group is not securely encrypted in transit",
        "publicId": "SNYK-CC-TF-214",
        "title": "Non-Encrypted ElastiCache data in transit",
        "references": [
          "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Data in the Elasticache Replication Group is not securely encrypted in transit",
          "impact": "The data could be read in transit.",
          "resolve": "Set `transit_encryption_enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-214",
        "path": [
          "resource",
          "aws_elasticache_replication_group[allowed]",
          "transit_encryption_enabled"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticache_replication_group_not_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticache_replication_group_not_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `at_rest_encryption_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-71",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticache_replication_group[denied_2].at_rest_encryption_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.AtRestEncryptionEnabled` attribute to `true`",
          "terraform": "Set `at_rest_encryption_enabled` attribute to `true`"
        },
        "subType": "ElastiCache",
        "issue": "The ElastiCache replication group is not encrypted at rest",
        "publicId": "SNYK-CC-TF-71",
        "title": "Non-Encrypted ElastiCache Replication Group",
        "references": [
          "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ElastiCache replication group is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `at_rest_encryption_enabled` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-71",
        "path": [
          "resource",
          "aws_elasticache_replication_group[denied_2]",
          "at_rest_encryption_enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `transit_encryption_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-214",
        "impact": "The data could be read in transit.",
        "msg": "resource.aws_elasticache_replication_group[denied_2].transit_encryption_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.TransitEncryptionEnabled` attribute to `true`",
          "terraform": "Set `transit_encryption_enabled` attribute to `true`"
        },
        "subType": "ElastiCache",
        "issue": "Data in the Elasticache Replication Group is not securely encrypted in transit",
        "publicId": "SNYK-CC-TF-214",
        "title": "Non-Encrypted ElastiCache data in transit",
        "references": [
          "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Data in the Elasticache Replication Group is not securely encrypted in transit",
          "impact": "The data could be read in transit.",
          "resolve": "Set `transit_encryption_enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-214",
        "path": [
          "resource",
          "aws_elasticache_replication_group[denied_2]",
          "transit_encryption_enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `transit_encryption_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-214",
        "impact": "The data could be read in transit.",
        "msg": "resource.aws_elasticache_replication_group[denied].transit_encryption_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.TransitEncryptionEnabled` attribute to `true`",
          "terraform": "Set `transit_encryption_enabled` attribute to `true`"
        },
        "subType": "ElastiCache",
        "issue": "Data in the Elasticache Replication Group is not securely encrypted in transit",
        "publicId": "SNYK-CC-TF-214",
        "title": "Non-Encrypted ElastiCache data in transit",
        "references": [
          "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Data in the Elasticache Replication Group is not securely encrypted in transit",
          "impact": "The data could be read in transit.",
          "resolve": "Set `transit_encryption_enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-214",
        "path": [
          "resource",
          "aws_elasticache_replication_group[denied]",
          "transit_encryption_enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `at_rest_encryption_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-71",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticache_replication_group[denied].at_rest_encryption_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.AtRestEncryptionEnabled` attribute to `true`",
          "terraform": "Set `at_rest_encryption_enabled` attribute to `true`"
        },
        "subType": "ElastiCache",
        "issue": "The ElastiCache replication group is not encrypted at rest",
        "publicId": "SNYK-CC-TF-71",
        "title": "Non-Encrypted ElastiCache Replication Group",
        "references": [
          "https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ElastiCache replication group is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `at_rest_encryption_enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-71",
        "path": [
          "resource",
          "aws_elasticache_replication_group[denied]",
          "at_rest_encryption_enabled"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_c5.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_c5.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[allowed]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-64",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[allowed].encrypt_at_rest",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionAtRestOptions` attribute to `true`",
          "terraform": "Set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster is not encrypted at rest",
        "publicId": "SNYK-CC-TF-64",
        "title": "Encryption at rest is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-64",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "encrypt_at_rest"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_encryption_at_rest.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_encryption_at_rest.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[allowed]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_https.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_https.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[allowed]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[allowed].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "cluster_config",
          "instance_type"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_m3_default.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_m3_default.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied_2].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_node_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_node_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[allowed]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[allowed].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "cluster_config",
          "instance_type"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_no_encryption_at_rest.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_no_encryption_at_rest.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-64",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied_2].encrypt_at_rest",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionAtRestOptions` attribute to `true`",
          "terraform": "Set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster is not encrypted at rest",
        "publicId": "SNYK-CC-TF-64",
        "title": "Encryption at rest is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-64",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "encrypt_at_rest"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-64",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied].encrypt_at_rest",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionAtRestOptions` attribute to `true`",
          "terraform": "Set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster is not encrypted at rest",
        "publicId": "SNYK-CC-TF-64",
        "title": "Encryption at rest is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-64",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "encrypt_at_rest"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_no_https.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_no_https.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied_2].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_no_node_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_no_node_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied_2].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`",
        "id": "SNYK-CC-TF-67",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.enforce_https",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.EnforceHTTPS` attribute to `true`",
          "terraform": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The HTTPS is not enforced for elasticsearch cluster",
        "publicId": "SNYK-CC-TF-67",
        "title": "Cluster does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The HTTPS is not enforced for elasticsearch cluster",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `domain_endpoint_options.enforce_https` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-67",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "enforce_https"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_old_tls_policy.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_old_tls_policy.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied_2].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied_2].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[denied_2].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[denied].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "cluster_config",
          "instance_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`",
        "id": "SNYK-CC-TF-68",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_elasticsearch_domain[denied].domain_endpoint_options.tls_security_policy",
        "remediation": {
          "cloudformation": "Set `Properties.DomainEndpointOptions.TLSSecurityPolicy` attribute to `Policy-Min-TLS-1-2-2019-07`",
          "terraform": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "subType": "ElasticSearch",
        "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-68",
        "title": "Cluster does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-data-protection.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticsearch-domain.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The elasticsearch cluster will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `domain_endpoint_options.tls_security_policy` attribute to `Policy-Min-TLS-1-2-2019-07`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-68",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]",
          "domain_endpoint_options",
          "tls_security_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\elasticsearch_domain_tls_policy.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\elasticsearch_domain_tls_policy.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-66",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_elasticsearch_domain[allowed].node_to_node_encryption",
        "remediation": {
          "cloudformation": "Set `Properties.NodeToNodeEncryptionOptions` attribute to `true`",
          "terraform": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-66",
        "title": "Node-to-node encryption is disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/ntn.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `node_to_node_encryption.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-66",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "node_to_node_encryption"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[allowed]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-65",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_elasticsearch_domain[allowed].cluster_config.instance_type",
        "remediation": {
          "cloudformation": "Set `Properties.ElasticsearchClusterConfig.InstanceType` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `EncryptionAtRestOptions.enabled` attribute to `true`",
          "terraform": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "subType": "ElasticSearch",
        "issue": "The instance type does not support encryption at rest",
        "publicId": "SNYK-CC-TF-65",
        "title": "Encryption at rest is not supported by instance type",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The instance type does not support encryption at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `cluster_config.instance_type` attribute to supported instance type e.g. `c5.large.elasticsearch`, and set `encrypt_at_rest.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-65",
        "path": [
          "resource",
          "aws_elasticsearch_domain[allowed]",
          "cluster_config",
          "instance_type"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\iam_policy_document_whitelist.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\iam_policy_document_whitelist.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\iam_policy_document_wildcard.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\iam_policy_document_wildcard.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "description": "",
        "resolve": "Set `statement.action` attribute to specific actions e.g. `s3:ListBucket`",
        "id": "SNYK-CC-TF-69",
        "impact": "Granting permission to perform any action is against 'least privilege' principle",
        "remediation": {
          "cloudformation": "Set `Action` attribute in `Properties.PolicyDocument` to specific actions e.g. `s3:ListBucket`",
          "terraform": "Set `statement.action` attribute to specific actions e.g. `s3:ListBucket`"
        },
        "subType": "IAM",
        "publicId": "SNYK-CC-TF-69",
        "title": "Wildcard action in IAM Policy",
        "severity": "high",
        "msg": "data.aws_iam_policy_document[denied].statement",
        "issue": "The IAM policy allows all actions on resource",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_action.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM policy allows all actions on resource",
          "impact": "Granting permission to perform any action is against 'least privilege' principle",
          "resolve": "Set `statement.action` attribute to specific actions e.g. `s3:ListBucket`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-69",
        "path": [
          "data",
          "aws_iam_policy_document[denied]",
          "statement"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\instance_root_block_no_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\instance_root_block_no_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[unencrypted].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[unencrypted]",
          "metadata_options"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[unencrypted].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[unencrypted]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[unencrypted].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[unencrypted]",
          "root_block_device",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\kinesis_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\kinesis_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\kinesis_not_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\kinesis_not_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `encryption_type` attribute to `KMS`",
        "id": "SNYK-CC-TF-62",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_kinesis_stream[denied].encryption_type",
        "remediation": {
          "cloudformation": "Set `Properties.StreamEncryption.EncryptionType` attribute to `KMS`",
          "terraform": "Set `encryption_type` attribute to `KMS`"
        },
        "subType": "Kinesis",
        "issue": "The AWS kinesis server-side encryption is disabled",
        "publicId": "SNYK-CC-TF-62",
        "title": "Non-Encrypted Kinesis Stream",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.htm://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS kinesis server-side encryption is disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encryption_type` attribute to `KMS`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-62",
        "path": [
          "resource",
          "aws_kinesis_stream[denied]",
          "encryption_type"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encryption_type` attribute to `KMS`",
        "id": "SNYK-CC-TF-62",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_kinesis_stream[denied_2].encryption_type",
        "remediation": {
          "cloudformation": "Set `Properties.StreamEncryption.EncryptionType` attribute to `KMS`",
          "terraform": "Set `encryption_type` attribute to `KMS`"
        },
        "subType": "Kinesis",
        "issue": "The AWS kinesis server-side encryption is disabled",
        "publicId": "SNYK-CC-TF-62",
        "title": "Non-Encrypted Kinesis Stream",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.htm://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS kinesis server-side encryption is disabled",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encryption_type` attribute to `KMS`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-62",
        "path": [
          "resource",
          "aws_kinesis_stream[denied_2]",
          "encryption_type"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\launch_config_root_block_no_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\launch_config_root_block_no_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_launch_configuration[unencrypted].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_launch_configuration[unencrypted]",
          "root_block_device",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\msk_client_plaintext.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\msk_client_plaintext.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[client_both].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[client_both]",
          "logging_info"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encryption_info.encryption_in_transit.client_broker` attribute to `TLS`",
        "id": "SNYK-CC-TF-59",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_msk_cluster[client_both].encryption_info.encryption_in_transit.client_broker",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionInfo.EncryptionInTransit.ClientBroker` attribute to `TLS`",
          "terraform": "Set `encryption_info.encryption_in_transit.client_broker` attribute to `TLS`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "The client traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-59",
        "title": "MSK allows client plaintext traffic",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `encryption_info.encryption_in_transit.client_broker` attribute to `TLS`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-59",
        "path": [
          "resource",
          "aws_msk_cluster[client_both]",
          "encryption_info",
          "encryption_in_transit",
          "client_broker"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\msk_cluster_plaintext.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\msk_cluster_plaintext.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[in_cluster].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[in_cluster]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[client_plaintext].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[client_plaintext]",
          "logging_info"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encryption_info.encryption_in_transit.client_broker` attribute to `TLS`",
        "id": "SNYK-CC-TF-59",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_msk_cluster[client_plaintext].encryption_info.encryption_in_transit.client_broker",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionInfo.EncryptionInTransit.ClientBroker` attribute to `TLS`",
          "terraform": "Set `encryption_info.encryption_in_transit.client_broker` attribute to `TLS`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "The client traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-59",
        "title": "MSK allows client plaintext traffic",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `encryption_info.encryption_in_transit.client_broker` attribute to `TLS`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-59",
        "path": [
          "resource",
          "aws_msk_cluster[client_plaintext]",
          "encryption_info",
          "encryption_in_transit",
          "client_broker"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encryption_info.encryption_in_transit.in_cluster` attribute to `true`",
        "id": "SNYK-CC-TF-60",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_msk_cluster[in_cluster].encryption_info.encryption_in_transit.in_cluster",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionInfo.EncryptionInTransit.InCluster` attribute to `true`",
          "terraform": "Set `encryption_info.encryption_in_transit.in_cluster` attribute to `true`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "The inter-cluster traffic will not be encrypted in transit",
        "publicId": "SNYK-CC-TF-60",
        "title": "MSK allows in cluster plaintext traffic",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inter-cluster traffic will not be encrypted in transit",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set `encryption_info.encryption_in_transit.in_cluster` attribute to `true`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-60",
        "path": [
          "resource",
          "aws_msk_cluster[in_cluster]",
          "encryption_info",
          "encryption_in_transit",
          "in_cluster"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\msk_cluster_tls.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\msk_cluster_tls.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[in_cluster].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[in_cluster]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[client_tls].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[client_tls]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[tls].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[tls]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[default].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[default]",
          "logging_info"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\no_ecr_scanning.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\no_ecr_scanning.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `image_scanning_configuration.scan_on_push` attribute to `true`",
        "id": "SNYK-CC-TF-61",
        "impact": "The known vulnerabilities will not be automatically discovered",
        "msg": "resource.aws_ecr_repository[denied].image_scanning_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.ImageScanningConfiguration` attribute to `true`",
          "terraform": "Set `image_scanning_configuration.scan_on_push` attribute to `true`"
        },
        "subType": "ECR",
        "issue": "The ECR image scan for known vulnerabilities is disabled",
        "publicId": "SNYK-CC-TF-61",
        "title": "ECR image scanning is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ECR image scan for known vulnerabilities is disabled",
          "impact": "The known vulnerabilities will not be automatically discovered",
          "resolve": "Set `image_scanning_configuration.scan_on_push` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-61",
        "path": [
          "resource",
          "aws_ecr_repository[denied]",
          "image_scanning_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_ecr_repository[denied_2].encryption_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "resource",
          "aws_ecr_repository[denied_2]",
          "encryption_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "resource.aws_ecr_repository[denied].image_tag_mutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "resource",
          "aws_ecr_repository[denied]",
          "image_tag_mutability"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `image_scanning_configuration.scan_on_push` attribute to `true`",
        "id": "SNYK-CC-TF-61",
        "impact": "The known vulnerabilities will not be automatically discovered",
        "msg": "resource.aws_ecr_repository[denied_2].image_scanning_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.ImageScanningConfiguration` attribute to `true`",
          "terraform": "Set `image_scanning_configuration.scan_on_push` attribute to `true`"
        },
        "subType": "ECR",
        "issue": "The ECR image scan for known vulnerabilities is disabled",
        "publicId": "SNYK-CC-TF-61",
        "title": "ECR image scanning is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The ECR image scan for known vulnerabilities is disabled",
          "impact": "The known vulnerabilities will not be automatically discovered",
          "resolve": "Set `image_scanning_configuration.scan_on_push` attribute to `true`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-61",
        "path": [
          "resource",
          "aws_ecr_repository[denied_2]",
          "image_scanning_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_ecr_repository[denied].encryption_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "resource",
          "aws_ecr_repository[denied]",
          "encryption_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "resource.aws_ecr_repository[denied_2].image_tag_mutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "resource",
          "aws_ecr_repository[denied_2]",
          "image_tag_mutability"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\no_public_ip_address.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\no_public_ip_address.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[private].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[private]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_launch_configuration[private].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_launch_configuration[private]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[private].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[private]",
          "metadata_options"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[private].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[private]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_spot_fleet_request[private].launch_specification.root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 28,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_spot_fleet_request[private]",
          "launch_specification",
          "root_block_device",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\no_root_block_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\no_root_block_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_spot_instance_request[unencrypted].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_spot_instance_request[unencrypted]",
          "root_block_device",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\provider_env.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\provider_env.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\provider_hardcoded.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\provider_hardcoded.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set access credentials via environment variables, and remove `access_key` and `secret_key` attributes from the configuration",
        "id": "SNYK-CC-TF-74",
        "impact": "Use of provider attributes can lead to accidental disclosure of credentials in configuration files, variable definition files, event logs or console logs",
        "msg": "provider[aws]",
        "subType": "Provider",
        "issue": "Credentials are configured via provider attributes",
        "publicId": "SNYK-CC-TF-74",
        "title": "Credentials are configured via provider attributes",
        "references": [
          "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html",
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Credentials are configured via provider attributes",
          "impact": "Use of provider attributes can lead to accidental disclosure of credentials in configuration files, variable definition files, event logs or console logs",
          "resolve": "Set access credentials via environment variables, and remove `access_key` and `secret_key` attributes from the configuration"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-74",
        "path": [
          "provider[aws]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\public_access.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\public_access.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_db_instance[db].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_db_instance[db]",
          "publicly_accessible"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_neptune_cluster_instance[neptune].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 68,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_neptune_cluster_instance[neptune]",
          "publicly_accessible"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_docdb_cluster_instance[docdb].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 39,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_docdb_cluster_instance[docdb]",
          "publicly_accessible"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `storage_encrypted` attribute to true",
        "id": "SNYK-CC-TF-201",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_db_instance[db].storage_encrypted",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "subType": "RDS",
        "issue": "The DB instance storage is not encrypted by default",
        "publicId": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "path": [
          "resource",
          "aws_db_instance[db]",
          "storage_encrypted"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_rds_cluster_instance[rds].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 82,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_rds_cluster_instance[rds]",
          "publicly_accessible"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-136",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_redshift_cluster[redshift].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingProperties` attribute",
          "terraform": "Set `logging.enabled` attribute to `true`"
        },
        "subType": "Redshift",
        "issue": "Amazon Redshift cluster logging is not enabled",
        "publicId": "SNYK-CC-TF-136",
        "title": "Redshift cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Redshift cluster logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging.enabled` attribute to `true`"
        },
        "lineNumber": 85,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-136",
        "path": [
          "resource",
          "aws_redshift_cluster[redshift]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logs.general` attribute to `true`",
        "id": "SNYK-CC-TF-132",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_mq_broker[mq].logs",
        "remediation": {
          "cloudformation": "Set `Properties.Logs.General` attribute to `true`",
          "terraform": "Set `logs.general` attribute to `true`"
        },
        "subType": "MQ",
        "issue": "Amazon MQ Broker logging is disabled",
        "publicId": "SNYK-CC-TF-132",
        "title": "MQ broker general logs are disabled",
        "references": [
          "https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/security-logging-monitoring-cloudwatch.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MQ Broker logging is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logs.general` attribute to `true`"
        },
        "lineNumber": 45,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-132",
        "path": [
          "resource",
          "aws_mq_broker[mq]",
          "logs"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_mq_broker[mq].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 58,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_mq_broker[mq]",
          "publicly_accessible"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "id": "SNYK-CC-AWS-414",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "msg": "resource.aws_db_instance[db].iam_database_authentication_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "subType": "RDS",
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "publicId": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "path": [
          "resource",
          "aws_db_instance[db]",
          "iam_database_authentication_enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encrypted` attribute to `true`.",
        "id": "SNYK-CC-TF-108",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_redshift_cluster[redshift].encrypted",
        "remediation": {
          "cloudformation": "Set `Properties.Encrypted` attribute to `true`",
          "terraform": "Set `encrypted` attribute to `true`."
        },
        "subType": "Redshift",
        "issue": "Redshift DB is not encrypted",
        "publicId": "SNYK-CC-TF-108",
        "title": "Non-encrypted Redshift DB at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/security-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Redshift DB is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encrypted` attribute to `true`."
        },
        "lineNumber": 85,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-108",
        "path": [
          "resource",
          "aws_redshift_cluster[redshift]",
          "encrypted"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_dms_replication_instance[db].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_dms_replication_instance[db]",
          "publicly_accessible"
        ]
      },
      {
        "severity": "high",
        "description": "",
        "resolve": "Set `publicly_accessible` attribute to `false`",
        "id": "SNYK-CC-TF-50",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_redshift_cluster[redshift].publicly_accessible",
        "subType": "Public Access",
        "issue": "AWS resource is publicly accessible",
        "publicId": "SNYK-CC-TF-50",
        "title": "Resource is publicly accessible",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/managing-clusters-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource is publicly accessible",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `publicly_accessible` attribute to `false`"
        },
        "lineNumber": 92,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-50",
        "path": [
          "resource",
          "aws_redshift_cluster[redshift]",
          "publicly_accessible"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\public_access_disabled.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\public_access_disabled.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `iam_database_authentication_enabled` to `true`.",
        "id": "SNYK-CC-AWS-414",
        "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
        "msg": "resource.aws_db_instance[db].iam_database_authentication_enabled",
        "remediation": {
          "cloudformation": "Set `Properties.EnableIAMDatabaseAuthentication` to `true`.",
          "terraform": "Set `iam_database_authentication_enabled` to `true`."
        },
        "subType": "RDS",
        "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
        "publicId": "SNYK-CC-AWS-414",
        "title": "RDS IAM authentication is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "IAM database authentication is disabled, authentication tokens are not used to connect to DB instance",
          "impact": "Users will connect to DB instance with password, which are less secure than temporary tokens which expire",
          "resolve": "Set `iam_database_authentication_enabled` to `true`."
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-414",
        "path": [
          "resource",
          "aws_db_instance[db]",
          "iam_database_authentication_enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `encrypted` attribute to `true`.",
        "id": "SNYK-CC-TF-108",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_redshift_cluster[redshift].encrypted",
        "remediation": {
          "cloudformation": "Set `Properties.Encrypted` attribute to `true`",
          "terraform": "Set `encrypted` attribute to `true`."
        },
        "subType": "Redshift",
        "issue": "Redshift DB is not encrypted",
        "publicId": "SNYK-CC-TF-108",
        "title": "Non-encrypted Redshift DB at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/redshift_cluster#encrypted",
          "https://docs.aws.amazon.com/redshift/latest/mgmt/security-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Redshift DB is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encrypted` attribute to `true`."
        },
        "lineNumber": 80,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-108",
        "path": [
          "resource",
          "aws_redshift_cluster[redshift]",
          "encrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `storage_encrypted` attribute to true",
        "id": "SNYK-CC-TF-201",
        "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_db_instance[db].storage_encrypted",
        "remediation": {
          "cloudformation": "Set `Properties.StorageEncrypted` attribute to `true`",
          "terraform": "Set `storage_encrypted` attribute to true"
        },
        "subType": "RDS",
        "issue": "The DB instance storage is not encrypted by default",
        "publicId": "SNYK-CC-TF-201",
        "title": "Non-encrypted RDS instance at rest",
        "references": [
          "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#storage_encrypted"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The DB instance storage is not encrypted by default",
          "impact": "Should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `storage_encrypted` attribute to true"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-201",
        "path": [
          "resource",
          "aws_db_instance[db]",
          "storage_encrypted"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-136",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_redshift_cluster[redshift].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingProperties` attribute",
          "terraform": "Set `logging.enabled` attribute to `true`"
        },
        "subType": "Redshift",
        "issue": "Amazon Redshift cluster logging is not enabled",
        "publicId": "SNYK-CC-TF-136",
        "title": "Redshift cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Redshift cluster logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging.enabled` attribute to `true`"
        },
        "lineNumber": 80,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-136",
        "path": [
          "resource",
          "aws_redshift_cluster[redshift]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logs.general` attribute to `true`",
        "id": "SNYK-CC-TF-132",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_mq_broker[mq].logs",
        "remediation": {
          "cloudformation": "Set `Properties.Logs.General` attribute to `true`",
          "terraform": "Set `logs.general` attribute to `true`"
        },
        "subType": "MQ",
        "issue": "Amazon MQ Broker logging is disabled",
        "publicId": "SNYK-CC-TF-132",
        "title": "MQ broker general logs are disabled",
        "references": [
          "https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/security-logging-monitoring-cloudwatch.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MQ Broker logging is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logs.general` attribute to `true`"
        },
        "lineNumber": 43,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-132",
        "path": [
          "resource",
          "aws_mq_broker[mq]",
          "logs"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\public_ip_address.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\public_ip_address.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `associate_public_ip_address` attribute to `false`",
        "id": "SNYK-CC-TF-51",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_launch_configuration[public].associate_public_ip_address",
        "subType": "EC2",
        "issue": "AWS resource could be accessed externally via public IP",
        "publicId": "SNYK-CC-TF-51",
        "title": "Resource has public IP assigned",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
          "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource could be accessed externally via public IP",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `associate_public_ip_address` attribute to `false`"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-51",
        "path": [
          "resource",
          "aws_launch_configuration[public]",
          "associate_public_ip_address"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `associate_public_ip_address` attribute to `false`",
        "id": "SNYK-CC-TF-51",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_instance[public].associate_public_ip_address",
        "subType": "EC2",
        "issue": "AWS resource could be accessed externally via public IP",
        "publicId": "SNYK-CC-TF-51",
        "title": "Resource has public IP assigned",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
          "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource could be accessed externally via public IP",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `associate_public_ip_address` attribute to `false`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-51",
        "path": [
          "resource",
          "aws_instance[public]",
          "associate_public_ip_address"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `associate_public_ip_address` attribute to `false`",
        "id": "SNYK-CC-TF-51",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_spot_fleet_request[public].launch_specification.associate_public_ip_address",
        "subType": "EC2",
        "issue": "AWS resource could be accessed externally via public IP",
        "publicId": "SNYK-CC-TF-51",
        "title": "Resource has public IP assigned",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
          "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource could be accessed externally via public IP",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `associate_public_ip_address` attribute to `false`"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-51",
        "path": [
          "resource",
          "aws_spot_fleet_request[public]",
          "launch_specification",
          "associate_public_ip_address"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_launch_configuration[public].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_launch_configuration[public]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_instance[public].root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_instance[public]",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_spot_fleet_request[public].launch_specification.root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_spot_fleet_request[public]",
          "launch_specification",
          "root_block_device",
          "encrypted"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[public].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[public]",
          "metadata_options"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[public].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[public]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `associate_public_ip_address` attribute to `false`",
        "id": "SNYK-CC-TF-51",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_launch_template[public].network_interfaces.associate_public_ip_address",
        "subType": "EC2",
        "issue": "AWS resource could be accessed externally via public IP",
        "publicId": "SNYK-CC-TF-51",
        "title": "Resource has public IP assigned",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html",
          "https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "AWS resource could be accessed externally via public IP",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `associate_public_ip_address` attribute to `false`"
        },
        "lineNumber": 22,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-51",
        "path": [
          "resource",
          "aws_launch_template[public]",
          "network_interfaces",
          "associate_public_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\root_block_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\root_block_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`",
        "id": "SNYK-CC-TF-130",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "msg": "resource.aws_instance[encrypted].metadata_options",
        "subType": "EC2",
        "issue": "Instance Metadata Service v2 is not enforced",
        "publicId": "SNYK-CC-TF-130",
        "title": "EC2 instance accepts IMDSv1",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html",
          "https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Instance Metadata Service v2 is not enforced",
          "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
          "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-130",
        "path": [
          "resource",
          "aws_instance[encrypted]",
          "metadata_options"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[encrypted].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[encrypted]",
          "disable_api_termination"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sg\\description.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sg\\description.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sg\\no_description.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sg\\no_description.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `description` attribute to meaningful statement",
        "id": "SNYK-CC-TF-56",
        "impact": "Increases the security management overhead",
        "msg": "resource.aws_security_group[sg].description",
        "subType": "VPC",
        "issue": "The description field is missing in the security group",
        "publicId": "SNYK-CC-TF-56",
        "title": "Missing description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "path": [
          "resource",
          "aws_security_group[sg]",
          "description"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sg_rule_limited_egress.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sg_rule_limited_egress.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sg_rule_public_egress.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sg_rule_public_egress.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sns\\non_encrypted_sns.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sns\\non_encrypted_sns.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `kms_master_key_id` attribute to a customer managed key id",
        "id": "SNYK-CC-AWS-422",
        "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_sns_topic[sns].kms_master_key_id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to a customer managed key id ",
          "terraform": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "subType": "SNS",
        "issue": "SNS topic is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-422",
        "title": "SNS topic is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "SNS topic is not encrypted with customer managed key",
          "impact": "Scope of use of the encryption key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_master_key_id` attribute to a customer managed key id"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-422",
        "path": [
          "resource",
          "aws_sns_topic[sns]",
          "kms_master_key_id"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `kms_master_key_id` attribute to KMS key",
        "id": "SNYK-CC-TF-55",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_sns_topic[sns].kms_master_key_id",
        "remediation": {
          "cloudformation": "Set `KmsMasterKeyId` attribute to KMS key for example `alias/aws/sns`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "subType": "SNS",
        "issue": "The SNS topic is not encrypted at rest",
        "publicId": "SNYK-CC-TF-55",
        "title": "Non-Encrypted SNS Topic",
        "references": [
          "https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SNS topic is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `kms_master_key_id` attribute to KMS key"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-55",
        "path": [
          "resource",
          "aws_sns_topic[sns]",
          "kms_master_key_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sns\\sns.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sns\\sns.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\spot_fleet_root_block_no_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\spot_fleet_root_block_no_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-53",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_spot_fleet_request[unencrypted].launch_specification.root_block_device.encrypted",
        "remediation": {
          "cloudformation": "Set `BlockDeviceMappings.Encrypted` attribute of root device to `true`",
          "terraform": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "The root block device for ec2 instance is not encrypted",
        "publicId": "SNYK-CC-TF-53",
        "title": "Non-Encrypted root block device",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/RootDeviceStorage.html",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html",
          "https://aws.amazon.com/premiumsupport/knowledge-center/cloudformation-root-volume-property/",
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The root block device for ec2 instance is not encrypted",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `root_block_device.encrypted` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-53",
        "path": [
          "resource",
          "aws_spot_fleet_request[unencrypted]",
          "launch_specification",
          "root_block_device",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sqs\\non_encrypted_sqs.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sqs\\non_encrypted_sqs.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `kms_master_key_id` attribute to KMS key",
        "id": "SNYK-CC-TF-54",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.aws_sqs_queue[sqs].kms_master_key_id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsMasterKeyId` attribute to KMS key, for example `alias/aws/sqs`",
          "terraform": "Set `kms_master_key_id` attribute to KMS key"
        },
        "subType": "SQS",
        "issue": "The SQS queue is not encrypted at rest",
        "publicId": "SNYK-CC-TF-54",
        "title": "Non-Encrypted SQS Queue",
        "references": [
          "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SQS queue is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `kms_master_key_id` attribute to KMS key"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-54",
        "path": [
          "resource",
          "aws_sqs_queue[sqs]",
          "kms_master_key_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sqs\\sqs.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sqs\\sqs.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sqs_policy_document_whitelist.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sqs_policy_document_whitelist.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws\\sqs_policy_document_wildcard.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws\\sqs_policy_document_wildcard.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `Action` in policy heredoc to specific actions e.g. `sqs:SendMessage`",
        "id": "SNYK-CC-TF-70",
        "impact": "Granting permission to perform any action is against 'least privilege' principle",
        "msg": "resource.aws_sqs_queue_policy[denied].policy",
        "remediation": {
          "cloudformation": "Set `Action` in `Properties.PolicyDocument` attribute to specific actions for example `sqs:SendMessage`",
          "terraform": "Set `Action` in policy heredoc to specific actions e.g. `sqs:SendMessage`"
        },
        "subType": "SQS",
        "issue": "The SQS queue policy allows all actions on the resource",
        "publicId": "SNYK-CC-TF-70",
        "title": "Wildcard action in SQS Policy",
        "references": [
          "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-authentication-and-access-control.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The SQS queue policy allows all actions on the resource",
          "impact": "Granting permission to perform any action is against 'least privilege' principle",
          "resolve": "Set `Action` in policy heredoc to specific actions e.g. `sqs:SendMessage`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-70",
        "path": [
          "resource",
          "aws_sqs_queue_policy[denied]",
          "policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_api_gateway_stage_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_api_gateway_stage_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `access_log_settings` attribute",
        "id": "SNYK-CC-TF-138",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_api_gateway_stage[denied].access_log_settings",
        "remediation": {
          "cloudformation": "Set `Properties.AccessLogSetting.DestinationArn` attribute",
          "terraform": "Set `access_log_settings` attribute"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "Amazon Api Gateway access logging is not enabled",
        "publicId": "SNYK-CC-TF-138",
        "title": "API Gateway access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Api Gateway access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `access_log_settings` attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-138",
        "path": [
          "resource",
          "aws_api_gateway_stage[denied]",
          "access_log_settings"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `access_log_settings` attribute",
        "id": "SNYK-CC-TF-138",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_apigatewayv2_stage[denied].access_log_settings",
        "remediation": {
          "cloudformation": "Set `Properties.AccessLogSetting.DestinationArn` attribute",
          "terraform": "Set `access_log_settings` attribute"
        },
        "subType": "API Gateway (REST APIs)",
        "issue": "Amazon Api Gateway access logging is not enabled",
        "publicId": "SNYK-CC-TF-138",
        "title": "API Gateway access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Api Gateway access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `access_log_settings` attribute"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-138",
        "path": [
          "resource",
          "aws_apigatewayv2_stage[denied]",
          "access_log_settings"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_classic\\classic_resources.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_classic\\classic_resources.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_db_security_group[db]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_db_security_group[db]"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_redshift_security_group[redshift]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_redshift_security_group[redshift]"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_elasticache_security_group[elasticache]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_elasticache_security_group[elasticache]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_cloudfront_access_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_cloudfront_access_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging_config` attribute",
        "id": "SNYK-CC-TF-142",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_cloudfront_distribution[denied].logging_config",
        "remediation": {
          "cloudformation": "Set `Properties.DistributionConfig.Logging` attribute",
          "terraform": "Set `logging_config` attribute"
        },
        "subType": "CloudFront",
        "issue": "Amazon CloudFront distribution access logging is not enabled",
        "publicId": "SNYK-CC-TF-142",
        "title": "CloudFront access logging disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/logging_using_cloudtrail.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudFront distribution access logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging_config` attribute"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-142",
        "path": [
          "resource",
          "aws_cloudfront_distribution[denied]",
          "logging_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_cloudtrail_multiregion.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_cloudtrail_multiregion.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `is_multi_region_trail` attribute to `true`",
        "id": "SNYK-CC-TF-135",
        "impact": "Logs will not be collected in all the regions",
        "msg": "resource.aws_cloudtrail[denied].is_multi_region_trail",
        "remediation": {
          "cloudformation": "Set `Properties.IsMultiRegionTrail` attribute to `true`",
          "terraform": "Set `is_multi_region_trail` attribute to `true`"
        },
        "subType": "CloudTrail",
        "issue": "Amazon CloudTrail is not enabled for all regions",
        "publicId": "SNYK-CC-TF-135",
        "title": "CloudTrail does not include all regions",
        "references": [
          "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudTrail is not enabled for all regions",
          "impact": "Logs will not be collected in all the regions",
          "resolve": "Set `is_multi_region_trail` attribute to `true`"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-135",
        "path": [
          "resource",
          "aws_cloudtrail[denied]",
          "is_multi_region_trail"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `is_multi_region_trail` attribute to `true`",
        "id": "SNYK-CC-TF-135",
        "impact": "Logs will not be collected in all the regions",
        "msg": "resource.aws_cloudtrail[denied_2].is_multi_region_trail",
        "remediation": {
          "cloudformation": "Set `Properties.IsMultiRegionTrail` attribute to `true`",
          "terraform": "Set `is_multi_region_trail` attribute to `true`"
        },
        "subType": "CloudTrail",
        "issue": "Amazon CloudTrail is not enabled for all regions",
        "publicId": "SNYK-CC-TF-135",
        "title": "CloudTrail does not include all regions",
        "references": [
          "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudTrail is not enabled for all regions",
          "impact": "Logs will not be collected in all the regions",
          "resolve": "Set `is_multi_region_trail` attribute to `true`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-135",
        "path": [
          "resource",
          "aws_cloudtrail[denied_2]",
          "is_multi_region_trail"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_cloudtrail_to_cloudwatch.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_cloudtrail_to_cloudwatch.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `cloud_watch_logs_group_arn` attribute to cloudwatch log group ARN",
        "id": "SNYK-CC-TF-256",
        "impact": "Alarms cannot be configured to alert on CloudTrail events",
        "msg": "resource.aws_cloudtrail[denied].cloud_watch_logs_group_arn",
        "remediation": {
          "cloudformation": "Set `Properties.CloudWatchLogsLogGroupArn` attribute to cloudwatch log group ARN",
          "terraform": "Set `cloud_watch_logs_group_arn` attribute to cloudwatch log group ARN"
        },
        "subType": "CloudTrail",
        "issue": "CloudTrail does not deliver logs to CloudWatch",
        "publicId": "SNYK-CC-TF-256",
        "title": "CloudTrail not integrated with CloudWatch",
        "references": [
          "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CloudTrail does not deliver logs to CloudWatch",
          "impact": "Alarms cannot be configured to alert on CloudTrail events",
          "resolve": "Set `cloud_watch_logs_group_arn` attribute to cloudwatch log group ARN"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-256",
        "path": [
          "resource",
          "aws_cloudtrail[denied]",
          "cloud_watch_logs_group_arn"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_cloudwatch_log_group_retention.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_cloudwatch_log_group_retention.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute with customer managed key id",
        "id": "SNYK-CC-AWS-415",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_cloudwatch_log_group[denied].kms_key_id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "subType": "CloudWatch",
        "issue": "Log group is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute with customer managed key id"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "path": [
          "resource",
          "aws_cloudwatch_log_group[denied]",
          "kms_key_id"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_in_days` attribute to required value, e.g. set `365`",
        "id": "SNYK-CC-TF-134",
        "impact": "Logs will be kept indefinitely and incur AWS costs",
        "msg": "resource.aws_cloudwatch_log_group[denied].retention_in_days",
        "remediation": {
          "cloudformation": "Set `Properties.RetentionInDays` attribute to required value, e.g. set `365`",
          "terraform": "Set `retention_in_days` attribute to required value, e.g. set `365`"
        },
        "subType": "CloudWatch",
        "issue": "Amazon CloudWatch log group does not specify retention period",
        "publicId": "SNYK-CC-TF-134",
        "title": "CloudWatch Log group retention period not set",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/WhatIsCloudWatchLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudWatch log group does not specify retention period",
          "impact": "Logs will be kept indefinitely and incur AWS costs",
          "resolve": "Set `retention_in_days` attribute to required value, e.g. set `365`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-134",
        "path": [
          "resource",
          "aws_cloudwatch_log_group[denied]",
          "retention_in_days"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute with customer managed key id",
        "id": "SNYK-CC-AWS-415",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_cloudwatch_log_group[allowed].kms_key_id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "subType": "CloudWatch",
        "issue": "Log group is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute with customer managed key id"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "path": [
          "resource",
          "aws_cloudwatch_log_group[allowed]",
          "kms_key_id"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute with customer managed key id",
        "id": "SNYK-CC-AWS-415",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_cloudwatch_log_group[allowed_2].kms_key_id",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute with customer managed key id",
          "terraform": "Set `kms_key_id` attribute with customer managed key id"
        },
        "subType": "CloudWatch",
        "issue": "Log group is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-415",
        "title": "CloudWatch log group not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Log group is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute with customer managed key id"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-415",
        "path": [
          "resource",
          "aws_cloudwatch_log_group[allowed_2]",
          "kms_key_id"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_docdb_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_docdb_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`",
        "id": "SNYK-CC-TF-141",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_docdb_cluster[denied].enabled_cloudwatch_logs_exports",
        "remediation": {
          "cloudformation": "Set `Properties.EnableCloudwatchLogsExports` attribute to `['profiler', 'audit']`",
          "terraform": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "subType": "DocumentDB",
        "issue": "Amazon DocDB logging is not enabled",
        "publicId": "SNYK-CC-TF-141",
        "title": "DocDB logging disabled",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/logging-and-monitoring.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon DocDB logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-141",
        "path": [
          "resource",
          "aws_docdb_cluster[denied]",
          "enabled_cloudwatch_logs_exports"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute to customer managed key id",
        "id": "SNYK-CC-AWS-416",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_docdb_cluster[denied_4]",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute to customer managed key id",
          "terraform": "Set `kms_key_id` attribute to customer managed key id"
        },
        "subType": "DocumentDB",
        "issue": "Docdb cluster is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-416",
        "title": "Docdb cluster not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docdb cluster is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute to customer managed key id"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-416",
        "path": [
          "resource",
          "aws_docdb_cluster[denied_4]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute to customer managed key id",
        "id": "SNYK-CC-AWS-416",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_docdb_cluster[denied_3]",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute to customer managed key id",
          "terraform": "Set `kms_key_id` attribute to customer managed key id"
        },
        "subType": "DocumentDB",
        "issue": "Docdb cluster is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-416",
        "title": "Docdb cluster not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docdb cluster is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute to customer managed key id"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-416",
        "path": [
          "resource",
          "aws_docdb_cluster[denied_3]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute to customer managed key id",
        "id": "SNYK-CC-AWS-416",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_docdb_cluster[allowed]",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute to customer managed key id",
          "terraform": "Set `kms_key_id` attribute to customer managed key id"
        },
        "subType": "DocumentDB",
        "issue": "Docdb cluster is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-416",
        "title": "Docdb cluster not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docdb cluster is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute to customer managed key id"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-416",
        "path": [
          "resource",
          "aws_docdb_cluster[allowed]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`",
        "id": "SNYK-CC-TF-141",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_docdb_cluster[denied_2].enabled_cloudwatch_logs_exports",
        "remediation": {
          "cloudformation": "Set `Properties.EnableCloudwatchLogsExports` attribute to `['profiler', 'audit']`",
          "terraform": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "subType": "DocumentDB",
        "issue": "Amazon DocDB logging is not enabled",
        "publicId": "SNYK-CC-TF-141",
        "title": "DocDB logging disabled",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/logging-and-monitoring.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon DocDB logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-141",
        "path": [
          "resource",
          "aws_docdb_cluster[denied_2]",
          "enabled_cloudwatch_logs_exports"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute to customer managed key id",
        "id": "SNYK-CC-AWS-416",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_docdb_cluster[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute to customer managed key id",
          "terraform": "Set `kms_key_id` attribute to customer managed key id"
        },
        "subType": "DocumentDB",
        "issue": "Docdb cluster is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-416",
        "title": "Docdb cluster not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docdb cluster is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute to customer managed key id"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-416",
        "path": [
          "resource",
          "aws_docdb_cluster[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`",
        "id": "SNYK-CC-TF-141",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_docdb_cluster[denied_3].enabled_cloudwatch_logs_exports",
        "remediation": {
          "cloudformation": "Set `Properties.EnableCloudwatchLogsExports` attribute to `['profiler', 'audit']`",
          "terraform": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "subType": "DocumentDB",
        "issue": "Amazon DocDB logging is not enabled",
        "publicId": "SNYK-CC-TF-141",
        "title": "DocDB logging disabled",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/logging-and-monitoring.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon DocDB logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-141",
        "path": [
          "resource",
          "aws_docdb_cluster[denied_3]",
          "enabled_cloudwatch_logs_exports"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute to customer managed key id",
        "id": "SNYK-CC-AWS-416",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_docdb_cluster[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.KmsKeyId` attribute to customer managed key id",
          "terraform": "Set `kms_key_id` attribute to customer managed key id"
        },
        "subType": "DocumentDB",
        "issue": "Docdb cluster is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-416",
        "title": "Docdb cluster not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Docdb cluster is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `kms_key_id` attribute to customer managed key id"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-416",
        "path": [
          "resource",
          "aws_docdb_cluster[denied_2]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`",
        "id": "SNYK-CC-TF-141",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_docdb_cluster[denied_4].enabled_cloudwatch_logs_exports",
        "remediation": {
          "cloudformation": "Set `Properties.EnableCloudwatchLogsExports` attribute to `['profiler', 'audit']`",
          "terraform": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "subType": "DocumentDB",
        "issue": "Amazon DocDB logging is not enabled",
        "publicId": "SNYK-CC-TF-141",
        "title": "DocDB logging disabled",
        "references": [
          "https://docs.aws.amazon.com/documentdb/latest/developerguide/logging-and-monitoring.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon DocDB logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cloudwatch_logs_exports` attribute to `['profiler', 'audit']`"
        },
        "lineNumber": 22,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-141",
        "path": [
          "resource",
          "aws_docdb_cluster[denied_4]",
          "enabled_cloudwatch_logs_exports"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_ec2_metadata_secrets.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_ec2_metadata_secrets.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[denied].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[denied]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `user_data` attribute",
        "id": "SNYK-CC-TF-123",
        "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
        "msg": "resource.aws_instance[denied_2].user_data_base64[aws_access_key_id]",
        "remediation": {
          "cloudformation": "Remove secret value from `Properties.UserData` attribute",
          "terraform": "Remove secret value from `user_data` attribute"
        },
        "subType": "EC2",
        "issue": "Secret keys have been hardcoded in user_data script",
        "publicId": "SNYK-CC-TF-123",
        "title": "Hard coded secrets in EC2 metadata",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret keys have been hardcoded in user_data script",
          "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
          "resolve": "Remove secret value from `user_data` attribute"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-123",
        "path": [
          "resource",
          "aws_instance[denied_2]",
          "user_data_base64[aws_access_key_id]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[denied_3].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[denied_3]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `user_data` attribute",
        "id": "SNYK-CC-TF-123",
        "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
        "msg": "resource.aws_instance[denied_3].user_data[aws_secret_access_key]",
        "remediation": {
          "cloudformation": "Remove secret value from `Properties.UserData` attribute",
          "terraform": "Remove secret value from `user_data` attribute"
        },
        "subType": "EC2",
        "issue": "Secret keys have been hardcoded in user_data script",
        "publicId": "SNYK-CC-TF-123",
        "title": "Hard coded secrets in EC2 metadata",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret keys have been hardcoded in user_data script",
          "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
          "resolve": "Remove secret value from `user_data` attribute"
        },
        "lineNumber": 25,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-123",
        "path": [
          "resource",
          "aws_instance[denied_3]",
          "user_data[aws_secret_access_key]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[allowed_3].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 61,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[allowed_3]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `user_data` attribute",
        "id": "SNYK-CC-TF-123",
        "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
        "msg": "resource.aws_instance[denied].user_data[aws_access_key_id]",
        "remediation": {
          "cloudformation": "Remove secret value from `Properties.UserData` attribute",
          "terraform": "Remove secret value from `user_data` attribute"
        },
        "subType": "EC2",
        "issue": "Secret keys have been hardcoded in user_data script",
        "publicId": "SNYK-CC-TF-123",
        "title": "Hard coded secrets in EC2 metadata",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret keys have been hardcoded in user_data script",
          "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
          "resolve": "Remove secret value from `user_data` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-123",
        "path": [
          "resource",
          "aws_instance[denied]",
          "user_data[aws_access_key_id]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from `user_data` attribute",
        "id": "SNYK-CC-TF-123",
        "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
        "msg": "resource.aws_instance[denied_2].user_data_base64[aws_secret_access_key]",
        "remediation": {
          "cloudformation": "Remove secret value from `Properties.UserData` attribute",
          "terraform": "Remove secret value from `user_data` attribute"
        },
        "subType": "EC2",
        "issue": "Secret keys have been hardcoded in user_data script",
        "publicId": "SNYK-CC-TF-123",
        "title": "Hard coded secrets in EC2 metadata",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret keys have been hardcoded in user_data script",
          "impact": "Anyone with access to VCS will be able to obtain the secret keys, and access the unauthorized resources",
          "resolve": "Remove secret value from `user_data` attribute"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-123",
        "path": [
          "resource",
          "aws_instance[denied_2]",
          "user_data_base64[aws_secret_access_key]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[allowed].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 37,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[allowed]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[denied_2].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[denied_2]",
          "disable_api_termination"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `disable_api_termination` attribute  with value `true`",
        "id": "SNYK-CC-AWS-426",
        "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
        "msg": "resource.aws_instance[allowed_2].disable_api_termination",
        "remediation": {
          "cloudformation": "Set `DisableApiTermination` attribute with value `true`",
          "terraform": "Set `disable_api_termination` attribute  with value `true`"
        },
        "subType": "EC2",
        "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
        "publicId": "SNYK-CC-AWS-426",
        "title": "EC2 API termination protection is not enabled",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "To prevent instance from being accidentally terminated using Amazon EC2, you can enable termination protection for the instance",
          "impact": "Without this setting enabled the instances can be terminated by accident. This setting should only be used for instances with high availability requirements. Enabling this may prevent IaC workflows from updating the instance, for example terraform will not be able to terminate the instance to update instance type",
          "resolve": "Set `disable_api_termination` attribute  with value `true`"
        },
        "lineNumber": 49,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-426",
        "path": [
          "resource",
          "aws_instance[allowed_2]",
          "disable_api_termination"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_ecr_mutability_tags.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_ecr_mutability_tags.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_ecr_repository[allowed].encryption_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "resource",
          "aws_ecr_repository[allowed]",
          "encryption_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_ecr_repository[denied_2].encryption_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "resource",
          "aws_ecr_repository[denied_2]",
          "encryption_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key",
        "id": "SNYK-CC-AWS-418",
        "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
        "msg": "resource.aws_ecr_repository[denied].encryption_configuration",
        "remediation": {
          "cloudformation": "Set `Properties.EncryptionConfiguration.KmsKey` attribute to customer managed KMS key",
          "terraform": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "subType": "ECR",
        "issue": "ECR repository is not encrypted with customer managed key",
        "publicId": "SNYK-CC-AWS-418",
        "title": "ECR repository is not encrypted with customer managed key",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/encryption-at-rest.html",
          "https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "ECR repository is not encrypted with customer managed key",
          "impact": "Scope of use of the key cannot be controlled via KMS/IAM policies",
          "resolve": "Set `encryption_configuration.kms_key` attribute to customer managed KMS key"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-418",
        "path": [
          "resource",
          "aws_ecr_repository[denied]",
          "encryption_configuration"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "resource.aws_ecr_repository[denied_2].image_tag_mutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "resource",
          "aws_ecr_repository[denied_2]",
          "image_tag_mutability"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`",
        "id": "SNYK-CC-TF-126",
        "impact": "Image tags can be modified post deployment",
        "msg": "resource.aws_ecr_repository[denied].image_tag_mutability",
        "remediation": {
          "cloudformation": "Set `Properties.ImageTagMutability` attribute to `IMMUTABLE`",
          "terraform": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "subType": "ECR",
        "issue": "The AWS ECR registry does not enforce immutable tags",
        "publicId": "SNYK-CC-TF-126",
        "title": "ECR Registry allows mutable tags",
        "references": [
          "https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The AWS ECR registry does not enforce immutable tags",
          "impact": "Image tags can be modified post deployment",
          "resolve": "Set `image_tag_mutability` attribute to `IMMUTABLE`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-126",
        "path": [
          "resource",
          "aws_ecr_repository[denied]",
          "image_tag_mutability"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_eks_control_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_eks_control_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied_3].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied_3]",
          "enabled_cluster_log_types"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`",
        "id": "SNYK-CC-TF-131",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_eks_cluster[denied_2].enabled_cluster_log_types",
        "subType": "EKS",
        "issue": "Amazon EKS control plane logging is not enabled for all log types",
        "publicId": "SNYK-CC-TF-131",
        "title": "EKS control plane logging insufficient",
        "references": [
          "https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon EKS control plane logging is not enabled for all log types",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `enabled_cluster_log_types` attribute to `['api;, 'audit', 'authenticator', 'controllerManager', 'scheduler' ]`"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-131",
        "path": [
          "resource",
          "aws_eks_cluster[denied_2]",
          "enabled_cluster_log_types"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_elasticsearch_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_elasticsearch_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 86,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `log_publishing_options` attribute",
        "id": "SNYK-CC-TF-140",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_elasticsearch_domain[denied_2]",
        "remediation": {
          "cloudformation": "Set `Properties.LogPublishingOptions.AUDIT_LOGS.Enabled` attribute to `true`",
          "terraform": "Set `log_publishing_options` attribute"
        },
        "subType": "ElasticSearch",
        "issue": "Amazon Elasticsearch domain logging is not enabled",
        "publicId": "SNYK-CC-TF-140",
        "title": "Elasticsearch domain logging disabled",
        "references": [
          "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createdomain-configure-slow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Elasticsearch domain logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `log_publishing_options` attribute"
        },
        "lineNumber": 105,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-140",
        "path": [
          "resource",
          "aws_elasticsearch_domain[denied_2]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_global_accelerator_logs.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_global_accelerator_logs.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `attributes.flow_logs_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-137",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_globalaccelerator_accelerator[denied_2].attributes.flow_logs_enabled",
        "subType": "Global Accelerator",
        "issue": "Amazon Global Accelerator flow logs are disabled",
        "publicId": "SNYK-CC-TF-137",
        "title": "Global Accelerator flow logs disabled",
        "references": [
          "https://docs.aws.amazon.com/global-accelerator/latest/dg/monitoring-global-accelerator.flow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Global Accelerator flow logs are disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `attributes.flow_logs_enabled` attribute to `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-137",
        "path": [
          "resource",
          "aws_globalaccelerator_accelerator[denied_2]",
          "attributes",
          "flow_logs_enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `attributes.flow_logs_enabled` attribute to `true`",
        "id": "SNYK-CC-TF-137",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_globalaccelerator_accelerator[denied].attributes.flow_logs_enabled",
        "subType": "Global Accelerator",
        "issue": "Amazon Global Accelerator flow logs are disabled",
        "publicId": "SNYK-CC-TF-137",
        "title": "Global Accelerator flow logs disabled",
        "references": [
          "https://docs.aws.amazon.com/global-accelerator/latest/dg/monitoring-global-accelerator.flow-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Global Accelerator flow logs are disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `attributes.flow_logs_enabled` attribute to `true`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-137",
        "path": [
          "resource",
          "aws_globalaccelerator_accelerator[denied]",
          "attributes",
          "flow_logs_enabled"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_iam_account_public_role.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_iam_account_public_role.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "resource.aws_iam_role[denied_4].assume_role_policy['Statement'][1]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 112,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "resource",
          "aws_iam_role[denied_4]",
          "assume_role_policy['Statement'][1]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
        "id": "SNYK-CC-TF-117",
        "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
        "msg": "data.aws_iam_policy_document[allowed].statement[0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
          "terraform": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any service or principal",
        "publicId": "SNYK-CC-TF-117",
        "title": "IAM Role can be assumed by anyone",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any service or principal",
          "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
          "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "lineNumber": 141,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-117",
        "path": [
          "data",
          "aws_iam_policy_document[allowed]",
          "statement[0]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "data.aws_iam_policy_document[denied_4].statement[1]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 214,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "data",
          "aws_iam_policy_document[denied_4]",
          "statement[1]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "resource.aws_iam_role[denied_3].assume_role_policy['Statement'][0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 69,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "resource",
          "aws_iam_role[denied_3]",
          "assume_role_policy['Statement'][0]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
        "id": "SNYK-CC-TF-117",
        "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
        "msg": "data.aws_iam_policy_document[allowed_2].statement[1]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
          "terraform": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any service or principal",
        "publicId": "SNYK-CC-TF-117",
        "title": "IAM Role can be assumed by anyone",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any service or principal",
          "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
          "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "lineNumber": 153,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-117",
        "path": [
          "data",
          "aws_iam_policy_document[allowed_2]",
          "statement[1]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
        "id": "SNYK-CC-TF-117",
        "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
        "msg": "resource.aws_iam_role[allowed_2].assume_role_policy['Statement'][1]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
          "terraform": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any service or principal",
        "publicId": "SNYK-CC-TF-117",
        "title": "IAM Role can be assumed by anyone",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any service or principal",
          "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
          "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "lineNumber": 22,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-117",
        "path": [
          "resource",
          "aws_iam_role[allowed_2]",
          "assume_role_policy['Statement'][1]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "data.aws_iam_policy_document[denied_2].statement[0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 194,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "data",
          "aws_iam_policy_document[denied_2]",
          "statement[0]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "resource.aws_iam_role[denied_2].assume_role_policy['Statement'][0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 92,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "resource",
          "aws_iam_role[denied_2]",
          "assume_role_policy['Statement'][0]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
        "id": "SNYK-CC-TF-117",
        "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
        "msg": "data.aws_iam_policy_document[allowed_3].statement[0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
          "terraform": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any service or principal",
        "publicId": "SNYK-CC-TF-117",
        "title": "IAM Role can be assumed by anyone",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any service or principal",
          "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
          "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "lineNumber": 173,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-117",
        "path": [
          "data",
          "aws_iam_policy_document[allowed_3]",
          "statement[0]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
        "id": "SNYK-CC-TF-117",
        "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
        "msg": "resource.aws_iam_role[allowed].assume_role_policy['Statement'][0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`",
          "terraform": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any service or principal",
        "publicId": "SNYK-CC-TF-117",
        "title": "IAM Role can be assumed by anyone",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any service or principal",
          "impact": "Anyone will be allowed to assume the role, and perform actions granted in attached policies",
          "resolve": "Set `Principal` attribute to specific service or account, e.g. `Service: ec2.amazonaws.com`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-117",
        "path": [
          "resource",
          "aws_iam_role[allowed]",
          "assume_role_policy['Statement'][0]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "resource.aws_iam_role[denied].assume_role_policy['Statement'][0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 49,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "resource",
          "aws_iam_role[denied]",
          "assume_role_policy['Statement'][0]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "data.aws_iam_policy_document[denied_3].statement[0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 204,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "data",
          "aws_iam_policy_document[denied_3]",
          "statement[0]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
        "id": "SNYK-CC-TF-118",
        "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
        "msg": "data.aws_iam_policy_document[denied].statement[0]",
        "remediation": {
          "cloudformation": "Set `Principal` in `Properties.AssumeRolePolicyDocument` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`",
          "terraform": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "subType": "IAM",
        "issue": "The IAM role can be assumed by any principal in the account",
        "publicId": "SNYK-CC-TF-118",
        "title": "IAM Role can be assumed by anyone in the account",
        "references": [
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html",
          "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_compare-resource-policies.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM role can be assumed by any principal in the account",
          "impact": "Any principal in the account will be able to use the permissions granted by the attached policies",
          "resolve": "Set `Principal` attribute to specific principal, e.g. `arn:aws:iam::1234:role/role-name`"
        },
        "lineNumber": 184,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-118",
        "path": [
          "data",
          "aws_iam_policy_document[denied]",
          "statement[0]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lambda_xray_tracing.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lambda_xray_tracing.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`",
        "id": "SNYK-CC-TF-133",
        "impact": "Trace logs will not be available during investigation",
        "msg": "resource.aws_lambda_function[denied].tracing_config",
        "remediation": {
          "cloudformation": "Set `Properties.TracingConfig.Mode` attribute to `Active` or `PassThrough`",
          "terraform": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "subType": "Lambda",
        "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
        "publicId": "SNYK-CC-TF-133",
        "title": "X-ray tracing is disabled for Lambda function",
        "references": [
          "https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon X-Ray tracing is not enabled for Lambda function",
          "impact": "Trace logs will not be available during investigation",
          "resolve": "Set `tracing_config.mode` attribute to `Active` or `PassThrough`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-133",
        "path": [
          "resource",
          "aws_lambda_function[denied]",
          "tracing_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lb\\https_listener.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lb\\https_listener.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lb\\http_listener.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lb\\http_listener.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "id": "SNYK-CC-TF-47",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_alb_listener[http].protocol",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "publicId": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "path": [
          "resource",
          "aws_alb_listener[http]",
          "protocol"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`",
        "id": "SNYK-CC-TF-47",
        "impact": "The content could be intercepted and manipulated in transit",
        "msg": "resource.aws_lb_listener[http].protocol",
        "remediation": {
          "cloudformation": "Set the `Properties.Protocol` attribute to `HTTPS` or `TLS`",
          "terraform": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "Load balancer endpoint does not enforce HTTPS",
        "publicId": "SNYK-CC-TF-47",
        "title": "Load balancer endpoint does not enforce HTTPS",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer endpoint does not enforce HTTPS",
          "impact": "The content could be intercepted and manipulated in transit",
          "resolve": "Set the `protocol` attribute to `HTTPS` or `TLS`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-47",
        "path": [
          "resource",
          "aws_lb_listener[http]",
          "protocol"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lb\\insecure_ssl_policy.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lb\\insecure_ssl_policy.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `ssl_policy` attribute to latest AWS predefined security policy",
        "id": "SNYK-CC-TF-49",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_lb_listener[insecure].ssl_policy",
        "remediation": {
          "cloudformation": "Set `Properties.SslPolicy` attribute to latest AWS predefined security policy",
          "terraform": "Set `ssl_policy` attribute to latest AWS predefined security policy"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The load balancer will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-49",
        "title": "ELB does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The load balancer will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `ssl_policy` attribute to latest AWS predefined security policy"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-49",
        "path": [
          "resource",
          "aws_lb_listener[insecure]",
          "ssl_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ssl_policy` attribute to latest AWS predefined security policy",
        "id": "SNYK-CC-TF-49",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.aws_alb_listener[insecure].ssl_policy",
        "remediation": {
          "cloudformation": "Set `Properties.SslPolicy` attribute to latest AWS predefined security policy",
          "terraform": "Set `ssl_policy` attribute to latest AWS predefined security policy"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The load balancer will accept older TLS/SSL cipher suits",
        "publicId": "SNYK-CC-TF-49",
        "title": "ELB does not enforce latest TLS/SSL policy",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The load balancer will accept older TLS/SSL cipher suits",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `ssl_policy` attribute to latest AWS predefined security policy"
        },
        "lineNumber": 18,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-49",
        "path": [
          "resource",
          "aws_alb_listener[insecure]",
          "ssl_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lb\\internet_facing.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lb\\internet_facing.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `internal` attribute to `true`",
        "id": "SNYK-CC-TF-48",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_elb[internet].internal",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "subType": "Elastic Load Balancing (ELB Classic)",
        "issue": "Load balancer is internet facing",
        "publicId": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "lineNumber": 44,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "path": [
          "resource",
          "aws_elb[internet]",
          "internal"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "id": "SNYK-CC-AWS-405",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "msg": "resource.aws_alb[internet]",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The application load balancer is not set to drop invalid headers.",
        "publicId": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "path": [
          "resource",
          "aws_alb[internet]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `internal` attribute to `true`",
        "id": "SNYK-CC-TF-48",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_alb[internet].internal",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "subType": "Elastic Load Balancing (ELB Classic)",
        "issue": "Load balancer is internet facing",
        "publicId": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "path": [
          "resource",
          "aws_alb[internet]",
          "internal"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "id": "SNYK-CC-AWS-405",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "msg": "resource.aws_lb[internet]",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The application load balancer is not set to drop invalid headers.",
        "publicId": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "path": [
          "resource",
          "aws_lb[internet]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `internal` attribute to `true`",
        "id": "SNYK-CC-TF-48",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_lb[internet].internal",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "subType": "Elastic Load Balancing (ELB Classic)",
        "issue": "Load balancer is internet facing",
        "publicId": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "path": [
          "resource",
          "aws_lb[internet]",
          "internal"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lb\\private_facing.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lb\\private_facing.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "id": "SNYK-CC-AWS-405",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "msg": "resource.aws_alb[internet]",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The application load balancer is not set to drop invalid headers.",
        "publicId": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "path": [
          "resource",
          "aws_alb[internet]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `internal` attribute to `true`",
        "id": "SNYK-CC-TF-48",
        "impact": "Increases attack vector reachability",
        "msg": "resource.aws_alb[internet].internal",
        "remediation": {
          "cloudformation": "Set `Properties.Scheme` attribute to `internal`",
          "terraform": "Set `internal` attribute to `true`"
        },
        "subType": "Elastic Load Balancing (ELB Classic)",
        "issue": "Load balancer is internet facing",
        "publicId": "SNYK-CC-TF-48",
        "title": "Load balancer is internet facing",
        "references": [
          "https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-internet-facing-load-balancers.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Load balancer is internet facing",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `internal` attribute to `true`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-48",
        "path": [
          "resource",
          "aws_alb[internet]",
          "internal"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `drop_invalid_header_fields` to `true`",
        "id": "SNYK-CC-AWS-405",
        "impact": "Maliciously crafted headers may be accepted by the load balancer",
        "msg": "resource.aws_lb[internet]",
        "remediation": {
          "cloudformation": "Set `Properties.LoadBalancerAttributes.Key` to `routing.http.drop_invalid_header_fields.enabled` and `Properties.LoadBalancerAttributes.Value` to `true`",
          "terraform": "Set `drop_invalid_header_fields` to `true`"
        },
        "subType": "Elastic Load Balancing v2 (ALB/NLB)",
        "issue": "The application load balancer is not set to drop invalid headers.",
        "publicId": "SNYK-CC-AWS-405",
        "title": "ALB does not drop invalid headers",
        "references": [
          "https://docs.aws.amazon.com/config/latest/developerguide/alb-http-drop-invalid-header-enabled.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The application load balancer is not set to drop invalid headers.",
          "impact": "Maliciously crafted headers may be accepted by the load balancer",
          "resolve": "Set `drop_invalid_header_fields` to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-AWS-405",
        "path": [
          "resource",
          "aws_lb[internet]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_lb\\secure_ssl_policy.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_lb\\secure_ssl_policy.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_mq_broker_general_logs.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_mq_broker_general_logs.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logs.general` attribute to `true`",
        "id": "SNYK-CC-TF-132",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_mq_broker[denied_3].logs",
        "remediation": {
          "cloudformation": "Set `Properties.Logs.General` attribute to `true`",
          "terraform": "Set `logs.general` attribute to `true`"
        },
        "subType": "MQ",
        "issue": "Amazon MQ Broker logging is disabled",
        "publicId": "SNYK-CC-TF-132",
        "title": "MQ broker general logs are disabled",
        "references": [
          "https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/security-logging-monitoring-cloudwatch.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MQ Broker logging is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logs.general` attribute to `true`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-132",
        "path": [
          "resource",
          "aws_mq_broker[denied_3]",
          "logs"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logs.general` attribute to `true`",
        "id": "SNYK-CC-TF-132",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_mq_broker[denied].logs",
        "remediation": {
          "cloudformation": "Set `Properties.Logs.General` attribute to `true`",
          "terraform": "Set `logs.general` attribute to `true`"
        },
        "subType": "MQ",
        "issue": "Amazon MQ Broker logging is disabled",
        "publicId": "SNYK-CC-TF-132",
        "title": "MQ broker general logs are disabled",
        "references": [
          "https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/security-logging-monitoring-cloudwatch.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MQ Broker logging is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logs.general` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-132",
        "path": [
          "resource",
          "aws_mq_broker[denied]",
          "logs"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logs.general` attribute to `true`",
        "id": "SNYK-CC-TF-132",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_mq_broker[denied_2].logs",
        "remediation": {
          "cloudformation": "Set `Properties.Logs.General` attribute to `true`",
          "terraform": "Set `logs.general` attribute to `true`"
        },
        "subType": "MQ",
        "issue": "Amazon MQ Broker logging is disabled",
        "publicId": "SNYK-CC-TF-132",
        "title": "MQ broker general logs are disabled",
        "references": [
          "https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/security-logging-monitoring-cloudwatch.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MQ Broker logging is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logs.general` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-132",
        "path": [
          "resource",
          "aws_mq_broker[denied_2]",
          "logs"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_msk_cluster_logs.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_msk_cluster_logs.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[denied_2].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 49,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[denied_2]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[denied].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 44,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[denied]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[denied_5].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 79,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[denied_5]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[denied_4].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 69,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[denied_4]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[denied_6].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 88,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[denied_6]",
          "logging_info"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`",
        "id": "SNYK-CC-TF-139",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_msk_cluster[denied_3].logging_info",
        "remediation": {
          "cloudformation": "Set at least one of available `Properties.LoggingInfo.BrokerLogs` attributes to `enabled`",
          "terraform": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "subType": "Managed Streaming for Kafka (MSK)",
        "issue": "Amazon MSK Cluster logs are not enabled",
        "publicId": "SNYK-CC-TF-139",
        "title": "MSK Cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/msk/latest/developerguide/msk-logging.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon MSK Cluster logs are not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set at least one of available `logging_info.broker_logs` attributes to `enabled`"
        },
        "lineNumber": 59,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-139",
        "path": [
          "resource",
          "aws_msk_cluster[denied_3]",
          "logging_info"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\aws_redshift_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\aws_redshift_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-136",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_redshift_cluster[allowed].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingProperties` attribute",
          "terraform": "Set `logging.enabled` attribute to `true`"
        },
        "subType": "Redshift",
        "issue": "Amazon Redshift cluster logging is not enabled",
        "publicId": "SNYK-CC-TF-136",
        "title": "Redshift cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Redshift cluster logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-136",
        "path": [
          "resource",
          "aws_redshift_cluster[allowed]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-136",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_redshift_cluster[denied_2].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingProperties` attribute",
          "terraform": "Set `logging.enabled` attribute to `true`"
        },
        "subType": "Redshift",
        "issue": "Amazon Redshift cluster logging is not enabled",
        "publicId": "SNYK-CC-TF-136",
        "title": "Redshift cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Redshift cluster logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging.enabled` attribute to `true`"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-136",
        "path": [
          "resource",
          "aws_redshift_cluster[denied_2]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-136",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.aws_redshift_cluster[denied].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingProperties` attribute",
          "terraform": "Set `logging.enabled` attribute to `true`"
        },
        "subType": "Redshift",
        "issue": "Amazon Redshift cluster logging is not enabled",
        "publicId": "SNYK-CC-TF-136",
        "title": "Redshift cluster logging disabled",
        "references": [
          "https://docs.aws.amazon.com/redshift/latest/mgmt/db-auditing.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon Redshift cluster logging is not enabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `logging.enabled` attribute to `true`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-136",
        "path": [
          "resource",
          "aws_redshift_cluster[denied]",
          "logging"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_data_lake_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_data_lake_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_data_lake_not_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_data_lake_not_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `encryption_state` attribute to `Enabled` or delete the attribute",
        "id": "SNYK-CC-TF-78",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.azurerm_data_lake_store[denied].encryption_state",
        "subType": "Data Lake",
        "issue": "The data lake store is not encrypted at rest",
        "publicId": "SNYK-CC-TF-78",
        "title": "Non-Encrypted Data Lake Store",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/blobs/security-recommendations"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The data lake store is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encryption_state` attribute to `Enabled` or delete the attribute"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-78",
        "path": [
          "resource",
          "azurerm_data_lake_store[denied]",
          "encryption_state"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_k8s_api_accessible.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_k8s_api_accessible.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[denied].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "network_profile",
          "network_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[denied].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[denied_2].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied_2]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[denied_2].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied_2]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[denied].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[denied_2].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied_2]",
          "network_profile",
          "network_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_k8s_api_restricted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_k8s_api_restricted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "network_profile",
          "network_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "addon_profile",
          "oms_agent"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_k8s_azure_monitor.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_k8s_azure_monitor.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "network_profile",
          "network_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_k8s_no_azure_monitor.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_k8s_no_azure_monitor.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[denied].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "network_profile",
          "network_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[denied].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[denied_2].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied_2]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[denied_2].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied_2]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[denied].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[denied_2].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied_2]",
          "network_profile",
          "network_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_k8s_no_rbac.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_k8s_no_rbac.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[denied].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "network_profile",
          "network_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[denied].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[denied].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `role_based_access_control.enabled` attribute to `true` or remove the attribute",
        "id": "SNYK-CC-TF-80",
        "impact": "Administrators won't be able to configure role based access controls to resources",
        "msg": "resource.azurerm_kubernetes_cluster[denied].role_based_access_control",
        "subType": "Container",
        "issue": "The Kubernetes RBAC is disabled",
        "publicId": "SNYK-CC-TF-80",
        "title": "RBAC is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/concepts-identity"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes RBAC is disabled",
          "impact": "Administrators won't be able to configure role based access controls to resources",
          "resolve": "Set `role_based_access_control.enabled` attribute to `true` or remove the attribute"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-80",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[denied]",
          "role_based_access_control"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_k8s_rbac.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_k8s_rbac.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "api_server_authorized_ip_ranges"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[allowed_2].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed_2]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[allowed_2].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed_2]",
          "network_profile",
          "network_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`",
        "id": "SNYK-CC-TF-176",
        "impact": "Cannot utilize network policies feature to provide network segmentation between services",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].network_profile.network_policy",
        "subType": "Container",
        "issue": "Azure Kubernetes Service cluster has network policies disabled",
        "publicId": "SNYK-CC-TF-176",
        "title": "AKS Network Policies disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/use-network-policies"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Kubernetes Service cluster has network policies disabled",
          "impact": "Cannot utilize network policies feature to provide network segmentation between services",
          "resolve": "Set `network_profile.network_policy` attribute to `azure` or `calico`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-176",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "network_profile",
          "network_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-82",
        "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
        "msg": "resource.azurerm_kubernetes_cluster[allowed].addon_profile.oms_agent",
        "subType": "Container",
        "issue": "Login to Azure Monitoring is not configured",
        "publicId": "SNYK-CC-TF-82",
        "title": "Azure Monitor login addon not configured",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/insights/container-insights-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Login to Azure Monitoring is not configured",
          "impact": "Performance of workloads cannot be monitored via Azure Monitoring",
          "resolve": "Set `addon_profile.oms_agent.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-82",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed]",
          "addon_profile",
          "oms_agent"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16",
        "id": "SNYK-CC-TF-81",
        "impact": "Increases attack vector reachability",
        "msg": "resource.azurerm_kubernetes_cluster[allowed_2].api_server_authorized_ip_ranges",
        "subType": "Container",
        "issue": "The Kubernetes API server could be accessible by anyone",
        "publicId": "SNYK-CC-TF-81",
        "title": "API Server allows public access",
        "references": [
          "https://docs.microsoft.com/en-us/azure/aks/api-server-authorized-ip-ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Kubernetes API server could be accessible by anyone",
          "impact": "Increases attack vector reachability",
          "resolve": "Set `api_server_authorized_ip_ranges` attribute to specific range e.g. 10.0.0.0/16"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-81",
        "path": [
          "resource",
          "azurerm_kubernetes_cluster[allowed_2]",
          "api_server_authorized_ip_ranges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_managed_disk_encrypted.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_managed_disk_encrypted.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_managed_disk_no_encryption.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_managed_disk_no_encryption.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `encryption_settings.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-77",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "resource.azurerm_managed_disk[denied].encryption_settings",
        "subType": "Compute",
        "issue": "The disk is not encrypted at rest",
        "publicId": "SNYK-CC-TF-77",
        "title": "Encryption at rest is disabled",
        "references": [
          "https://azure.microsoft.com/en-gb/updates/azure-managed-disks-sse/",
          "https://docs.microsoft.com/en-us/azure/virtual-machines/disk-encryption"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The disk is not encrypted at rest",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `encryption_settings.enabled` attribute to `true`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-77",
        "path": [
          "resource",
          "azurerm_managed_disk[denied]",
          "encryption_settings"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_virtual_machine_secrets_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_virtual_machine_secrets_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_virtual_machine_secrets_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_virtual_machine_secrets_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "id": "SNYK-CC-TF-263",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "msg": "resource.azurerm_virtual_machine[denied_3].os_profile.admin_password",
        "subType": "Compute",
        "issue": "Administrative password has been set in terraform configuration file",
        "publicId": "SNYK-CC-TF-263",
        "title": "Hardcoded admin password in VM configuration",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Administrative password has been set in terraform configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "path": [
          "resource",
          "azurerm_virtual_machine[denied_3]",
          "os_profile",
          "admin_password"
        ]
      },
      {
        "severity": "high",
        "resolve": "Remove secret value from configuration",
        "id": "SNYK-CC-TF-182",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "msg": "resource.azurerm_linux_virtual_machine[denied_5].custom_data[azure_sas]",
        "subType": "Compute",
        "issue": "Secret value has been declared in virtual machine configuration",
        "publicId": "SNYK-CC-TF-182",
        "title": "Secret value detected in VM declaration",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/key-vault/general/basic-concepts"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Secret value has been declared in virtual machine configuration",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Remove secret value from configuration"
        },
        "lineNumber": 46,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-182",
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[denied_5]",
          "custom_data[azure_sas]"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "id": "SNYK-CC-TF-263",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "msg": "resource.azurerm_virtual_machine[denied].os_profile.admin_password",
        "subType": "Compute",
        "issue": "Administrative password has been set in terraform configuration file",
        "publicId": "SNYK-CC-TF-263",
        "title": "Hardcoded admin password in VM configuration",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Administrative password has been set in terraform configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "path": [
          "resource",
          "azurerm_virtual_machine[denied]",
          "os_profile",
          "admin_password"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "id": "SNYK-CC-TF-263",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "msg": "resource.azurerm_virtual_machine[denied_4].os_profile.admin_password",
        "subType": "Compute",
        "issue": "Administrative password has been set in terraform configuration file",
        "publicId": "SNYK-CC-TF-263",
        "title": "Hardcoded admin password in VM configuration",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Administrative password has been set in terraform configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "path": [
          "resource",
          "azurerm_virtual_machine[denied_4]",
          "os_profile",
          "admin_password"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `admin_ssh_key` attribute instead of password authentication",
        "id": "SNYK-CC-TF-263",
        "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
        "msg": "resource.azurerm_virtual_machine[denied_2].os_profile.admin_password",
        "subType": "Compute",
        "issue": "Administrative password has been set in terraform configuration file",
        "publicId": "SNYK-CC-TF-263",
        "title": "Hardcoded admin password in VM configuration",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Administrative password has been set in terraform configuration file",
          "impact": "The secret value will be readable to anyone with access to VCS, which can lead to unauthorized data disclosure or privilege escalation",
          "resolve": "Set `admin_ssh_key` attribute instead of password authentication"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-263",
        "path": [
          "resource",
          "azurerm_virtual_machine[denied_2]",
          "os_profile",
          "admin_password"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_vm_no_pass_auth.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_vm_no_pass_auth.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm\\azurerm_vm_pass_auth.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm\\azurerm_vm_pass_auth.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `disable_password_authentication` attribute to `true` or remove the attribute",
        "id": "SNYK-CC-TF-79",
        "impact": "The password authentication is less resistant to brute force and educated guess attacks then SSH only",
        "msg": "resource.azurerm_virtual_machine[denied].os_profile_linux_config.disable_password_authentication",
        "subType": "Compute",
        "issue": "The password authentication for virtual machine has been enabled",
        "publicId": "SNYK-CC-TF-79",
        "title": "Password authentication enabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/security-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The password authentication for virtual machine has been enabled",
          "impact": "The password authentication is less resistant to brute force and educated guess attacks then SSH only",
          "resolve": "Set `disable_password_authentication` attribute to `true` or remove the attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-79",
        "path": [
          "resource",
          "azurerm_virtual_machine[denied]",
          "os_profile_linux_config",
          "disable_password_authentication"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `disable_password_authentication` attribute to `true` or remove the attribute",
        "id": "SNYK-CC-TF-79",
        "impact": "The password authentication is less resistant to brute force and educated guess attacks then SSH only",
        "msg": "resource.azurerm_linux_virtual_machine[denied].disable_password_authentication",
        "subType": "Compute",
        "issue": "The password authentication for virtual machine has been enabled",
        "publicId": "SNYK-CC-TF-79",
        "title": "Password authentication enabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-machines/security-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The password authentication for virtual machine has been enabled",
          "impact": "The password authentication is less resistant to brute force and educated guess attacks then SSH only",
          "resolve": "Set `disable_password_authentication` attribute to `true` or remove the attribute"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-79",
        "path": [
          "resource",
          "azurerm_linux_virtual_machine[denied]",
          "disable_password_authentication"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_activity_log_profile.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_activity_log_profile.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`",
        "id": "SNYK-CC-TF-157",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied_3].categories",
        "subType": "Monitor",
        "issue": "Azure Activity Log profile does not capture logs for all categories",
        "publicId": "SNYK-CC-TF-157",
        "title": "Audit profile does not capture all categories",
        "references": [
          "https://docs.microsoft.com/en-us/rest/api/monitor/logprofiles/createorupdate#logprofileresource"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log profile does not capture logs for all categories",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-157",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied_3]",
          "categories"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`",
        "id": "SNYK-CC-TF-157",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied].categories",
        "subType": "Monitor",
        "issue": "Azure Activity Log profile does not capture logs for all categories",
        "publicId": "SNYK-CC-TF-157",
        "title": "Audit profile does not capture all categories",
        "references": [
          "https://docs.microsoft.com/en-us/rest/api/monitor/logprofiles/createorupdate#logprofileresource"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log profile does not capture logs for all categories",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-157",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied]",
          "categories"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`",
        "id": "SNYK-CC-TF-157",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied_4].categories",
        "subType": "Monitor",
        "issue": "Azure Activity Log profile does not capture logs for all categories",
        "publicId": "SNYK-CC-TF-157",
        "title": "Audit profile does not capture all categories",
        "references": [
          "https://docs.microsoft.com/en-us/rest/api/monitor/logprofiles/createorupdate#logprofileresource"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log profile does not capture logs for all categories",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`"
        },
        "lineNumber": 29,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-157",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied_4]",
          "categories"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`",
        "id": "SNYK-CC-TF-157",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied_2].categories",
        "subType": "Monitor",
        "issue": "Azure Activity Log profile does not capture logs for all categories",
        "publicId": "SNYK-CC-TF-157",
        "title": "Audit profile does not capture all categories",
        "references": [
          "https://docs.microsoft.com/en-us/rest/api/monitor/logprofiles/createorupdate#logprofileresource"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log profile does not capture logs for all categories",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `categories` attribute to `['Action', 'Delete', 'Write']`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-157",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied_2]",
          "categories"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_activity_log_retention.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_activity_log_retention.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `retention_policy.days` attribute to `365` or greater",
        "id": "SNYK-CC-TF-156",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied_2].retention_policy",
        "subType": "Monitor",
        "issue": "Azure Activity Log retention period is below 365 days",
        "publicId": "SNYK-CC-TF-156",
        "title": "Insufficient Activity Log retention period",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/platform/activity-log"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log retention period is below 365 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_policy.days` attribute to `365` or greater"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-156",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied_2]",
          "retention_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_policy.days` attribute to `365` or greater",
        "id": "SNYK-CC-TF-156",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied_3].retention_policy",
        "subType": "Monitor",
        "issue": "Azure Activity Log retention period is below 365 days",
        "publicId": "SNYK-CC-TF-156",
        "title": "Insufficient Activity Log retention period",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/platform/activity-log"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log retention period is below 365 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_policy.days` attribute to `365` or greater"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-156",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied_3]",
          "retention_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_policy.days` attribute to `365` or greater",
        "id": "SNYK-CC-TF-156",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_monitor_log_profile[denied].retention_policy",
        "subType": "Monitor",
        "issue": "Azure Activity Log retention period is below 365 days",
        "publicId": "SNYK-CC-TF-156",
        "title": "Insufficient Activity Log retention period",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-monitor/platform/activity-log"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Activity Log retention period is below 365 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_policy.days` attribute to `365` or greater"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-156",
        "path": [
          "resource",
          "azurerm_monitor_log_profile[denied]",
          "retention_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_nsg_log_retention.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_nsg_log_retention.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `retention_policy` attribute to `90` or greater",
        "id": "SNYK-CC-TF-152",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_network_watcher_flow_log[denied_3].retention_policy",
        "subType": "Network",
        "issue": "Azure Network Security Group Flow log retention period is not greater than 90 days",
        "publicId": "SNYK-CC-TF-152",
        "title": "NSG Flow Log retention period is below 90 days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Network Security Group Flow log retention period is not greater than 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_policy` attribute to `90` or greater"
        },
        "lineNumber": 30,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-152",
        "path": [
          "resource",
          "azurerm_network_watcher_flow_log[denied_3]",
          "retention_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_policy` attribute to `90` or greater",
        "id": "SNYK-CC-TF-152",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_network_watcher_flow_log[denied].retention_policy",
        "subType": "Network",
        "issue": "Azure Network Security Group Flow log retention period is not greater than 90 days",
        "publicId": "SNYK-CC-TF-152",
        "title": "NSG Flow Log retention period is below 90 days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Network Security Group Flow log retention period is not greater than 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_policy` attribute to `90` or greater"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-152",
        "path": [
          "resource",
          "azurerm_network_watcher_flow_log[denied]",
          "retention_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_policy` attribute to `90` or greater",
        "id": "SNYK-CC-TF-152",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_network_watcher_flow_log[denied_2].retention_policy",
        "subType": "Network",
        "issue": "Azure Network Security Group Flow log retention period is not greater than 90 days",
        "publicId": "SNYK-CC-TF-152",
        "title": "NSG Flow Log retention period is below 90 days",
        "references": [
          "https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Network Security Group Flow log retention period is not greater than 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_policy` attribute to `90` or greater"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-152",
        "path": [
          "resource",
          "azurerm_network_watcher_flow_log[denied_2]",
          "retention_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_postgresql_log_checkpoint.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_postgresql_log_checkpoint.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `name` attribute to `log_checkpoints`, and `value` attribute to `on`",
        "id": "SNYK-CC-TF-154",
        "impact": "Verbose logging information of database will not be collected",
        "msg": "resource.azurerm_postgresql_configuration[denied]",
        "subType": "Database",
        "issue": "Azure PostgreSQL 'log_checkpoint' is disabled",
        "publicId": "SNYK-CC-TF-154",
        "title": "log_checkpoints is disabled on PostgreSQL DB",
        "references": [
          "https://docs.microsoft.com/en-us/azure/postgresql/concepts-server-logs"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure PostgreSQL 'log_checkpoint' is disabled",
          "impact": "Verbose logging information of database will not be collected",
          "resolve": "Set `name` attribute to `log_checkpoints`, and `value` attribute to `on`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-154",
        "path": [
          "resource",
          "azurerm_postgresql_configuration[denied]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_sql_audit_retention.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_sql_audit_retention.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely",
        "id": "SNYK-CC-TF-153",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_mssql_server[denied_2].extended_auditing_policy.retention_in_days",
        "subType": "Database",
        "issue": "Azure SQL server audit retention period is below 90 days",
        "publicId": "SNYK-CC-TF-153",
        "title": "Insufficient audit record retention period for SQL server",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL server audit retention period is below 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-153",
        "path": [
          "resource",
          "azurerm_mssql_server[denied_2]",
          "extended_auditing_policy",
          "retention_in_days"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely",
        "id": "SNYK-CC-TF-153",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_mssql_server[denied_3].extended_auditing_policy.retention_in_days",
        "subType": "Database",
        "issue": "Azure SQL server audit retention period is below 90 days",
        "publicId": "SNYK-CC-TF-153",
        "title": "Insufficient audit record retention period for SQL server",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL server audit retention period is below 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-153",
        "path": [
          "resource",
          "azurerm_mssql_server[denied_3]",
          "extended_auditing_policy",
          "retention_in_days"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely",
        "id": "SNYK-CC-TF-153",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_sql_server[denied].extended_auditing_policy.retention_in_days",
        "subType": "Database",
        "issue": "Azure SQL server audit retention period is below 90 days",
        "publicId": "SNYK-CC-TF-153",
        "title": "Insufficient audit record retention period for SQL server",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL server audit retention period is below 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-153",
        "path": [
          "resource",
          "azurerm_sql_server[denied]",
          "extended_auditing_policy",
          "retention_in_days"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `extended_auditing_policy` attribute",
        "id": "SNYK-CC-TF-167",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_mssql_server[allowed_5]",
        "subType": "Database",
        "issue": "Azure SQL Server Auditing is disabled",
        "publicId": "SNYK-CC-TF-167",
        "title": "SQL Server auditing is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL Server Auditing is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `extended_auditing_policy` attribute"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-167",
        "path": [
          "resource",
          "azurerm_mssql_server[allowed_5]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `extended_auditing_policy` attribute",
        "id": "SNYK-CC-TF-167",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_sql_server[allowed]",
        "subType": "Database",
        "issue": "Azure SQL Server Auditing is disabled",
        "publicId": "SNYK-CC-TF-167",
        "title": "SQL Server auditing is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL Server Auditing is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `extended_auditing_policy` attribute"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-167",
        "path": [
          "resource",
          "azurerm_sql_server[allowed]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_sql_server_auditing.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_sql_server_auditing.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `extended_auditing_policy` attribute",
        "id": "SNYK-CC-TF-167",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_mssql_server[denied]",
        "subType": "Database",
        "issue": "Azure SQL Server Auditing is disabled",
        "publicId": "SNYK-CC-TF-167",
        "title": "SQL Server auditing is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL Server Auditing is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `extended_auditing_policy` attribute"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-167",
        "path": [
          "resource",
          "azurerm_mssql_server[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `extended_auditing_policy` attribute",
        "id": "SNYK-CC-TF-167",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_sql_server[denied]",
        "subType": "Database",
        "issue": "Azure SQL Server Auditing is disabled",
        "publicId": "SNYK-CC-TF-167",
        "title": "SQL Server auditing is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL Server Auditing is disabled",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `extended_auditing_policy` attribute"
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-167",
        "path": [
          "resource",
          "azurerm_sql_server[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely",
        "id": "SNYK-CC-TF-153",
        "impact": "Audit records may not be available during investigation",
        "msg": "resource.azurerm_sql_server[allowed].extended_auditing_policy.retention_in_days",
        "subType": "Database",
        "issue": "Azure SQL server audit retention period is below 90 days",
        "publicId": "SNYK-CC-TF-153",
        "title": "Insufficient audit record retention period for SQL server",
        "references": [
          "https://docs.microsoft.com/en-us/azure/azure-sql/database/auditing-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure SQL server audit retention period is below 90 days",
          "impact": "Audit records may not be available during investigation",
          "resolve": "Set `retention_in_days` attribute to `90` or greater. Alternatively set the value to `0` to retain records indefinitely"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-153",
        "path": [
          "resource",
          "azurerm_sql_server[allowed]",
          "extended_auditing_policy",
          "retention_in_days"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\azurerm_storage_queue_read_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\azurerm_storage_queue_read_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `logging.read` attribute to `true`",
        "id": "SNYK-CC-TF-155",
        "impact": "Read requests to the storage queue will not be logged",
        "msg": "resource.azurerm_storage_account[denied].queue_properties",
        "subType": "Storage",
        "issue": "Azure Storage Queue service logging of read requests is disabled",
        "publicId": "SNYK-CC-TF-155",
        "title": "Storage Queue read logging is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/queues/monitor-queue-storage"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Queue service logging of read requests is disabled",
          "impact": "Read requests to the storage queue will not be logged",
          "resolve": "Set `logging.read` attribute to `true`"
        },
        "lineNumber": 22,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-155",
        "path": [
          "resource",
          "azurerm_storage_account[denied]",
          "queue_properties"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`",
        "id": "SNYK-CC-TF-172",
        "impact": "Services will not be able to access the storage account over network",
        "msg": "resource.azurerm_storage_account[denied].network_rules",
        "subType": "Storage",
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "publicId": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Services will not be able to access the storage account over network",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "path": [
          "resource",
          "azurerm_storage_account[denied]",
          "network_rules"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `min_tls_version` attribute to `TLS1_2`",
        "id": "SNYK-CC-TF-149",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.azurerm_storage_account[allowed_3].min_tls_version",
        "subType": "Storage",
        "issue": "Azure Storage Account does not enforce latest TLS version",
        "publicId": "SNYK-CC-TF-149",
        "title": "Storage Account does not enforce latest TLS",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce latest TLS version",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `min_tls_version` attribute to `TLS1_2`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-149",
        "path": [
          "resource",
          "azurerm_storage_account[allowed_3]",
          "min_tls_version"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `min_tls_version` attribute to `TLS1_2`",
        "id": "SNYK-CC-TF-149",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.azurerm_storage_account[denied_2].min_tls_version",
        "subType": "Storage",
        "issue": "Azure Storage Account does not enforce latest TLS version",
        "publicId": "SNYK-CC-TF-149",
        "title": "Storage Account does not enforce latest TLS",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce latest TLS version",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `min_tls_version` attribute to `TLS1_2`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-149",
        "path": [
          "resource",
          "azurerm_storage_account[denied_2]",
          "min_tls_version"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `min_tls_version` attribute to `TLS1_2`",
        "id": "SNYK-CC-TF-149",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.azurerm_storage_account[allowed_4].min_tls_version",
        "subType": "Storage",
        "issue": "Azure Storage Account does not enforce latest TLS version",
        "publicId": "SNYK-CC-TF-149",
        "title": "Storage Account does not enforce latest TLS",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce latest TLS version",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `min_tls_version` attribute to `TLS1_2`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-149",
        "path": [
          "resource",
          "azurerm_storage_account[allowed_4]",
          "min_tls_version"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `min_tls_version` attribute to `TLS1_2`",
        "id": "SNYK-CC-TF-149",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.azurerm_storage_account[denied].min_tls_version",
        "subType": "Storage",
        "issue": "Azure Storage Account does not enforce latest TLS version",
        "publicId": "SNYK-CC-TF-149",
        "title": "Storage Account does not enforce latest TLS",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce latest TLS version",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `min_tls_version` attribute to `TLS1_2`"
        },
        "lineNumber": 21,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-149",
        "path": [
          "resource",
          "azurerm_storage_account[denied]",
          "min_tls_version"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `logging.read` attribute to `true`",
        "id": "SNYK-CC-TF-155",
        "impact": "Read requests to the storage queue will not be logged",
        "msg": "resource.azurerm_storage_account[denied_2].queue_properties",
        "subType": "Storage",
        "issue": "Azure Storage Queue service logging of read requests is disabled",
        "publicId": "SNYK-CC-TF-155",
        "title": "Storage Queue read logging is disabled",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/queues/monitor-queue-storage"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Queue service logging of read requests is disabled",
          "impact": "Read requests to the storage queue will not be logged",
          "resolve": "Set `logging.read` attribute to `true`"
        },
        "lineNumber": 27,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-155",
        "path": [
          "resource",
          "azurerm_storage_account[denied_2]",
          "queue_properties"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`",
        "id": "SNYK-CC-TF-172",
        "impact": "Services will not be able to access the storage account over network",
        "msg": "resource.azurerm_storage_account[allowed_3].network_rules",
        "subType": "Storage",
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "publicId": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Services will not be able to access the storage account over network",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "path": [
          "resource",
          "azurerm_storage_account[allowed_3]",
          "network_rules"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`",
        "id": "SNYK-CC-TF-172",
        "impact": "Services will not be able to access the storage account over network",
        "msg": "resource.azurerm_storage_account[denied_2].network_rules",
        "subType": "Storage",
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "publicId": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Services will not be able to access the storage account over network",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "path": [
          "resource",
          "azurerm_storage_account[denied_2]",
          "network_rules"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`",
        "id": "SNYK-CC-TF-172",
        "impact": "Services will not be able to access the storage account over network",
        "msg": "resource.azurerm_storage_account[allowed_2].network_rules",
        "subType": "Storage",
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "publicId": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Services will not be able to access the storage account over network",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "path": [
          "resource",
          "azurerm_storage_account[allowed_2]",
          "network_rules"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `min_tls_version` attribute to `TLS1_2`",
        "id": "SNYK-CC-TF-149",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.azurerm_storage_account[allowed].min_tls_version",
        "subType": "Storage",
        "issue": "Azure Storage Account does not enforce latest TLS version",
        "publicId": "SNYK-CC-TF-149",
        "title": "Storage Account does not enforce latest TLS",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce latest TLS version",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `min_tls_version` attribute to `TLS1_2`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-149",
        "path": [
          "resource",
          "azurerm_storage_account[allowed]",
          "min_tls_version"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`",
        "id": "SNYK-CC-TF-172",
        "impact": "Services will not be able to access the storage account over network",
        "msg": "resource.azurerm_storage_account[allowed_4].network_rules",
        "subType": "Storage",
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "publicId": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Services will not be able to access the storage account over network",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "path": [
          "resource",
          "azurerm_storage_account[allowed_4]",
          "network_rules"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`",
        "id": "SNYK-CC-TF-172",
        "impact": "Services will not be able to access the storage account over network",
        "msg": "resource.azurerm_storage_account[allowed].network_rules",
        "subType": "Storage",
        "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
        "publicId": "SNYK-CC-TF-172",
        "title": "Trusted Microsoft Service access to storage account is disabled",
        "references": [
          "https://docs.microsoft.com/en-gb/azure/storage/common/storage-network-security#trusted-microsoft-services"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Network access bypass for Trusted Microsoft Services is not enabled on the storage account",
          "impact": "Services will not be able to access the storage account over network",
          "resolve": "Set `network_rules.bypass` attribute to `['Azure Services']`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-172",
        "path": [
          "resource",
          "azurerm_storage_account[allowed]",
          "network_rules"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `min_tls_version` attribute to `TLS1_2`",
        "id": "SNYK-CC-TF-149",
        "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
        "msg": "resource.azurerm_storage_account[allowed_2].min_tls_version",
        "subType": "Storage",
        "issue": "Azure Storage Account does not enforce latest TLS version",
        "publicId": "SNYK-CC-TF-149",
        "title": "Storage Account does not enforce latest TLS",
        "references": [
          "https://docs.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Azure Storage Account does not enforce latest TLS version",
          "impact": "Older cipher suites could be vulnerable to hijacking and information disclosure",
          "resolve": "Set `min_tls_version` attribute to `TLS1_2`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-149",
        "path": [
          "resource",
          "azurerm_storage_account[allowed_2]",
          "min_tls_version"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\cloudtrail\\cloudtrail_cis.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\cloudtrail\\cloudtrail_cis.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `is_multi_region_trail` attribute to `true`",
        "id": "SNYK-CC-TF-135",
        "impact": "Logs will not be collected in all the regions",
        "msg": "resource.aws_cloudtrail[insecure].is_multi_region_trail",
        "remediation": {
          "cloudformation": "Set `Properties.IsMultiRegionTrail` attribute to `true`",
          "terraform": "Set `is_multi_region_trail` attribute to `true`"
        },
        "subType": "CloudTrail",
        "issue": "Amazon CloudTrail is not enabled for all regions",
        "publicId": "SNYK-CC-TF-135",
        "title": "CloudTrail does not include all regions",
        "references": [
          "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/receive-cloudtrail-log-files-from-multiple-regions.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Amazon CloudTrail is not enabled for all regions",
          "impact": "Logs will not be collected in all the regions",
          "resolve": "Set `is_multi_region_trail` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-135",
        "path": [
          "resource",
          "aws_cloudtrail[insecure]",
          "is_multi_region_trail"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `enable_log_file_validation` attribute to `true`",
        "id": "SNYK-CC-TF-16",
        "impact": "You cannot trust the integrity of the log files and determine whether they have been tampered with.",
        "msg": "input.resource.aws_cloudtrail[insecure].enable_log_file_validation",
        "remediation": {
          "cloudformation": "Set the `Properties.EnableLogFileValidation` attribute to `true`",
          "terraform": "Set the `enable_log_file_validation` attribute to `true`"
        },
        "subType": "CloudTrail",
        "issue": "The CloudTrail logs integrity is not been enforced",
        "publicId": "SNYK-CC-TF-16",
        "title": "CloudTrail does not have log file validation enabled",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The CloudTrail logs integrity is not been enforced",
          "impact": "You cannot trust the integrity of the log files and determine whether they have been tampered with.",
          "resolve": "Set the `enable_log_file_validation` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-16",
        "path": [
          "input",
          "resource",
          "aws_cloudtrail[insecure]",
          "enable_log_file_validation"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `kms_key_id` attribute to valid KMS key id",
        "id": "SNYK-CC-TF-17",
        "impact": "IAM policies cannot be used to control access to the decryption keys",
        "msg": "input.resource.aws_cloudtrail[insecure].kms_key_id",
        "remediation": {
          "cloudformation": "Set `KMSKeyId` attribute to valid KMS key id",
          "terraform": "Set `kms_key_id` attribute to valid KMS key id"
        },
        "subType": "CloudTrail",
        "issue": "The CloudTrail logs are not encrypted with managed key",
        "publicId": "SNYK-CC-TF-17",
        "title": "CloudTrail logs are not encrypted with managed key",
        "references": [
          "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The CloudTrail logs are not encrypted with managed key",
          "impact": "IAM policies cannot be used to control access to the decryption keys",
          "resolve": "Set `kms_key_id` attribute to valid KMS key id"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-17",
        "path": [
          "input",
          "resource",
          "aws_cloudtrail[insecure]",
          "kms_key_id"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `cloud_watch_logs_group_arn` attribute to cloudwatch log group ARN",
        "id": "SNYK-CC-TF-256",
        "impact": "Alarms cannot be configured to alert on CloudTrail events",
        "msg": "resource.aws_cloudtrail[insecure].cloud_watch_logs_group_arn",
        "remediation": {
          "cloudformation": "Set `Properties.CloudWatchLogsLogGroupArn` attribute to cloudwatch log group ARN",
          "terraform": "Set `cloud_watch_logs_group_arn` attribute to cloudwatch log group ARN"
        },
        "subType": "CloudTrail",
        "issue": "CloudTrail does not deliver logs to CloudWatch",
        "publicId": "SNYK-CC-TF-256",
        "title": "CloudTrail not integrated with CloudWatch",
        "references": [
          "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "CloudTrail does not deliver logs to CloudWatch",
          "impact": "Alarms cannot be configured to alert on CloudTrail events",
          "resolve": "Set `cloud_watch_logs_group_arn` attribute to cloudwatch log group ARN"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-256",
        "path": [
          "resource",
          "aws_cloudtrail[insecure]",
          "cloud_watch_logs_group_arn"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set the `enable_logging` attribute to `true`",
        "id": "SNYK-CC-TF-15",
        "impact": "That you cannot keep a record of all access and events on your account",
        "msg": "input.resource.aws_cloudtrail[insecure].enable_logging",
        "remediation": {
          "cloudformation": "Set the `Properties.IsLogging` attribute to `true`",
          "terraform": "Set the `enable_logging` attribute to `true`"
        },
        "subType": "CloudTrail",
        "issue": "Logs are not being kept for your CloudTrail activity",
        "publicId": "SNYK-CC-TF-15",
        "title": "CloudTrail has logging disabled",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Logs are not being kept for your CloudTrail activity",
          "impact": "That you cannot keep a record of all access and events on your account",
          "resolve": "Set the `enable_logging` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-15",
        "path": [
          "input",
          "resource",
          "aws_cloudtrail[insecure]",
          "enable_logging"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\ebs\\unencrypted_ebs_snapshot.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\ebs\\unencrypted_ebs_snapshot.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Adding or updating the attribute `encrypted` and setting it to `true` to ensure the snapshots are now encrypted. ",
        "id": "SNYK-CC-TF-2",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents. ",
        "msg": "input.resource.aws_ebs_snapshot[example_snapshot_unencrypted].encrypted",
        "subType": "EC2",
        "issue": "That this EBS snapshot is not encrypted. The default behavior is for EBS snapshot to be encrypted. ",
        "publicId": "SNYK-CC-TF-2",
        "title": "Non-encrypted EBS snapshot",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That this EBS snapshot is not encrypted. The default behavior is for EBS snapshot to be encrypted. ",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents. ",
          "resolve": "Adding or updating the attribute `encrypted` and setting it to `true` to ensure the snapshots are now encrypted. "
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-2",
        "path": [
          "input",
          "resource",
          "aws_ebs_snapshot[example_snapshot_unencrypted]",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\ebs\\unencrypted_ebs_volume.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\ebs\\unencrypted_ebs_volume.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `encrypted` attribute to `true`",
        "id": "SNYK-CC-TF-3",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents. ",
        "msg": "input.resource.aws_ebs_volume[example_volume_unencrypted].encrypted",
        "remediation": {
          "cloudformation": "Set `Properties.Encrypted` attribute to `true`",
          "terraform": "Set `encrypted` attribute to `true`"
        },
        "subType": "EC2",
        "issue": "That this EBS volume is not encrypted. The default behavior is for EBS volumes to be encrypted. ",
        "publicId": "SNYK-CC-TF-3",
        "title": "Non-encrypted EBS volume",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That this EBS volume is not encrypted. The default behavior is for EBS volumes to be encrypted. ",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents. ",
          "resolve": "Set `encrypted` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-3",
        "path": [
          "input",
          "resource",
          "aws_ebs_volume[example_volume_unencrypted]",
          "encrypted"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_iam_group_assigned.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_iam_group_assigned.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_iam_user_assigned.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_iam_user_assigned.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_data_catalog_entry_group_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 80,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_data_catalog_entry_group_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_sourcerepo_repository_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 224,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_sourcerepo_repository_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_storage_bucket_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 242,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_storage_bucket_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_cloud_run_service_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 38,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_cloud_run_service_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_service_account_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 218,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_service_account_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_project_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_project_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_endpoints_service_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 98,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_endpoints_service_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_secret_manager_secret_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 212,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_secret_manager_secret_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_billing_account_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_billing_account_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_compute_region_disk_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 68,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_compute_region_disk_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_healthcare_hl7_v2_store_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 128,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_healthcare_hl7_v2_store_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_app_engine_version_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 140,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_app_engine_version_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_web_backend_service_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 152,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_web_backend_service_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_healthcare_dataset_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 110,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_healthcare_dataset_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_pubsub_subscription_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 194,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_pubsub_subscription_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_folder_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 104,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_folder_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_compute_instance_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 62,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_compute_instance_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_web_type_app_engine_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 164,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_web_type_app_engine_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_web_type_compute_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 170,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_web_type_compute_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_healthcare_fhir_store_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 122,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_healthcare_fhir_store_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_bigtable_instance_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_bigtable_instance_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_spanner_database_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 230,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_spanner_database_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_healthcare_dicom_store_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 116,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_healthcare_dicom_store_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_kms_crypto_key_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 176,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_kms_crypto_key_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_app_engine_service_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 134,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_app_engine_service_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_cloudfunctions_function_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 44,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_cloudfunctions_function_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_dataproc_cluster_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 86,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_dataproc_cluster_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_tunnel_instance_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 146,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_tunnel_instance_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_pubsub_topic_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 200,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_pubsub_topic_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_bigquery_table_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_bigquery_table_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_iap_web_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 158,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_iap_web_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_spanner_instance_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 236,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_spanner_instance_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_binary_authorization_attestor_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_binary_authorization_attestor_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_compute_disk_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 50,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_compute_disk_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_dataproc_job_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 92,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_dataproc_job_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_runtimeconfig_config_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 206,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_runtimeconfig_config_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_organization_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 188,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_organization_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_bigquery_dataset_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_bigquery_dataset_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_kms_key_ring_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 182,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_kms_key_ring_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_compute_image_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 56,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_compute_image_iam_binding[denied]",
          "members"
        ]
      },
      {
        "severity": "low",
        "description": "",
        "resolve": "Do not include users in `members` attribute",
        "id": "SNYK-CC-TF-90",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_compute_subnetwork_iam_binding[denied].members",
        "subType": "IAM",
        "issue": "The IAM permission is directly assigned to user account",
        "publicId": "SNYK-CC-TF-90",
        "title": "IAM permission assigned to user",
        "references": [
          "https://cloud.google.com/billing/docs/reference/rest/v1/Policy#Binding"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The IAM permission is directly assigned to user account",
          "impact": "Increases the security management overhead",
          "resolve": "Do not include users in `members` attribute"
        },
        "lineNumber": 74,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-90",
        "path": [
          "resource",
          "google_compute_subnetwork_iam_binding[denied]",
          "members"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_basic_auth.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_basic_auth.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_3].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_5].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_5].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_3].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_3].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_5].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_3].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_3].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_4].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_5].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_4].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_3].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_5].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_4].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_3].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_4].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_4].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "resource_labels"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_4].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_4].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_5].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_5].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_5].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 20,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_3].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_4].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_3].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_4].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_4]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_5].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_5]",
          "enable_shielded_nodes"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_client_certificate.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_client_certificate.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_3].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_3].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_3].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "resource_labels"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_3].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_3].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_3].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_3].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_3].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_3].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_legacy_abac.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_legacy_abac.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `enable_legacy_abac` attribute to `false`, or remove the attribute",
        "id": "SNYK-CC-TF-83",
        "impact": "The ABAC may conflict with RBAC authorization and lead to unintended access violations",
        "msg": "resource.google_container_cluster[denied].enable_legacy_abac",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The legacy ABAC authorization is enabled on the cluster",
        "publicId": "SNYK-CC-TF-83",
        "title": "Legacy ABAC is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://kubernetes.io/docs/reference/access-authn-authz/abac/"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The legacy ABAC authorization is enabled on the cluster",
          "impact": "The ABAC may conflict with RBAC authorization and lead to unintended access violations",
          "resolve": "Set `enable_legacy_abac` attribute to `false`, or remove the attribute"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-83",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_legacy_abac"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_legacy_endpoints.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_legacy_endpoints.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `metadata.disable-legacy-endpoints` attribute to `true`",
        "id": "SNYK-CC-TF-85",
        "impact": "The legacy endpoints do not enforce metadata query headers, and can leak sensitive information",
        "msg": "resource.google_container_cluster[denied].metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The legacy endpoints are enabled",
        "publicId": "SNYK-CC-TF-85",
        "title": "GKE legacy endpoint enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#disable-legacy-apis"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The legacy endpoints are enabled",
          "impact": "The legacy endpoints do not enforce metadata query headers, and can leak sensitive information",
          "resolve": "Set `metadata.disable-legacy-endpoints` attribute to `true`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-85",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `metadata.disable-legacy-endpoints` attribute to `true`",
        "id": "SNYK-CC-TF-85",
        "impact": "The legacy endpoints do not enforce metadata query headers, and can leak sensitive information",
        "msg": "resource.google_container_cluster[denied_2].metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The legacy endpoints are enabled",
        "publicId": "SNYK-CC-TF-85",
        "title": "GKE legacy endpoint enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/protecting-cluster-metadata#disable-legacy-apis"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The legacy endpoints are enabled",
          "impact": "The legacy endpoints do not enforce metadata query headers, and can leak sensitive information",
          "resolve": "Set `metadata.disable-legacy-endpoints` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-85",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "metadata"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_abac.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_abac.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_basic_auth.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_basic_auth.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_client_certificate.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_client_certificate.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_legacy_endpoints.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_legacy_endpoints.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_psp.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_psp.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_shield.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_shield.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_no_workload_identity.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_no_workload_identity.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_3].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_2].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_3].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_2].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_3].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "resource_labels"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_3].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[denied_3].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied_3].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[denied_2].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied_2].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_2].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_2].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[denied_3].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[denied].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied_3].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[denied_3].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 14,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[denied_3]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[denied_2].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[denied_2]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[denied].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "master_auth"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[denied].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[denied]",
          "private_cluster_config"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_psp.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_psp.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_shield.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_shield.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`",
        "id": "SNYK-CC-TF-84",
        "impact": "The pods may be able to access sensitive information from node's metadata service",
        "msg": "resource.google_container_cluster[allowed].workload_metadata_config.node_metadata",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Workload Identity is not enabled",
        "publicId": "SNYK-CC-TF-84",
        "title": "GKE Workload Identity is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Workload Identity is not enabled",
          "impact": "The pods may be able to access sensitive information from node's metadata service",
          "resolve": "Set `workload_metadata_config.node_metadata` attribute to `GKE_METADATA_SERVER`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-84",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "workload_metadata_config",
          "node_metadata"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\gcp\\gcp_k8s_workload_identity.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\gcp\\gcp_k8s_workload_identity.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_shielded_nodes` attribute to `true`",
        "id": "SNYK-CC-TF-89",
        "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
        "msg": "resource.google_container_cluster[allowed].enable_shielded_nodes",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The Shield GKE feature is not enabled",
        "publicId": "SNYK-CC-TF-89",
        "title": "GKE Shield is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/shielded-gke-nodes"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The Shield GKE feature is not enabled",
          "impact": "Node verification will be disabled which increases the attacker's ability to impersonate a node in the cluster",
          "resolve": "Set `enable_shielded_nodes` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-89",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "enable_shielded_nodes"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `network_policy.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-196",
        "impact": "Network policies cannot be used as part of defence in depth controls",
        "msg": "resource.google_container_cluster[allowed].network_policy.enabled",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE network policies enforcement is disabled",
        "publicId": "SNYK-CC-TF-196",
        "title": "GKE Network Policies enforcement disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy",
          "https://cloud.google.com/kubernetes-engine/docs/tutorials/network-policy"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE network policies enforcement is disabled",
          "impact": "Network policies cannot be used as part of defence in depth controls",
          "resolve": "Set `network_policy.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-196",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "network_policy",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `private_cluster_config` attribute",
        "id": "SNYK-CC-TF-238",
        "impact": "Master endpoints and nodes may be configured with public addresses",
        "msg": "resource.google_container_cluster[allowed].private_cluster_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE private cluster only configuration is not set",
        "publicId": "SNYK-CC-TF-238",
        "title": "GKE private cluster options is not enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/concepts/control-plane-security",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/private-clusters"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE private cluster only configuration is not set",
          "impact": "Master endpoints and nodes may be configured with public addresses",
          "resolve": "Set `private_cluster_config` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-238",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "private_cluster_config"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges",
        "id": "SNYK-CC-TF-269",
        "impact": "GCP will not perform anti-spoofing checks against traffic",
        "msg": "resource.google_container_cluster[allowed].ip_allocation_policy",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have Alias IP range defined",
        "publicId": "SNYK-CC-TF-269",
        "title": "GKE Alias IP disabled",
        "references": [
          "https://cloud.google.com/vpc/docs/alias-ip#key_benefits_of_alias_ip_ranges"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have Alias IP range defined",
          "impact": "GCP will not perform anti-spoofing checks against traffic",
          "resolve": "Set `ip_allocation_policy` attribute with dedicated IP ranges"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-269",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "ip_allocation_policy"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-88",
        "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].pod_security_policy_config",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
        "publicId": "SNYK-CC-TF-88",
        "title": "GKE PodSecurityPolicy controller is disabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/pod-security-policies",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The PodSecurityPolicy controller is not enabled on the cluster",
          "impact": "The Pods cannot be constrained with PodSecurityPolicies, which increases the security management overhead",
          "resolve": "Set `pod_security_policy_config.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-88",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "pod_security_policy_config"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`",
        "id": "SNYK-CC-TF-86",
        "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The basic authentication is not disabled",
        "publicId": "SNYK-CC-TF-86",
        "title": "GKE Basic Auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The basic authentication is not disabled",
          "impact": "HTTP basic authentication is supported by the latest GKE version, potentially allowing secret passwords to be stored in the state file",
          "resolve": "Set `master_auth.username` and `master_auth.password` attributes to `\"\"`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-86",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `resource_labels` attribute",
        "id": "SNYK-CC-TF-202",
        "impact": "Increases the security management overhead",
        "msg": "resource.google_container_cluster[allowed].resource_labels",
        "subType": "Kubernetes (Container) Engine",
        "issue": "GKE cluster does not have resource labels",
        "publicId": "SNYK-CC-TF-202",
        "title": "GKE cluster labels are missing",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/creating-managing-labels"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "GKE cluster does not have resource labels",
          "impact": "Increases the security management overhead",
          "resolve": "Set `resource_labels` attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-202",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "resource_labels"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`",
        "id": "SNYK-CC-TF-87",
        "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
        "msg": "resource.google_container_cluster[allowed].master_auth",
        "subType": "Kubernetes (Container) Engine",
        "issue": "The client certificate authentication is not disabled",
        "publicId": "SNYK-CC-TF-87",
        "title": "GKE client certificate auth is enabled",
        "references": [
          "https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster",
          "https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication#legacy-auth"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The client certificate authentication is not disabled",
          "impact": "The client certificate authentication methods is considered legacy and increase the attack surface for the cluster",
          "resolve": "Set `master_auth.issue_client_certificate` attribute to `false`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-87",
        "path": [
          "resource",
          "google_container_cluster[allowed]",
          "master_auth"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\iam\\iam_cis.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\iam\\iam_cis.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set the `minimum_password_length` attribute to be at least `14` to increase the strength of your password",
        "id": "SNYK-CC-TF-11",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[missing_length].minimum_password_length",
        "subType": "IAM",
        "issue": "Your password does not enforce a minimum length",
        "publicId": "SNYK-CC-TF-11",
        "title": "IAM requires minimum password length",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password does not enforce a minimum length",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `minimum_password_length` attribute to be at least `14` to increase the strength of your password"
        },
        "lineNumber": 41,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-11",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[missing_length]",
          "minimum_password_length"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `max_password_age` attribute to be less than `90` therefore reducing your exposure window",
        "id": "SNYK-CC-TF-13",
        "impact": "That if your password is leaked, your exposure window is much longer",
        "msg": "input.resource.aws_iam_account_password_policy[max_age].max_password_age",
        "subType": "IAM",
        "issue": "Your password has a long or no expiry time",
        "publicId": "SNYK-CC-TF-13",
        "title": "IAM should have max password age",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password has a long or no expiry time",
          "impact": "That if your password is leaked, your exposure window is much longer",
          "resolve": "Set the `max_password_age` attribute to be less than `90` therefore reducing your exposure window"
        },
        "lineNumber": 89,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-13",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[max_age]",
          "max_password_age"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `max_password_age` attribute to be less than `90` therefore reducing your exposure window",
        "id": "SNYK-CC-TF-13",
        "impact": "That if your password is leaked, your exposure window is much longer",
        "msg": "input.resource.aws_iam_account_password_policy[missing_max_age].max_password_age",
        "subType": "IAM",
        "issue": "Your password has a long or no expiry time",
        "publicId": "SNYK-CC-TF-13",
        "title": "IAM should have max password age",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password has a long or no expiry time",
          "impact": "That if your password is leaked, your exposure window is much longer",
          "resolve": "Set the `max_password_age` attribute to be less than `90` therefore reducing your exposure window"
        },
        "lineNumber": 71,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-13",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[missing_max_age]",
          "max_password_age"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `require_symbols` attribute to be `true` to increase the strength of your password",
        "id": "SNYK-CC-TF-9",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[symbols].require_symbols",
        "subType": "IAM",
        "issue": "Your password does not contain symbols",
        "publicId": "SNYK-CC-TF-9",
        "title": "IAM password should contain symbols",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password does not contain symbols",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `require_symbols` attribute to be `true` to increase the strength of your password"
        },
        "lineNumber": 26,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-9",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[symbols]",
          "require_symbols"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `minimum_password_length` attribute to be at least `14` to increase the strength of your password",
        "id": "SNYK-CC-TF-11",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[length].minimum_password_length",
        "subType": "IAM",
        "issue": "Your password does not enforce a minimum length",
        "publicId": "SNYK-CC-TF-11",
        "title": "IAM requires minimum password length",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password does not enforce a minimum length",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `minimum_password_length` attribute to be at least `14` to increase the strength of your password"
        },
        "lineNumber": 51,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-11",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[length]",
          "minimum_password_length"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `password_reuse_prevention` attribute to be `24` to ensure the previous 24 passwords cannot be reused",
        "id": "SNYK-CC-TF-12",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[reuse_prevention].password_reuse_prevention",
        "subType": "IAM",
        "issue": "Your password could be reused",
        "publicId": "SNYK-CC-TF-12",
        "title": "IAM password reuse prevention is missing",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password could be reused",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `password_reuse_prevention` attribute to be `24` to ensure the previous 24 passwords cannot be reused"
        },
        "lineNumber": 67,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-12",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[reuse_prevention]",
          "password_reuse_prevention"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `require_lowercase` attribute to be `true` to increase the strength of your password",
        "id": "SNYK-CC-TF-8",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[lowercase].require_lowercase_characters",
        "subType": "IAM",
        "issue": "Your password does not contain lowercase characters",
        "publicId": "SNYK-CC-TF-8",
        "title": "IAM password should contain lowercase",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password does not contain lowercase characters",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `require_lowercase` attribute to be `true` to increase the strength of your password"
        },
        "lineNumber": 13,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-8",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[lowercase]",
          "require_lowercase_characters"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `require_uppercase` attribute to be `true` to increase the strength of your password",
        "id": "SNYK-CC-TF-7",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[uppercase].require_uppercase_characters",
        "subType": "IAM",
        "issue": "Your password does not contain uppercase characters",
        "publicId": "SNYK-CC-TF-7",
        "title": "IAM password should contain uppercase",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password does not contain uppercase characters",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `require_uppercase` attribute to be `true` to increase the strength of your password"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-7",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[uppercase]",
          "require_uppercase_characters"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set the `require_numbers` attribute to be `true` to increase the strength of your password",
        "id": "SNYK-CC-TF-10",
        "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
        "msg": "input.resource.aws_iam_account_password_policy[numbers].require_numbers",
        "subType": "IAM",
        "issue": "Your password does not contain numbers",
        "publicId": "SNYK-CC-TF-10",
        "title": "IAM password should contain numbers",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Your password does not contain numbers",
          "impact": "Your password is not following the recommended security practices and is not as strong as it should be",
          "resolve": "Set the `require_numbers` attribute to be `true` to increase the strength of your password"
        },
        "lineNumber": 34,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-10",
        "path": [
          "input",
          "resource",
          "aws_iam_account_password_policy[numbers]",
          "require_numbers"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\kms\\kms_cis.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\kms\\kms_cis.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `enable_key_rotation` attribute to `true`",
        "id": "SNYK-CC-TF-14",
        "impact": "That data is being encrypted with a key which is valid for a longer period of time, resulting in a greater exposure window should that key be leaked",
        "msg": "input.resource.aws_kms_key[without-rotation].enable_key_rotation",
        "remediation": {
          "cloudformation": "Set `Properties.EnableKeyRotation` attribute to `true`",
          "terraform": "Set `enable_key_rotation` attribute to `true`"
        },
        "subType": "KMS",
        "issue": "That your encryption keys are not being rotated by AWS",
        "publicId": "SNYK-CC-TF-14",
        "title": "KMS key does not have key rotation enabled",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That your encryption keys are not being rotated by AWS",
          "impact": "That data is being encrypted with a key which is valid for a longer period of time, resulting in a greater exposure window should that key be leaked",
          "resolve": "Set `enable_key_rotation` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-14",
        "path": [
          "input",
          "resource",
          "aws_kms_key[without-rotation]",
          "enable_key_rotation"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_db_security_group_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_db_security_group_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_db_security_group[allowed]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_db_security_group[allowed]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_db_security_group_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_db_security_group_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_db_security_group[denied]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_db_security_group[denied]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cidr` attribute to specific IP range only, for example `192.168.1.0/24`",
        "id": "SNYK-CC-TF-39",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.aws_db_security_group[denied].ingress[0].cidr",
        "remediation": {
          "cloudformation": "Set `Properties.CIDRIP` attribute to specific IP range only, for example `192.168.1.0/24`",
          "terraform": "Set `cidr` attribute to specific IP range only, for example `192.168.1.0/24`"
        },
        "subType": "RDS",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-39",
        "title": "AWS DB Security Group allows public access",
        "references": [
          "https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_AuthorizeDBSecurityGroupIngress.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr` attribute to specific IP range only, for example `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-39",
        "path": [
          "resource",
          "aws_db_security_group[denied]",
          "ingress[0]",
          "cidr"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_default_network_acl_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_default_network_acl_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_default_network_acl_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_default_network_acl_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set cidr_block to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-40",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.aws_default_network_acl[denied].ingress[0].cidr_block",
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-40",
        "title": "AWS Default Network ACL allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set cidr_block to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-40",
        "path": [
          "resource",
          "aws_default_network_acl[denied]",
          "ingress[0]",
          "cidr_block"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_default_security_group_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_default_security_group_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only reach known destinations. ",
        "id": "SNYK-CC-TF-6",
        "impact": "That traffic from a resource could reach any destination, in the event of a breach this means data could be uploaded externally or additional resources targeted",
        "msg": "input.resource.aws_default_security_group[allowed].egress",
        "subType": "VPC",
        "issue": "That outbound traffic is not restricted to a specific range from a resource",
        "publicId": "SNYK-CC-TF-6",
        "title": "Default VPC Security Group allows open egress",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That outbound traffic is not restricted to a specific range from a resource",
          "impact": "That traffic from a resource could reach any destination, in the event of a breach this means data could be uploaded externally or additional resources targeted",
          "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only reach known destinations. "
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-6",
        "path": [
          "input",
          "resource",
          "aws_default_security_group[allowed]",
          "egress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_default_security_group_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_default_security_group_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only reach known destinations. ",
        "id": "SNYK-CC-TF-6",
        "impact": "That traffic from a resource could reach any destination, in the event of a breach this means data could be uploaded externally or additional resources targeted",
        "msg": "input.resource.aws_default_security_group[denied].egress",
        "subType": "VPC",
        "issue": "That outbound traffic is not restricted to a specific range from a resource",
        "publicId": "SNYK-CC-TF-6",
        "title": "Default VPC Security Group allows open egress",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That outbound traffic is not restricted to a specific range from a resource",
          "impact": "That traffic from a resource could reach any destination, in the event of a breach this means data could be uploaded externally or additional resources targeted",
          "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only reach known destinations. "
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-6",
        "path": [
          "input",
          "resource",
          "aws_default_security_group[denied]",
          "egress"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only come from known sources. ",
        "id": "SNYK-CC-TF-5",
        "impact": "That potentially everyone can access your resource",
        "msg": "input.resource.aws_default_security_group[denied].ingress[0]",
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-5",
        "title": "Default VPC Security Group allows open ingress",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only come from known sources. "
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-5",
        "path": [
          "input",
          "resource",
          "aws_default_security_group[denied]",
          "ingress[0]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_network_acl_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_network_acl_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_network_acl_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_network_acl_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`",
        "id": "SNYK-CC-TF-41",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.aws_network_acl[denied].ingress[0].cidr_block",
        "remediation": {
          "cloudformation": "Set `Properties.CidrBlock` or `Properties.Ipv6CidrBlock` attribute to specific IP range only, for example `192.168.0.0/24`",
          "terraform": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-41",
        "title": "AWS Network ACL allows public access",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute to specific IP range only, for example `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-41",
        "path": [
          "resource",
          "aws_network_acl[denied]",
          "ingress[0]",
          "cidr_block"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_network_acl_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_network_acl_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_network_acl_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_network_acl_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set cidr_block to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-42",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.aws_network_acl_rule[denied].cidr_block",
        "remediation": {
          "cloudformation": "Set `CidrBlock` to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set cidr_block to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-42",
        "title": "AWS Network ACL Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set cidr_block to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-42",
        "path": [
          "resource",
          "aws_network_acl_rule[denied]",
          "cidr_block"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_redshift_security_group_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_redshift_security_group_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_redshift_security_group[allowed]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_redshift_security_group[allowed]"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_redshift_security_group_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_redshift_security_group_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "description": "",
        "resolve": "Migrate the resource to VPC mode",
        "id": "SNYK-CC-TF-46",
        "impact": "Increases attack vector reachability",
        "msg": "input.resource.aws_redshift_security_group[denied]",
        "subType": "EC2-Classic",
        "issue": "The EC2-Classic resources run in shared environment",
        "publicId": "SNYK-CC-TF-46",
        "title": "AWS EC2-Classic resource detected",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-classic-platform.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The EC2-Classic resources run in shared environment",
          "impact": "Increases attack vector reachability",
          "resolve": "Migrate the resource to VPC mode"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-46",
        "path": [
          "input",
          "resource",
          "aws_redshift_security_group[denied]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `cidr` attribute to specific IP range only, for example `192.168.1.0/24`",
        "id": "SNYK-CC-TF-38",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.aws_redshift_security_group[denied].ingress[0].cidr",
        "remediation": {
          "cloudformation": "Set `CIDRIP` attribute to specific IP range only, for example `192.168.1.0/24`",
          "terraform": "Set `cidr` attribute to specific IP range only, for example `192.168.1.0/24`"
        },
        "subType": "Redshift",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-38",
        "title": "AWS Redshift Security Group allows public access",
        "references": [
          "https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-security-groups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr` attribute to specific IP range only, for example `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-38",
        "path": [
          "resource",
          "aws_redshift_security_group[denied]",
          "ingress[0]",
          "cidr"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_security_group_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_security_group_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.aws_security_group[allowed].egress",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "resource",
          "aws_security_group[allowed]",
          "egress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_security_group_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_security_group_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "id": "SNYK-CC-TF-1",
        "impact": "That potentially everyone can access your resource",
        "msg": "input.resource.aws_security_group[denied].ingress[0]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "path": [
          "input",
          "resource",
          "aws_security_group[denied]",
          "ingress[0]"
        ]
      },
      {
        "severity": "low",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.aws_security_group[denied].egress",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources"
        },
        "lineNumber": 19,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "resource",
          "aws_security_group[denied]",
          "egress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_security_group_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_security_group_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_security_group_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_security_group_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-37",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.aws_security_group_rule[denied].cidr_blocks",
        "remediation": {
          "cloudformation": "Set `CidrIp` attribute to specific IP range only, e.g. `192.168.1.0/24`",
          "terraform": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-37",
        "title": "AWS Security Group Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_blocks` attribute to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-37",
        "path": [
          "resource",
          "aws_security_group_rule[denied]",
          "cidr_blocks"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_sg_egress_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_sg_egress_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `description` attribute to meaningful statement",
        "id": "SNYK-CC-TF-56",
        "impact": "Increases the security management overhead",
        "msg": "resource.aws_security_group[allowed_2].description",
        "subType": "VPC",
        "issue": "The description field is missing in the security group",
        "publicId": "SNYK-CC-TF-56",
        "title": "Missing description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "path": [
          "resource",
          "aws_security_group[allowed_2]",
          "description"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `description` attribute to meaningful statement",
        "id": "SNYK-CC-TF-56",
        "impact": "Increases the security management overhead",
        "msg": "resource.aws_security_group[allowed].description",
        "subType": "VPC",
        "issue": "The description field is missing in the security group",
        "publicId": "SNYK-CC-TF-56",
        "title": "Missing description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "path": [
          "resource",
          "aws_security_group[allowed]",
          "description"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_sg_egress_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_sg_egress_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `description` attribute to meaningful statement",
        "id": "SNYK-CC-TF-56",
        "impact": "Increases the security management overhead",
        "msg": "resource.aws_security_group[denied_2].description",
        "subType": "VPC",
        "issue": "The description field is missing in the security group",
        "publicId": "SNYK-CC-TF-56",
        "title": "Missing description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "path": [
          "resource",
          "aws_security_group[denied_2]",
          "description"
        ]
      },
      {
        "severity": "low",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.aws_security_group[denied_2].egress[0]",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources"
        },
        "lineNumber": 7,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "resource",
          "aws_security_group[denied_2]",
          "egress[0]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `description` attribute to meaningful statement",
        "id": "SNYK-CC-TF-56",
        "impact": "Increases the security management overhead",
        "msg": "resource.aws_security_group[denied].description",
        "subType": "VPC",
        "issue": "The description field is missing in the security group",
        "publicId": "SNYK-CC-TF-56",
        "title": "Missing description",
        "references": [
          "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-security-groups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The description field is missing in the security group",
          "impact": "Increases the security management overhead",
          "resolve": "Set `description` attribute to meaningful statement"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-56",
        "path": [
          "resource",
          "aws_security_group[denied]",
          "description"
        ]
      },
      {
        "severity": "low",
        "id": "SNYK-CC-TF-73",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.aws_security_group[denied].egress",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupEgress.CidrIp` attribute to specific ranges e.g. `192.168.1.0/24`",
          "terraform": "Set `egress.cidr_blocks` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "subType": "VPC",
        "issue": "The inline security group rule allows open egress",
        "publicId": "SNYK-CC-TF-73",
        "title": "AWS Security Group allows open egress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html",
          "https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The inline security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-73",
        "path": [
          "resource",
          "aws_security_group[denied]",
          "egress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_sg_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_sg_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\aws_sg_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\aws_sg_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_data_lake_analytics_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_data_lake_analytics_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_data_lake_analytics_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_data_lake_analytics_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-23",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_data_lake_analytics_firewall_rule[denied].start_ip_address",
        "subType": "Data Lake",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-23",
        "title": "Azure Data Lake Analytics Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-23",
        "path": [
          "resource",
          "azurerm_data_lake_analytics_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_data_lake_store_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_data_lake_store_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_data_lake_store_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_data_lake_store_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-24",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_data_lake_store_firewall_rule[denied].start_ip_address",
        "subType": "Data Lake",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-24",
        "title": "Azure Data Lake Store Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-24",
        "path": [
          "resource",
          "azurerm_data_lake_store_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_firewall_application_rule_collection_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_firewall_application_rule_collection_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_firewall_application_rule_collection_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_firewall_application_rule_collection_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set source_addresses to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-21",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_firewall_application_rule_collection[denied].rule[0].source_addresses",
        "subType": "Network",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-21",
        "title": "Azure Firewall Application Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_addresses to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-21",
        "path": [
          "resource",
          "azurerm_firewall_application_rule_collection[denied]",
          "rule[0]",
          "source_addresses"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_firewall_network_rule_collection_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_firewall_network_rule_collection_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_firewall_network_rule_collection_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_firewall_network_rule_collection_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set source_addresses to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-20",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_firewall_network_rule_collection[denied].rule[0].source_addresses",
        "subType": "Network",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-20",
        "title": "Azure Firewall Network Rule Collection allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_addresses to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-20",
        "path": [
          "resource",
          "azurerm_firewall_network_rule_collection[denied]",
          "rule[0]",
          "source_addresses"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_mariadb_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_mariadb_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_mariadb_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_mariadb_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-25",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_mariadb_firewall_rule[denied].start_ip_address",
        "subType": "Database",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-25",
        "title": "Azure MariaDB Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-25",
        "path": [
          "resource",
          "azurerm_mariadb_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_mysql_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_mysql_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_mysql_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_mysql_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-26",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_mysql_firewall_rule[denied].start_ip_address",
        "subType": "Database",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-26",
        "title": "Azure Mysql Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-26",
        "path": [
          "resource",
          "azurerm_mysql_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_network_security_group_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_network_security_group_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_network_security_group_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_network_security_group_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-33",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_network_security_group[denied].security_rule[0].source_address_prefix",
        "subType": "Network",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-33",
        "title": "Azure Network Security Group allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-33",
        "path": [
          "resource",
          "azurerm_network_security_group[denied]",
          "security_rule[0]",
          "source_address_prefix"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-33",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_network_security_group[denied_2].security_rule[0].source_address_prefixes",
        "subType": "Network",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-33",
        "title": "Azure Network Security Group allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 32,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-33",
        "path": [
          "resource",
          "azurerm_network_security_group[denied_2]",
          "security_rule[0]",
          "source_address_prefixes"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_network_security_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_network_security_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_network_security_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_network_security_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-35",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_network_security_rule[denied].source_address_prefix",
        "subType": "Network",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-35",
        "title": "Azure Network Security Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-35",
        "path": [
          "resource",
          "azurerm_network_security_rule[denied]",
          "source_address_prefix"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-35",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_network_security_rule[denied_2].source_address_prefixes",
        "subType": "Network",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-35",
        "title": "Azure Network Security Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_address_prefix to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 23,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-35",
        "path": [
          "resource",
          "azurerm_network_security_rule[denied_2]",
          "source_address_prefixes"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_network_security_rule_egress_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_network_security_rule_egress_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_network_security_rule_egress_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_network_security_rule_egress_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `destination_address_prefix` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-76",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.azurerm_network_security_rule[denied].destination_address_prefix",
        "subType": "Network",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-76",
        "title": "Azure Network Security Rule allows open egress",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview",
          "https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `destination_address_prefix` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-76",
        "path": [
          "resource",
          "azurerm_network_security_rule[denied]",
          "destination_address_prefix"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `destination_address_prefix` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-76",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.azurerm_network_security_rule[denied_2].destination_address_prefix",
        "subType": "Network",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-76",
        "title": "Azure Network Security Rule allows open egress",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview",
          "https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `destination_address_prefix` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-76",
        "path": [
          "resource",
          "azurerm_network_security_rule[denied_2]",
          "destination_address_prefix"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `destination_address_prefix` attribute to specific ranges e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-76",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.azurerm_network_security_rule[denied_3].destination_address_prefix",
        "subType": "Network",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-76",
        "title": "Azure Network Security Rule allows open egress",
        "references": [
          "https://docs.microsoft.com/en-us/azure/virtual-network/network-security-groups-overview",
          "https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `destination_address_prefix` attribute to specific ranges e.g. `192.168.1.0/24`"
        },
        "lineNumber": 16,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-76",
        "path": [
          "resource",
          "azurerm_network_security_rule[denied_3]",
          "destination_address_prefix"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_postgresql_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_postgresql_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_postgresql_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_postgresql_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-27",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_postgresql_firewall_rule[denied].start_ip_address",
        "subType": "Database",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-27",
        "title": "Azure Postgresql Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-27",
        "path": [
          "resource",
          "azurerm_postgresql_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_redis_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_redis_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_redis_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_redis_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-28",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_redis_firewall_rule[denied].start_ip",
        "subType": "Redis",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-28",
        "title": "Azure Redis Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-28",
        "path": [
          "resource",
          "azurerm_redis_firewall_rule[denied]",
          "start_ip"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_sql_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_sql_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_sql_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_sql_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-29",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_sql_firewall_rule[denied].start_ip_address",
        "subType": "Database",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-29",
        "title": "Azure SQL Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-29",
        "path": [
          "resource",
          "azurerm_sql_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_synapse_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_synapse_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\azurerm_synapse_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\azurerm_synapse_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-30",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.azurerm_synapse_firewall_rule[denied].start_ip_address",
        "subType": "Synapse",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-30",
        "title": "Azure Synapse Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set start_ip_address to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-30",
        "path": [
          "resource",
          "azurerm_synapse_firewall_rule[denied]",
          "start_ip_address"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\google_app_engine_firewall_rule_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\google_app_engine_firewall_rule_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\google_app_engine_firewall_rule_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\google_app_engine_firewall_rule_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set source_range to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-31",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.google_app_engine_firewall_rule[denied].source_range",
        "subType": "App Engine",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-31",
        "title": "GCP App Engine Firewall Rule allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_range to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-31",
        "path": [
          "resource",
          "google_app_engine_firewall_rule[denied]",
          "source_range"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\google_compute_firewall_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\google_compute_firewall_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\google_compute_firewall_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\google_compute_firewall_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set source_ranges to specific IP range only, e.g. `192.168.1.0/24`",
        "id": "SNYK-CC-TF-32",
        "impact": "That potentially everyone can access your resource",
        "msg": "resource.google_compute_firewall[denied].source_ranges",
        "subType": "Compute Engine",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-32",
        "title": "GCP Compute Firewall allows public access",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set source_ranges to specific IP range only, e.g. `192.168.1.0/24`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-32",
        "path": [
          "resource",
          "google_compute_firewall[denied]",
          "source_ranges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\google_compute_firewall_egress_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\google_compute_firewall_egress_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": true,
    "infrastructureAsCodeIssues": []
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\network_acls\\google_compute_firewall_egress_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\network_acls\\google_compute_firewall_egress_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `destination_ranges` attribute to specific net addresses e.g. `192.168.0.0/16`",
        "id": "SNYK-CC-TF-91",
        "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
        "msg": "resource.google_compute_firewall[denied].destination_ranges",
        "subType": "Compute Engine",
        "issue": "The security group rule allows open egress",
        "publicId": "SNYK-CC-TF-91",
        "title": "GCP Compute Firewall allows open egress",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The security group rule allows open egress",
          "impact": "Open egress can be used to exfiltrate data to unauthorized destinations, and enable access to potentially malicious resources",
          "resolve": "Set `destination_ranges` attribute to specific net addresses e.g. `192.168.0.0/16`"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-91",
        "path": [
          "resource",
          "google_compute_firewall[denied]",
          "destination_ranges"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_block_public_acls_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_block_public_acls_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "ignore_public_acls"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_block_public_acls_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_block_public_acls_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_block_public_policy_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_block_public_policy_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "ignore_public_acls"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_block_public_policy_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_block_public_policy_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_bucket_versioning_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_bucket_versioning_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[allowed]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[allowed]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[allowed].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[allowed]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[allowed].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[allowed]",
          "versioning",
          "mfa_delete"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_bucket_versioning_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_bucket_versioning_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[denied_3].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[denied_3]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[denied_2].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_2]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[denied].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[denied]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[denied_2].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[denied_2]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[denied_2]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_2]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[denied_3].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[denied_3]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[denied].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied]",
          "logging"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[denied]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[denied_3].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_3]",
          "logging"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[denied_3]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_3]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[denied].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[denied]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[denied_2].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[denied_2]",
          "versioning",
          "mfa_delete"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_bucket_versioning_mfa_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_bucket_versioning_mfa_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[allowed]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[allowed]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[allowed].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[allowed]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[allowed].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 2,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[allowed]",
          "versioning",
          "enabled"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_bucket_versioning_mfa_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_bucket_versioning_mfa_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[denied_3].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 11,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[denied_3]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[denied_2].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_2]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[denied].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[denied]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[denied_2].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[denied_2]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[denied_2]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_2]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[denied_3].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 10,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[denied_3]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[denied].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied]",
          "logging"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[denied]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[denied_3].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_3]",
          "logging"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[denied_3]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 9,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[denied_3]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[denied].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[denied]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[denied_2].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[denied_2]",
          "versioning",
          "mfa_delete"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_ignore_public_acls_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_ignore_public_acls_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "restrict_public_buckets"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_ignore_public_acls_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_ignore_public_acls_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_restrict_public_buckets_allowed.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_restrict_public_buckets_allowed.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[allowed].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[allowed]",
          "ignore_public_acls"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\aws_s3_restrict_public_buckets_denied.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\aws_s3_restrict_public_buckets_denied.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 5,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_policy"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `restrict_public_buckets` attribute to `true`",
        "id": "SNYK-CC-TF-98",
        "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].restrict_public_buckets",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.RestrictPublicBuckets` attribute to `true`",
          "terraform": "Set `restrict_public_buckets` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public policies and allow public access",
        "publicId": "SNYK-CC-TF-98",
        "title": "S3 restrict public bucket control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public policies and allow public access",
          "impact": "If public policy is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `restrict_public_buckets` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-98",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "restrict_public_buckets"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-95",
        "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
        "msg": "resource.aws_s3_bucket_public_access_block[denied_2].block_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicAcls` attribute to `true`",
          "terraform": "Set `block_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public ACLs",
        "publicId": "SNYK-CC-TF-95",
        "title": "S3 block public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public ACLs",
          "impact": "Anyone who can manage bucket's ACLs will be able to grant public access to the bucket",
          "resolve": "Set `block_public_acls` attribute to `true`"
        },
        "lineNumber": 4,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-95",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied_2]",
          "block_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `ignore_public_acls` attribute to `true`",
        "id": "SNYK-CC-TF-97",
        "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].ignore_public_acls",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.IgnorePublicAcls` attribute to `true`",
          "terraform": "Set `ignore_public_acls` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket will recognize public ACLs and allow public access",
        "publicId": "SNYK-CC-TF-97",
        "title": "S3 ignore public ACLs control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket will recognize public ACLs and allow public access",
          "impact": "If public ACL is attached to the bucket, anyone will be able to read and/or write to the bucket.",
          "resolve": "Set `ignore_public_acls` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-97",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "ignore_public_acls"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set `block_public_policy` attribute to `true`",
        "id": "SNYK-CC-TF-96",
        "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
        "msg": "resource.aws_s3_bucket_public_access_block[denied].block_public_policy",
        "remediation": {
          "cloudformation": "Set `Properties.PublicAccessBlockConfiguration.BlockPublicPolicy` attribute to `true`",
          "terraform": "Set `block_public_policy` attribute to `true`"
        },
        "subType": "S3",
        "issue": "Bucket does not prevent creation of public policies",
        "publicId": "SNYK-CC-TF-96",
        "title": "S3 block public policy control is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access.html",
          "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "Bucket does not prevent creation of public policies",
          "impact": "Anyone who can manage bucket's policies will be able to grant public access to the bucket.",
          "resolve": "Set `block_public_policy` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-96",
        "path": [
          "resource",
          "aws_s3_bucket_public_access_block[denied]",
          "block_public_policy"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[logging].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[logging]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[logging]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[logging]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[logging].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[logging]",
          "versioning",
          "mfa_delete"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\no_logging.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\no_logging.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[no_logging].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[no_logging]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[no_logging]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[no_logging]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[no_logging].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[no_logging]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[no_logging].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[no_logging]",
          "logging"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\s3_cis.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\s3_cis.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[writable]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[writable]"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `acl` attribute to `private`, or remove the attribute",
        "id": "SNYK-CC-TF-18",
        "impact": "That you may be leaking sensitive information to members of the public without realizing.",
        "msg": "input.resource.aws_s3_bucket[readable].acl",
        "remediation": {
          "cloudformation": "Set `AccessControl` attribute to `private`, or remove the attribute",
          "terraform": "Set `acl` attribute to `private`, or remove the attribute"
        },
        "subType": "S3",
        "issue": "That this S3 bucket is publicly readable without any authentication or authorization. ",
        "publicId": "SNYK-CC-TF-18",
        "title": "S3 Bucket is publicly readable",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That this S3 bucket is publicly readable without any authentication or authorization. ",
          "impact": "That you may be leaking sensitive information to members of the public without realizing.",
          "resolve": "Set `acl` attribute to `private`, or remove the attribute"
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-18",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[readable]",
          "acl"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[writable].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[writable]",
          "logging"
        ]
      },
      {
        "severity": "high",
        "resolve": "Set the `acl` attribute to `private`, or remove the attribute",
        "id": "SNYK-CC-TF-19",
        "impact": "That you may be leaking sensitive information to members of the public and this data could be modified with your knowledge.",
        "msg": "input.resource.aws_s3_bucket[writable].acl",
        "remediation": {
          "cloudformation": "Set the `Properties.AccessControl` attribute to `private`, or remove the attribute",
          "terraform": "Set the `acl` attribute to `private`, or remove the attribute"
        },
        "subType": "S3",
        "issue": "That this S3 bucket is publicly writeable without any authentication or authorization. ",
        "publicId": "SNYK-CC-TF-19",
        "title": "S3 Bucket is publicly readable and writable",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That this S3 bucket is publicly writeable without any authentication or authorization. ",
          "impact": "That you may be leaking sensitive information to members of the public and this data could be modified with your knowledge.",
          "resolve": "Set the `acl` attribute to `private`, or remove the attribute"
        },
        "lineNumber": 3,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-19",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[writable]",
          "acl"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[readable].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[readable]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[writable].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[writable]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[readable]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[readable]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[readable].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[readable]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[readable].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[readable]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[writable].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[writable]",
          "versioning",
          "mfa_delete"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\s3\\unencrypted_s3_bucket.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\s3\\unencrypted_s3_bucket.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[without_server_side_encryption_configuration].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[without_server_side_encryption_configuration]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[without_sse_algorithm].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[without_sse_algorithm]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[without_rule].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[without_rule]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[without_server_side_encryption_configuration].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[without_server_side_encryption_configuration]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[without_server_side_encryption_configuration].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[without_server_side_encryption_configuration]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Set `server_side_encryption_configuration` block attribute",
        "id": "SNYK-CC-TF-4",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "msg": "input.resource.aws_s3_bucket[without_server_side_encryption_configuration]",
        "remediation": {
          "cloudformation": "Set `BucketEncryption` attribute",
          "terraform": "Set `server_side_encryption_configuration` block attribute"
        },
        "subType": "S3",
        "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
        "publicId": "SNYK-CC-TF-4",
        "title": "Non-encrypted S3 Bucket",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That by default S3 buckets do not encrypt the objects that are stored.",
          "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
          "resolve": "Set `server_side_encryption_configuration` block attribute"
        },
        "lineNumber": 1,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-4",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[without_server_side_encryption_configuration]"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[without_apply_server_side_encryption_by_default].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[without_apply_server_side_encryption_by_default]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[without_rule].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[without_rule]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[without_sse_algorithm].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[without_sse_algorithm]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Add `logging` block attribute",
        "id": "SNYK-CC-TF-45",
        "impact": "There will be no audit trail of access to s3 objects",
        "msg": "input.resource.aws_s3_bucket[without_apply_server_side_encryption_by_default].logging",
        "remediation": {
          "cloudformation": "Set `Properties.LoggingConfiguration` attribute",
          "terraform": "Add `logging` block attribute"
        },
        "subType": "S3",
        "issue": "The s3 access logs will not be collected",
        "publicId": "SNYK-CC-TF-45",
        "title": "S3 server access logging is disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerLogs.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "The s3 access logs will not be collected",
          "impact": "There will be no audit trail of access to s3 objects",
          "resolve": "Add `logging` block attribute"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-45",
        "path": [
          "input",
          "resource",
          "aws_s3_bucket[without_apply_server_side_encryption_by_default]",
          "logging"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.enabled` attribute to `true`",
        "id": "SNYK-CC-TF-124",
        "impact": "Changes or deletion of objects will not be reversible",
        "msg": "resource.aws_s3_bucket[without_rule].versioning.enabled",
        "remediation": {
          "cloudformation": "Set `Properties.VersioningConfiguration.Status` attribute to `Enabled`",
          "terraform": "Set `versioning.enabled` attribute to `true`"
        },
        "subType": "S3",
        "issue": "S3 bucket versioning is disabled",
        "publicId": "SNYK-CC-TF-124",
        "title": "S3 bucket versioning disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket versioning is disabled",
          "impact": "Changes or deletion of objects will not be reversible",
          "resolve": "Set `versioning.enabled` attribute to `true`"
        },
        "lineNumber": 17,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-124",
        "path": [
          "resource",
          "aws_s3_bucket[without_rule]",
          "versioning",
          "enabled"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `enable_key_rotation` attribute to `true`",
        "id": "SNYK-CC-TF-14",
        "impact": "That data is being encrypted with a key which is valid for a longer period of time, resulting in a greater exposure window should that key be leaked",
        "msg": "input.resource.aws_kms_key[mykey].enable_key_rotation",
        "remediation": {
          "cloudformation": "Set `Properties.EnableKeyRotation` attribute to `true`",
          "terraform": "Set `enable_key_rotation` attribute to `true`"
        },
        "subType": "KMS",
        "issue": "That your encryption keys are not being rotated by AWS",
        "publicId": "SNYK-CC-TF-14",
        "title": "KMS key does not have key rotation enabled",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That your encryption keys are not being rotated by AWS",
          "impact": "That data is being encrypted with a key which is valid for a longer period of time, resulting in a greater exposure window should that key be leaked",
          "resolve": "Set `enable_key_rotation` attribute to `true`"
        },
        "lineNumber": 12,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-14",
        "path": [
          "input",
          "resource",
          "aws_kms_key[mykey]",
          "enable_key_rotation"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[without_sse_algorithm].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 33,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[without_sse_algorithm]",
          "versioning",
          "mfa_delete"
        ]
      },
      {
        "severity": "low",
        "resolve": "Set `versioning.mfa_delete` attribute to `true`",
        "id": "SNYK-CC-TF-127",
        "impact": "Object could be deleted without stronger MFA authorization",
        "msg": "resource.aws_s3_bucket[without_apply_server_side_encryption_by_default].versioning.mfa_delete",
        "subType": "S3",
        "issue": "S3 bucket will not enforce MFA login on delete requests",
        "publicId": "SNYK-CC-TF-127",
        "title": "S3 bucket MFA delete control disabled",
        "references": [
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html",
          "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "S3 bucket will not enforce MFA login on delete requests",
          "impact": "Object could be deleted without stronger MFA authorization",
          "resolve": "Set `versioning.mfa_delete` attribute to `true`"
        },
        "lineNumber": 24,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-127",
        "path": [
          "resource",
          "aws_s3_bucket[without_apply_server_side_encryption_by_default]",
          "versioning",
          "mfa_delete"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\security_group\\default_vpc_security_group.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\security_group\\default_vpc_security_group.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only reach known destinations. ",
        "id": "SNYK-CC-TF-6",
        "impact": "That traffic from a resource could reach any destination, in the event of a breach this means data could be uploaded externally or additional resources targeted",
        "msg": "input.resource.aws_default_security_group[default].egress",
        "subType": "VPC",
        "issue": "That outbound traffic is not restricted to a specific range from a resource",
        "publicId": "SNYK-CC-TF-6",
        "title": "Default VPC Security Group allows open egress",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That outbound traffic is not restricted to a specific range from a resource",
          "impact": "That traffic from a resource could reach any destination, in the event of a breach this means data could be uploaded externally or additional resources targeted",
          "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only reach known destinations. "
        },
        "lineNumber": 15,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-6",
        "path": [
          "input",
          "resource",
          "aws_default_security_group[default]",
          "egress"
        ]
      },
      {
        "severity": "medium",
        "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only come from known sources. ",
        "id": "SNYK-CC-TF-5",
        "impact": "That potentially everyone can access your resource",
        "msg": "input.resource.aws_default_security_group[default].ingress",
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-5",
        "title": "Default VPC Security Group allows open ingress",
        "references": [],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Updating the `cidr_block` attribute with a more restrictive IP range or a specific IP address to ensure traffic can only come from known sources. "
        },
        "lineNumber": 8,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-5",
        "path": [
          "input",
          "resource",
          "aws_default_security_group[default]",
          "ingress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\security_group\\sg_open_ssh.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\security_group\\sg_open_ssh.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "id": "SNYK-CC-TF-1",
        "impact": "That potentially everyone can access your resource",
        "msg": "input.resource.aws_security_group[allow_ssh].ingress",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "path": [
          "input",
          "resource",
          "aws_security_group[allow_ssh]",
          "ingress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\security_group\\sg_open_tcp.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\security_group\\sg_open_tcp.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "id": "SNYK-CC-TF-1",
        "impact": "That potentially everyone can access your resource",
        "msg": "input.resource.aws_security_group[allow_tcp].ingress",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "path": [
          "input",
          "resource",
          "aws_security_group[allow_tcp]",
          "ingress"
        ]
      }
    ]
  },
  {
    "meta": {
      "isPrivate": true,
      "isLicensesEnabled": false,
      "ignoreSettings": null,
      "org": "artsiom.chapialiou",
      "projectId": "",
      "policy": ""
    },
    "filesystemPolicy": false,
    "vulnerabilities": [],
    "dependencyCount": 0,
    "licensesPolicy": null,
    "ignoreSettings": null,
    "targetFile": "terraform\\security_group\\sg_open_udp.tf",
    "projectName": "infrastructure-as-code-goof",
    "org": "artsiom.chapialiou",
    "policy": "",
    "isPrivate": true,
    "targetFilePath": "D:\\TestProjects\\infrastructure-as-code-goof\\terraform\\security_group\\sg_open_udp.tf",
    "packageManager": "terraformconfig",
    "path": "D:\\TestProjects\\infrastructure-as-code-goof",
    "projectType": "terraformconfig",
    "ok": false,
    "infrastructureAsCodeIssues": [
      {
        "severity": "medium",
        "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`",
        "id": "SNYK-CC-TF-1",
        "impact": "That potentially everyone can access your resource",
        "msg": "input.resource.aws_security_group[allow_udp].ingress",
        "remediation": {
          "cloudformation": "Set `Properties.SecurityGroupIngress.CidrIp` attribute with a more restrictive IP, for example `192.16.0.0/24`",
          "terraform": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "subType": "VPC",
        "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
        "publicId": "SNYK-CC-TF-1",
        "title": "Security Group allows open ingress",
        "references": [
          "https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"
        ],
        "isIgnored": false,
        "iacDescription": {
          "issue": "That inbound traffic is allowed to a resource from any source instead of a restricted range",
          "impact": "That potentially everyone can access your resource",
          "resolve": "Set `cidr_block` attribute with a more restrictive IP, for example `192.16.0.0/24`"
        },
        "lineNumber": 6,
        "documentation": "https://security.snyk.io/rules/cloud/SNYK-CC-TF-1",
        "path": [
          "input",
          "resource",
          "aws_security_group[allow_udp]",
          "ingress"
        ]
      }
    ]
  }
]
