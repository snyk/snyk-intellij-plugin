package io.snyk.plugin.cli

import io.snyk.plugin.Severity

class Vulnerability {
    companion object {
        const val OVERVIEW_MARK = "## Overview"
    }

    lateinit var id: String
    lateinit var identifiers: Identifiers
    lateinit var title: String
    lateinit var description: String
    lateinit var language: String
    lateinit var modificationTime: String
    lateinit var moduleName: String
    lateinit var packageManager: String
    lateinit var packageName: String
    lateinit var severity: String
    lateinit var name: String
    lateinit var version: String
    lateinit var exploit: String

    lateinit var CVSSv3: String
    lateinit var cvssScore: String

    lateinit var fixedIn: Array<String>
    lateinit var from: Array<String>
    lateinit var upgradePath: Array<String?>

    fun getPackageNameTitle(): String = "$packageName@$version: $title"

    fun getOverview(): String {
        val tempStr = description.substring(OVERVIEW_MARK.length, description.length)

        val endIndex = tempStr.indexOf("## ")

        return if (endIndex > 0) {
            tempStr.substring(0, endIndex)
        } else {
            ""
        }
    }

    // todo: (by Pavel)
    //  How about using comparator for tree nodes? Issue I see atm: this code cannot handle other issues e.g. critical if this will come later.
    fun getSeverityIndex(): Int = Severity.getIndex(severity)
}

class Identifiers {
    lateinit var CWE: Array<String>
    lateinit var CVE: Array<String>
}
